{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/shiki@1.3.0/node_modules/shiki/dist/langs/nextflow.mjs"],
  "sourcesContent": ["const lang = Object.freeze({ \"displayName\": \"Nextflow\", \"name\": \"nextflow\", \"patterns\": [{ \"include\": \"#nfl-rules\" }], \"repository\": { \"implicit-variables\": { \"patterns\": [{ \"match\": \"(?<=[^\\\\.\\\\w]|^)(params|nextflow|workflow|launchDir|moduleDir|projectDir|workDir)\\\\b\", \"name\": \"variable.language.nextflow\" }] }, \"include-statement\": { \"patterns\": [{ \"match\": \"^\\\\b(include)\\\\b\", \"name\": \"keyword.nextflow\" }, { \"match\": \"\\\\b(from)\\\\b\", \"name\": \"keyword.nextflow\" }] }, \"nfl-rules\": { \"patterns\": [{ \"include\": \"#process-def\" }, { \"include\": \"#workflow-def\" }, { \"include\": \"#code-block\" }, { \"include\": \"#include-statement\" }, { \"include\": \"#implicit-variables\" }, { \"begin\": \"(\\\\w*\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"source.nextflow-groovy\" }] } }, \"comment\": \"method call and parens\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#nfl-rules\" }] }, { \"begin\": \"{\", \"comment\": \"braces\", \"end\": \"}\", \"patterns\": [{ \"include\": \"#nfl-rules\" }] }, { \"include\": \"source.nextflow-groovy\" }] }, \"process-body\": { \"patterns\": [{ \"match\": \"(?:accelerator|afterScript|beforeScript|cache|cpus|conda|container|containerOptions|clusterOptions|debug|disk|echo|errorStrategy|executor|ext|label|machineType|maxErrors|maxForks|maxRetries|memory|module|penv|pod|publishDir|queue|resourceLabels|scratch|stageInMode|stageOutMode|storeDir|tag|time)\\\\b\", \"name\": \"entity.name.function.nextflow\" }, { \"match\": \"(?:input|output|when|script|shell|exec):\", \"name\": \"constant.block.nextflow\" }, { \"match\": \"\\\\b(tuple|set|path|file|val|stdout)(\\\\(|\\\\s)\", \"name\": \"entity.name.function.nextflow\" }, { \"include\": \"#implicit-variables\" }, { \"begin\": \"(\\\\w*\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"source.nextflow-groovy\" }] } }, \"comment\": \"method call and parens\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#process-body\" }] }, { \"begin\": \"{\", \"comment\": \"braces\", \"end\": \"}\", \"patterns\": [{ \"include\": \"#process-body\" }] }, { \"include\": \"source.nextflow-groovy#comments\" }, { \"include\": \"source.nextflow-groovy#support-functions\" }, { \"include\": \"source.nextflow-groovy#keyword\" }, { \"include\": \"source.nextflow-groovy#values\" }, { \"include\": \"source.nextflow-groovy#anonymous-classes-and-new\" }, { \"include\": \"source.nextflow-groovy#types\" }, { \"include\": \"source.nextflow-groovy#parens\" }, { \"include\": \"source.nextflow-groovy#closures\" }, { \"include\": \"source.nextflow-groovy#braces\" }] }, \"process-def\": { \"begin\": `^\\\\s*(process)\\\\s+(\\\\w+|\"[^\"]+\"|'[^']+')\\\\s*{`, \"beginCaptures\": { \"1\": { \"name\": \"keyword.nextflow\" }, \"2\": { \"name\": \"function.nextflow\" } }, \"end\": \"}\", \"name\": \"process.nextflow\", \"patterns\": [{ \"include\": \"#process-body\" }] }, \"workflow-body\": { \"patterns\": [{ \"include\": \"#implicit-variables\" }, { \"match\": \"(?:take|main|emit):\", \"name\": \"constant.block.nextflow\" }, { \"match\": \"(?<=[\\\\s\\\\.])(branch|buffer|close|collate|collect|collectFile|combine|concat|count|countBy|cross|distinct|dump|filter|first|flatMap|flatten|groupTuple|ifEmpty|join|last|map|max|merge|min|mix|multiMap|randomSample|reduce|set|splitCsv|splitFasta|splitFastq|splitText|sum|take|tap|toInteger|toList|toSortedList|transpose|unique|until|view)(?=[{\\\\(\\\\s])\", \"name\": \"entity.name.function.nextflow\" }, { \"captures\": { \"1\": { \"name\": \"keyword.nextflow\" }, \"2\": { \"name\": \"entity.name.function.nextflow\" } }, \"comment\": \"Channel factory single line\", \"match\": \"\\\\b((?:C|c)hannel\\\\.)((fromList|fromPath|fromFilePairs|fromSRA|from|of|empty|value|watchPath)\\\\W)?\" }, { \"begin\": \"\\\\b((?:C|c)hannel)\\\\s*$\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.nextflow\" } }, \"comment\": \"Channel factory multi-line\", \"end\": \"(^\\\\s*)(?:(\\\\.)(fromList|fromPath|fromFilePairs|fromSRA|from|of|empty|value|watchPath)\\\\W)?\", \"endCaptures\": { \"1\": { \"name\": \"keyword.nextflow\" }, \"2\": { \"name\": \"keyword.nextflow\" }, \"3\": { \"name\": \"entity.name.function.nextflow\" } } }, { \"begin\": \"(\\\\w*\\\\()\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"source.nextflow-groovy\" }] } }, \"comment\": \"method call and parens\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#workflow-body\" }] }, { \"begin\": \"{\", \"comment\": \"braces\", \"end\": \"}\", \"patterns\": [{ \"include\": \"#workflow-body\" }] }, { \"include\": \"source.nextflow-groovy#comments\" }, { \"include\": \"source.nextflow-groovy#support-functions\" }, { \"include\": \"source.nextflow-groovy#keyword\" }, { \"include\": \"source.nextflow-groovy#values\" }, { \"include\": \"source.nextflow-groovy#anonymous-classes-and-new\" }, { \"include\": \"source.nextflow-groovy#types\" }, { \"include\": \"source.nextflow-groovy#parens\" }, { \"include\": \"source.nextflow-groovy#closures\" }, { \"include\": \"source.nextflow-groovy#braces\" }] }, \"workflow-def\": { \"begin\": `^\\\\s*(workflow)(?:\\\\s+(\\\\w+|\"[^\"]+\"|'[^']+'))?\\\\s*{`, \"beginCaptures\": { \"1\": { \"name\": \"keyword.nextflow\" }, \"2\": { \"name\": \"constant.nextflow\" } }, \"end\": \"}\", \"name\": \"workflow.nextflow\", \"patterns\": [{ \"include\": \"#workflow-body\" }] } }, \"scopeName\": \"source.nextflow\", \"aliases\": [\"nf\"] });\nvar nextflow = [\n  lang\n];\n\nexport { nextflow as default };\n"],
  "mappings": "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",
  "names": []
}
