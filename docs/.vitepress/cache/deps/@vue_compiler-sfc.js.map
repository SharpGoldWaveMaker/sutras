{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@vue+compiler-sfc@3.4.23/node_modules/@vue/compiler-sfc/dist/compiler-sfc.esm-browser.js"],
  "sourcesContent": ["/**\n* @vue/compiler-sfc v3.4.23\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n/*! #__NO_SIDE_EFFECTS__ */\n// @__NO_SIDE_EFFECTS__\nfunction makeMap(str, expectsLowerCase) {\n  const set = new Set(str.split(\",\"));\n  return expectsLowerCase ? (val) => set.has(val.toLowerCase()) : (val) => set.has(val);\n}\n\nconst EMPTY_OBJ = Object.freeze({}) ;\nconst NOOP = () => {\n};\nconst NO = () => false;\nconst isOn = (key) => key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110 && // uppercase letter\n(key.charCodeAt(2) > 122 || key.charCodeAt(2) < 97);\nconst extend = Object.assign;\nconst hasOwnProperty$4 = Object.prototype.hasOwnProperty;\nconst hasOwn = (val, key) => hasOwnProperty$4.call(val, key);\nconst isArray$3 = Array.isArray;\nconst isMap = (val) => toTypeString(val) === \"[object Map]\";\nconst isSet = (val) => toTypeString(val) === \"[object Set]\";\nconst isFunction$1 = (val) => typeof val === \"function\";\nconst isString$2 = (val) => typeof val === \"string\";\nconst isSymbol$1 = (val) => typeof val === \"symbol\";\nconst isObject$2 = (val) => val !== null && typeof val === \"object\";\nconst objectToString$1 = Object.prototype.toString;\nconst toTypeString = (value) => objectToString$1.call(value);\nconst isPlainObject = (val) => toTypeString(val) === \"[object Object]\";\nconst isReservedProp = /* @__PURE__ */ makeMap(\n  // the leading comma is intentional so empty string \"\" is also included\n  \",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted\"\n);\nconst isBuiltInDirective = /* @__PURE__ */ makeMap(\n  \"bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo\"\n);\nconst cacheStringFunction = (fn) => {\n  const cache = /* @__PURE__ */ Object.create(null);\n  return (str) => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\nconst camelizeRE = /-(\\w)/g;\nconst camelize = cacheStringFunction((str) => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : \"\");\n});\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = cacheStringFunction(\n  (str) => str.replace(hyphenateRE, \"-$1\").toLowerCase()\n);\nconst capitalize$1 = cacheStringFunction((str) => {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n});\nconst toHandlerKey = cacheStringFunction((str) => {\n  const s = str ? `on${capitalize$1(str)}` : ``;\n  return s;\n});\nconst identRE = /^[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*$/;\nfunction genPropsAccessExp(name) {\n  return identRE.test(name) ? `__props.${name}` : `__props[${JSON.stringify(name)}]`;\n}\n\nconst PatchFlagNames = {\n  [1]: `TEXT`,\n  [2]: `CLASS`,\n  [4]: `STYLE`,\n  [8]: `PROPS`,\n  [16]: `FULL_PROPS`,\n  [32]: `NEED_HYDRATION`,\n  [64]: `STABLE_FRAGMENT`,\n  [128]: `KEYED_FRAGMENT`,\n  [256]: `UNKEYED_FRAGMENT`,\n  [512]: `NEED_PATCH`,\n  [1024]: `DYNAMIC_SLOTS`,\n  [2048]: `DEV_ROOT_FRAGMENT`,\n  [-1]: `HOISTED`,\n  [-2]: `BAIL`\n};\n\nconst slotFlagsText = {\n  [1]: \"STABLE\",\n  [2]: \"DYNAMIC\",\n  [3]: \"FORWARDED\"\n};\n\nconst GLOBALS_ALLOWED = \"Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error\";\nconst isGloballyAllowed = /* @__PURE__ */ makeMap(GLOBALS_ALLOWED);\n\nconst range = 2;\nfunction generateCodeFrame(source, start = 0, end = source.length) {\n  let lines = source.split(/(\\r?\\n)/);\n  const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\n  lines = lines.filter((_, idx) => idx % 2 === 0);\n  let count = 0;\n  const res = [];\n  for (let i = 0; i < lines.length; i++) {\n    count += lines[i].length + (newlineSequences[i] && newlineSequences[i].length || 0);\n    if (count >= start) {\n      for (let j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length)\n          continue;\n        const line = j + 1;\n        res.push(\n          `${line}${\" \".repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`\n        );\n        const lineLength = lines[j].length;\n        const newLineSeqLength = newlineSequences[j] && newlineSequences[j].length || 0;\n        if (j === i) {\n          const pad = start - (count - (lineLength + newLineSeqLength));\n          const length = Math.max(\n            1,\n            end > count ? lineLength - pad : end - start\n          );\n          res.push(`   |  ` + \" \".repeat(pad) + \"^\".repeat(length));\n        } else if (j > i) {\n          if (end > count) {\n            const length = Math.max(Math.min(end - count, lineLength), 1);\n            res.push(`   |  ` + \"^\".repeat(length));\n          }\n          count += lineLength + newLineSeqLength;\n        }\n      }\n      break;\n    }\n  }\n  return res.join(\"\\n\");\n}\n\nfunction normalizeStyle(value) {\n  if (isArray$3(value)) {\n    const res = {};\n    for (let i = 0; i < value.length; i++) {\n      const item = value[i];\n      const normalized = isString$2(item) ? parseStringStyle(item) : normalizeStyle(item);\n      if (normalized) {\n        for (const key in normalized) {\n          res[key] = normalized[key];\n        }\n      }\n    }\n    return res;\n  } else if (isString$2(value) || isObject$2(value)) {\n    return value;\n  }\n}\nconst listDelimiterRE = /;(?![^(]*\\))/g;\nconst propertyDelimiterRE = /:([^]+)/;\nconst styleCommentRE = /\\/\\*[^]*?\\*\\//g;\nfunction parseStringStyle(cssText) {\n  const ret = {};\n  cssText.replace(styleCommentRE, \"\").split(listDelimiterRE).forEach((item) => {\n    if (item) {\n      const tmp = item.split(propertyDelimiterRE);\n      tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return ret;\n}\nfunction stringifyStyle(styles) {\n  let ret = \"\";\n  if (!styles || isString$2(styles)) {\n    return ret;\n  }\n  for (const key in styles) {\n    const value = styles[key];\n    const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\n    if (isString$2(value) || typeof value === \"number\") {\n      ret += `${normalizedKey}:${value};`;\n    }\n  }\n  return ret;\n}\nfunction normalizeClass(value) {\n  let res = \"\";\n  if (isString$2(value)) {\n    res = value;\n  } else if (isArray$3(value)) {\n    for (let i = 0; i < value.length; i++) {\n      const normalized = normalizeClass(value[i]);\n      if (normalized) {\n        res += normalized + \" \";\n      }\n    }\n  } else if (isObject$2(value)) {\n    for (const name in value) {\n      if (value[name]) {\n        res += name + \" \";\n      }\n    }\n  }\n  return res.trim();\n}\n\nconst HTML_TAGS = \"html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot\";\nconst SVG_TAGS = \"svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view\";\nconst MATH_TAGS = \"annotation,annotation-xml,maction,maligngroup,malignmark,math,menclose,merror,mfenced,mfrac,mfraction,mglyph,mi,mlabeledtr,mlongdiv,mmultiscripts,mn,mo,mover,mpadded,mphantom,mprescripts,mroot,mrow,ms,mscarries,mscarry,msgroup,msline,mspace,msqrt,msrow,mstack,mstyle,msub,msubsup,msup,mtable,mtd,mtext,mtr,munder,munderover,none,semantics\";\nconst VOID_TAGS = \"area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr\";\nconst isHTMLTag = /* @__PURE__ */ makeMap(HTML_TAGS);\nconst isSVGTag = /* @__PURE__ */ makeMap(SVG_TAGS);\nconst isMathMLTag = /* @__PURE__ */ makeMap(MATH_TAGS);\nconst isVoidTag = /* @__PURE__ */ makeMap(VOID_TAGS);\n\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\nconst isBooleanAttr = /* @__PURE__ */ makeMap(\n  specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`\n);\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\nconst attrValidationCache = {};\nfunction isSSRSafeAttrName(name) {\n  if (attrValidationCache.hasOwnProperty(name)) {\n    return attrValidationCache[name];\n  }\n  const isUnsafe = unsafeAttrCharRE.test(name);\n  if (isUnsafe) {\n    console.error(`unsafe attribute name: ${name}`);\n  }\n  return attrValidationCache[name] = !isUnsafe;\n}\nconst propsToAttrMap = {\n  acceptCharset: \"accept-charset\",\n  className: \"class\",\n  htmlFor: \"for\",\n  httpEquiv: \"http-equiv\"\n};\nconst isKnownHtmlAttr = /* @__PURE__ */ makeMap(\n  `accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap`\n);\nconst isKnownSvgAttr = /* @__PURE__ */ makeMap(\n  `xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xmlns:xlink,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`\n);\n\nconst escapeRE = /[\"'&<>]/;\nfunction escapeHtml(string) {\n  const str = \"\" + string;\n  const match = escapeRE.exec(str);\n  if (!match) {\n    return str;\n  }\n  let html = \"\";\n  let escaped;\n  let index;\n  let lastIndex = 0;\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escaped = \"&quot;\";\n        break;\n      case 38:\n        escaped = \"&amp;\";\n        break;\n      case 39:\n        escaped = \"&#39;\";\n        break;\n      case 60:\n        escaped = \"&lt;\";\n        break;\n      case 62:\n        escaped = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    if (lastIndex !== index) {\n      html += str.slice(lastIndex, index);\n    }\n    lastIndex = index + 1;\n    html += escaped;\n  }\n  return lastIndex !== index ? html + str.slice(lastIndex, index) : html;\n}\n\nconst toDisplayString = (val) => {\n  return isString$2(val) ? val : val == null ? \"\" : isArray$3(val) || isObject$2(val) && (val.toString === objectToString$1 || !isFunction$1(val.toString)) ? JSON.stringify(val, replacer, 2) : String(val);\n};\nconst replacer = (_key, val) => {\n  if (val && val.__v_isRef) {\n    return replacer(_key, val.value);\n  } else if (isMap(val)) {\n    return {\n      [`Map(${val.size})`]: [...val.entries()].reduce(\n        (entries, [key, val2], i) => {\n          entries[stringifySymbol(key, i) + \" =>\"] = val2;\n          return entries;\n        },\n        {}\n      )\n    };\n  } else if (isSet(val)) {\n    return {\n      [`Set(${val.size})`]: [...val.values()].map((v) => stringifySymbol(v))\n    };\n  } else if (isSymbol$1(val)) {\n    return stringifySymbol(val);\n  } else if (isObject$2(val) && !isArray$3(val) && !isPlainObject(val)) {\n    return String(val);\n  }\n  return val;\n};\nconst stringifySymbol = (v, i = \"\") => {\n  var _a;\n  return (\n    // Symbol.description in es2019+ so we need to cast here to pass\n    // the lib: es2016 check\n    isSymbol$1(v) ? `Symbol(${(_a = v.description) != null ? _a : i})` : v\n  );\n};\n\nconst FRAGMENT = Symbol(`Fragment` );\nconst TELEPORT = Symbol(`Teleport` );\nconst SUSPENSE = Symbol(`Suspense` );\nconst KEEP_ALIVE = Symbol(`KeepAlive` );\nconst BASE_TRANSITION = Symbol(`BaseTransition` );\nconst OPEN_BLOCK = Symbol(`openBlock` );\nconst CREATE_BLOCK = Symbol(`createBlock` );\nconst CREATE_ELEMENT_BLOCK = Symbol(`createElementBlock` );\nconst CREATE_VNODE = Symbol(`createVNode` );\nconst CREATE_ELEMENT_VNODE = Symbol(`createElementVNode` );\nconst CREATE_COMMENT = Symbol(`createCommentVNode` );\nconst CREATE_TEXT = Symbol(`createTextVNode` );\nconst CREATE_STATIC = Symbol(`createStaticVNode` );\nconst RESOLVE_COMPONENT = Symbol(`resolveComponent` );\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(\n  `resolveDynamicComponent` \n);\nconst RESOLVE_DIRECTIVE = Symbol(`resolveDirective` );\nconst RESOLVE_FILTER = Symbol(`resolveFilter` );\nconst WITH_DIRECTIVES = Symbol(`withDirectives` );\nconst RENDER_LIST = Symbol(`renderList` );\nconst RENDER_SLOT = Symbol(`renderSlot` );\nconst CREATE_SLOTS = Symbol(`createSlots` );\nconst TO_DISPLAY_STRING = Symbol(`toDisplayString` );\nconst MERGE_PROPS = Symbol(`mergeProps` );\nconst NORMALIZE_CLASS = Symbol(`normalizeClass` );\nconst NORMALIZE_STYLE = Symbol(`normalizeStyle` );\nconst NORMALIZE_PROPS = Symbol(`normalizeProps` );\nconst GUARD_REACTIVE_PROPS = Symbol(`guardReactiveProps` );\nconst TO_HANDLERS = Symbol(`toHandlers` );\nconst CAMELIZE = Symbol(`camelize` );\nconst CAPITALIZE = Symbol(`capitalize` );\nconst TO_HANDLER_KEY = Symbol(`toHandlerKey` );\nconst SET_BLOCK_TRACKING = Symbol(`setBlockTracking` );\nconst PUSH_SCOPE_ID = Symbol(`pushScopeId` );\nconst POP_SCOPE_ID = Symbol(`popScopeId` );\nconst WITH_CTX = Symbol(`withCtx` );\nconst UNREF = Symbol(`unref` );\nconst IS_REF = Symbol(`isRef` );\nconst WITH_MEMO = Symbol(`withMemo` );\nconst IS_MEMO_SAME = Symbol(`isMemoSame` );\nconst helperNameMap = {\n  [FRAGMENT]: `Fragment`,\n  [TELEPORT]: `Teleport`,\n  [SUSPENSE]: `Suspense`,\n  [KEEP_ALIVE]: `KeepAlive`,\n  [BASE_TRANSITION]: `BaseTransition`,\n  [OPEN_BLOCK]: `openBlock`,\n  [CREATE_BLOCK]: `createBlock`,\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n  [CREATE_VNODE]: `createVNode`,\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n  [CREATE_COMMENT]: `createCommentVNode`,\n  [CREATE_TEXT]: `createTextVNode`,\n  [CREATE_STATIC]: `createStaticVNode`,\n  [RESOLVE_COMPONENT]: `resolveComponent`,\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\n  [RESOLVE_FILTER]: `resolveFilter`,\n  [WITH_DIRECTIVES]: `withDirectives`,\n  [RENDER_LIST]: `renderList`,\n  [RENDER_SLOT]: `renderSlot`,\n  [CREATE_SLOTS]: `createSlots`,\n  [TO_DISPLAY_STRING]: `toDisplayString`,\n  [MERGE_PROPS]: `mergeProps`,\n  [NORMALIZE_CLASS]: `normalizeClass`,\n  [NORMALIZE_STYLE]: `normalizeStyle`,\n  [NORMALIZE_PROPS]: `normalizeProps`,\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n  [TO_HANDLERS]: `toHandlers`,\n  [CAMELIZE]: `camelize`,\n  [CAPITALIZE]: `capitalize`,\n  [TO_HANDLER_KEY]: `toHandlerKey`,\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\n  [PUSH_SCOPE_ID]: `pushScopeId`,\n  [POP_SCOPE_ID]: `popScopeId`,\n  [WITH_CTX]: `withCtx`,\n  [UNREF]: `unref`,\n  [IS_REF]: `isRef`,\n  [WITH_MEMO]: `withMemo`,\n  [IS_MEMO_SAME]: `isMemoSame`\n};\nfunction registerRuntimeHelpers(helpers) {\n  Object.getOwnPropertySymbols(helpers).forEach((s) => {\n    helperNameMap[s] = helpers[s];\n  });\n}\n\nconst Namespaces = {\n  \"HTML\": 0,\n  \"0\": \"HTML\",\n  \"SVG\": 1,\n  \"1\": \"SVG\",\n  \"MATH_ML\": 2,\n  \"2\": \"MATH_ML\"\n};\nconst NodeTypes = {\n  \"ROOT\": 0,\n  \"0\": \"ROOT\",\n  \"ELEMENT\": 1,\n  \"1\": \"ELEMENT\",\n  \"TEXT\": 2,\n  \"2\": \"TEXT\",\n  \"COMMENT\": 3,\n  \"3\": \"COMMENT\",\n  \"SIMPLE_EXPRESSION\": 4,\n  \"4\": \"SIMPLE_EXPRESSION\",\n  \"INTERPOLATION\": 5,\n  \"5\": \"INTERPOLATION\",\n  \"ATTRIBUTE\": 6,\n  \"6\": \"ATTRIBUTE\",\n  \"DIRECTIVE\": 7,\n  \"7\": \"DIRECTIVE\",\n  \"COMPOUND_EXPRESSION\": 8,\n  \"8\": \"COMPOUND_EXPRESSION\",\n  \"IF\": 9,\n  \"9\": \"IF\",\n  \"IF_BRANCH\": 10,\n  \"10\": \"IF_BRANCH\",\n  \"FOR\": 11,\n  \"11\": \"FOR\",\n  \"TEXT_CALL\": 12,\n  \"12\": \"TEXT_CALL\",\n  \"VNODE_CALL\": 13,\n  \"13\": \"VNODE_CALL\",\n  \"JS_CALL_EXPRESSION\": 14,\n  \"14\": \"JS_CALL_EXPRESSION\",\n  \"JS_OBJECT_EXPRESSION\": 15,\n  \"15\": \"JS_OBJECT_EXPRESSION\",\n  \"JS_PROPERTY\": 16,\n  \"16\": \"JS_PROPERTY\",\n  \"JS_ARRAY_EXPRESSION\": 17,\n  \"17\": \"JS_ARRAY_EXPRESSION\",\n  \"JS_FUNCTION_EXPRESSION\": 18,\n  \"18\": \"JS_FUNCTION_EXPRESSION\",\n  \"JS_CONDITIONAL_EXPRESSION\": 19,\n  \"19\": \"JS_CONDITIONAL_EXPRESSION\",\n  \"JS_CACHE_EXPRESSION\": 20,\n  \"20\": \"JS_CACHE_EXPRESSION\",\n  \"JS_BLOCK_STATEMENT\": 21,\n  \"21\": \"JS_BLOCK_STATEMENT\",\n  \"JS_TEMPLATE_LITERAL\": 22,\n  \"22\": \"JS_TEMPLATE_LITERAL\",\n  \"JS_IF_STATEMENT\": 23,\n  \"23\": \"JS_IF_STATEMENT\",\n  \"JS_ASSIGNMENT_EXPRESSION\": 24,\n  \"24\": \"JS_ASSIGNMENT_EXPRESSION\",\n  \"JS_SEQUENCE_EXPRESSION\": 25,\n  \"25\": \"JS_SEQUENCE_EXPRESSION\",\n  \"JS_RETURN_STATEMENT\": 26,\n  \"26\": \"JS_RETURN_STATEMENT\"\n};\nconst ElementTypes = {\n  \"ELEMENT\": 0,\n  \"0\": \"ELEMENT\",\n  \"COMPONENT\": 1,\n  \"1\": \"COMPONENT\",\n  \"SLOT\": 2,\n  \"2\": \"SLOT\",\n  \"TEMPLATE\": 3,\n  \"3\": \"TEMPLATE\"\n};\nconst ConstantTypes = {\n  \"NOT_CONSTANT\": 0,\n  \"0\": \"NOT_CONSTANT\",\n  \"CAN_SKIP_PATCH\": 1,\n  \"1\": \"CAN_SKIP_PATCH\",\n  \"CAN_HOIST\": 2,\n  \"2\": \"CAN_HOIST\",\n  \"CAN_STRINGIFY\": 3,\n  \"3\": \"CAN_STRINGIFY\"\n};\nconst locStub = {\n  start: { line: 1, column: 1, offset: 0 },\n  end: { line: 1, column: 1, offset: 0 },\n  source: \"\"\n};\nfunction createRoot(children, source = \"\") {\n  return {\n    type: 0,\n    source,\n    children,\n    helpers: /* @__PURE__ */ new Set(),\n    components: [],\n    directives: [],\n    hoists: [],\n    imports: [],\n    cached: 0,\n    temps: 0,\n    codegenNode: void 0,\n    loc: locStub\n  };\n}\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\n  if (context) {\n    if (isBlock) {\n      context.helper(OPEN_BLOCK);\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\n    } else {\n      context.helper(getVNodeHelper(context.inSSR, isComponent));\n    }\n    if (directives) {\n      context.helper(WITH_DIRECTIVES);\n    }\n  }\n  return {\n    type: 13,\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent,\n    loc\n  };\n}\nfunction createArrayExpression(elements, loc = locStub) {\n  return {\n    type: 17,\n    loc,\n    elements\n  };\n}\nfunction createObjectExpression(properties, loc = locStub) {\n  return {\n    type: 15,\n    loc,\n    properties\n  };\n}\nfunction createObjectProperty(key, value) {\n  return {\n    type: 16,\n    loc: locStub,\n    key: isString$2(key) ? createSimpleExpression(key, true) : key,\n    value\n  };\n}\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0) {\n  return {\n    type: 4,\n    loc,\n    content,\n    isStatic,\n    constType: isStatic ? 3 : constType\n  };\n}\nfunction createInterpolation(content, loc) {\n  return {\n    type: 5,\n    loc,\n    content: isString$2(content) ? createSimpleExpression(content, false, loc) : content\n  };\n}\nfunction createCompoundExpression(children, loc = locStub) {\n  return {\n    type: 8,\n    loc,\n    children\n  };\n}\nfunction createCallExpression(callee, args = [], loc = locStub) {\n  return {\n    type: 14,\n    loc,\n    callee,\n    arguments: args\n  };\n}\nfunction createFunctionExpression(params, returns = void 0, newline = false, isSlot = false, loc = locStub) {\n  return {\n    type: 18,\n    params,\n    returns,\n    newline,\n    isSlot,\n    loc\n  };\n}\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\n  return {\n    type: 19,\n    test,\n    consequent,\n    alternate,\n    newline,\n    loc: locStub\n  };\n}\nfunction createCacheExpression(index, value, isVNode = false) {\n  return {\n    type: 20,\n    index,\n    value,\n    isVNode,\n    loc: locStub\n  };\n}\nfunction createBlockStatement(body) {\n  return {\n    type: 21,\n    body,\n    loc: locStub\n  };\n}\nfunction createTemplateLiteral(elements) {\n  return {\n    type: 22,\n    elements,\n    loc: locStub\n  };\n}\nfunction createIfStatement(test, consequent, alternate) {\n  return {\n    type: 23,\n    test,\n    consequent,\n    alternate,\n    loc: locStub\n  };\n}\nfunction createAssignmentExpression(left, right) {\n  return {\n    type: 24,\n    left,\n    right,\n    loc: locStub\n  };\n}\nfunction createSequenceExpression(expressions) {\n  return {\n    type: 25,\n    expressions,\n    loc: locStub\n  };\n}\nfunction createReturnStatement(returns) {\n  return {\n    type: 26,\n    returns,\n    loc: locStub\n  };\n}\nfunction getVNodeHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\n}\nfunction getVNodeBlockHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\n}\nfunction convertToBlock(node, { helper, removeHelper, inSSR }) {\n  if (!node.isBlock) {\n    node.isBlock = true;\n    removeHelper(getVNodeHelper(inSSR, node.isComponent));\n    helper(OPEN_BLOCK);\n    helper(getVNodeBlockHelper(inSSR, node.isComponent));\n  }\n}\n\n// Generated using scripts/write-decode-map.ts\nvar htmlDecodeTree = new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n\n// Generated using scripts/write-decode-map.ts\nvar xmlDecodeTree = new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n\n// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a$1;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nconst fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a$1 = String.fromCodePoint) !== null && _a$1 !== void 0 ? _a$1 : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nfunction replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nvar BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber$2(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber$2(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nvar DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nclass EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber$2(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber$2(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nfunction determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\ngetDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nfunction decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n\nconst defaultDelimitersOpen = new Uint8Array([123, 123]);\nconst defaultDelimitersClose = new Uint8Array([125, 125]);\nfunction isTagStartChar(c) {\n  return c >= 97 && c <= 122 || c >= 65 && c <= 90;\n}\nfunction isWhitespace$1(c) {\n  return c === 32 || c === 10 || c === 9 || c === 12 || c === 13;\n}\nfunction isEndOfTagSection(c) {\n  return c === 47 || c === 62 || isWhitespace$1(c);\n}\nfunction toCharCodes(str) {\n  const ret = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    ret[i] = str.charCodeAt(i);\n  }\n  return ret;\n}\nconst Sequences = {\n  Cdata: new Uint8Array([67, 68, 65, 84, 65, 91]),\n  // CDATA[\n  CdataEnd: new Uint8Array([93, 93, 62]),\n  // ]]>\n  CommentEnd: new Uint8Array([45, 45, 62]),\n  // `-->`\n  ScriptEnd: new Uint8Array([60, 47, 115, 99, 114, 105, 112, 116]),\n  // `<\\/script`\n  StyleEnd: new Uint8Array([60, 47, 115, 116, 121, 108, 101]),\n  // `</style`\n  TitleEnd: new Uint8Array([60, 47, 116, 105, 116, 108, 101]),\n  // `</title`\n  TextareaEnd: new Uint8Array([\n    60,\n    47,\n    116,\n    101,\n    120,\n    116,\n    97,\n    114,\n    101,\n    97\n  ])\n  // `</textarea\n};\nlet Tokenizer$1 = class Tokenizer {\n  constructor(stack, cbs) {\n    this.stack = stack;\n    this.cbs = cbs;\n    /** The current state the tokenizer is in. */\n    this.state = 1;\n    /** The read buffer. */\n    this.buffer = \"\";\n    /** The beginning of the section that is currently being read. */\n    this.sectionStart = 0;\n    /** The index within the buffer that we are currently looking at. */\n    this.index = 0;\n    /** The start of the last entity. */\n    this.entityStart = 0;\n    /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n    this.baseState = 1;\n    /** For special parsing behavior inside of script and style tags. */\n    this.inRCDATA = false;\n    /** For disabling RCDATA tags handling */\n    this.inXML = false;\n    /** For disabling interpolation parsing in v-pre */\n    this.inVPre = false;\n    /** Record newline positions for fast line / column calculation */\n    this.newlines = [];\n    this.mode = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n    this.delimiterIndex = -1;\n    this.currentSequence = void 0;\n    this.sequenceIndex = 0;\n    {\n      this.entityDecoder = new EntityDecoder(\n        htmlDecodeTree,\n        (cp, consumed) => this.emitCodePoint(cp, consumed)\n      );\n    }\n  }\n  get inSFCRoot() {\n    return this.mode === 2 && this.stack.length === 0;\n  }\n  reset() {\n    this.state = 1;\n    this.mode = 0;\n    this.buffer = \"\";\n    this.sectionStart = 0;\n    this.index = 0;\n    this.baseState = 1;\n    this.inRCDATA = false;\n    this.currentSequence = void 0;\n    this.newlines.length = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n  }\n  /**\n   * Generate Position object with line / column information using recorded\n   * newline positions. We know the index is always going to be an already\n   * processed index, so all the newlines up to this index should have been\n   * recorded.\n   */\n  getPos(index) {\n    let line = 1;\n    let column = index + 1;\n    for (let i = this.newlines.length - 1; i >= 0; i--) {\n      const newlineIndex = this.newlines[i];\n      if (index > newlineIndex) {\n        line = i + 2;\n        column = index - newlineIndex;\n        break;\n      }\n    }\n    return {\n      column,\n      line,\n      offset: index\n    };\n  }\n  peek() {\n    return this.buffer.charCodeAt(this.index + 1);\n  }\n  stateText(c) {\n    if (c === 60) {\n      if (this.index > this.sectionStart) {\n        this.cbs.ontext(this.sectionStart, this.index);\n      }\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (c === 38) {\n      this.startEntity();\n    } else if (!this.inVPre && c === this.delimiterOpen[0]) {\n      this.state = 2;\n      this.delimiterIndex = 0;\n      this.stateInterpolationOpen(c);\n    }\n  }\n  stateInterpolationOpen(c) {\n    if (c === this.delimiterOpen[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterOpen.length - 1) {\n        const start = this.index + 1 - this.delimiterOpen.length;\n        if (start > this.sectionStart) {\n          this.cbs.ontext(this.sectionStart, start);\n        }\n        this.state = 3;\n        this.sectionStart = start;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else if (this.inRCDATA) {\n      this.state = 32;\n      this.stateInRCDATA(c);\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInterpolation(c) {\n    if (c === this.delimiterClose[0]) {\n      this.state = 4;\n      this.delimiterIndex = 0;\n      this.stateInterpolationClose(c);\n    }\n  }\n  stateInterpolationClose(c) {\n    if (c === this.delimiterClose[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterClose.length - 1) {\n        this.cbs.oninterpolation(this.sectionStart, this.index + 1);\n        if (this.inRCDATA) {\n          this.state = 32;\n        } else {\n          this.state = 1;\n        }\n        this.sectionStart = this.index + 1;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else {\n      this.state = 3;\n      this.stateInterpolation(c);\n    }\n  }\n  stateSpecialStartSequence(c) {\n    const isEnd = this.sequenceIndex === this.currentSequence.length;\n    const isMatch = isEnd ? (\n      // If we are at the end of the sequence, make sure the tag name has ended\n      isEndOfTagSection(c)\n    ) : (\n      // Otherwise, do a case-insensitive comparison\n      (c | 32) === this.currentSequence[this.sequenceIndex]\n    );\n    if (!isMatch) {\n      this.inRCDATA = false;\n    } else if (!isEnd) {\n      this.sequenceIndex++;\n      return;\n    }\n    this.sequenceIndex = 0;\n    this.state = 6;\n    this.stateInTagName(c);\n  }\n  /** Look for an end tag. For <title> and <textarea>, also decode entities. */\n  stateInRCDATA(c) {\n    if (this.sequenceIndex === this.currentSequence.length) {\n      if (c === 62 || isWhitespace$1(c)) {\n        const endOfText = this.index - this.currentSequence.length;\n        if (this.sectionStart < endOfText) {\n          const actualIndex = this.index;\n          this.index = endOfText;\n          this.cbs.ontext(this.sectionStart, endOfText);\n          this.index = actualIndex;\n        }\n        this.sectionStart = endOfText + 2;\n        this.stateInClosingTagName(c);\n        this.inRCDATA = false;\n        return;\n      }\n      this.sequenceIndex = 0;\n    }\n    if ((c | 32) === this.currentSequence[this.sequenceIndex]) {\n      this.sequenceIndex += 1;\n    } else if (this.sequenceIndex === 0) {\n      if (this.currentSequence === Sequences.TitleEnd || this.currentSequence === Sequences.TextareaEnd && !this.inSFCRoot) {\n        if (c === 38) {\n          this.startEntity();\n        } else if (c === this.delimiterOpen[0]) {\n          this.state = 2;\n          this.delimiterIndex = 0;\n          this.stateInterpolationOpen(c);\n        }\n      } else if (this.fastForwardTo(60)) {\n        this.sequenceIndex = 1;\n      }\n    } else {\n      this.sequenceIndex = Number(c === 60);\n    }\n  }\n  stateCDATASequence(c) {\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\n        this.state = 28;\n        this.currentSequence = Sequences.CdataEnd;\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n      }\n    } else {\n      this.sequenceIndex = 0;\n      this.state = 23;\n      this.stateInDeclaration(c);\n    }\n  }\n  /**\n   * When we wait for one specific character, we can speed things up\n   * by skipping through the buffer until we find it.\n   *\n   * @returns Whether the character was found.\n   */\n  fastForwardTo(c) {\n    while (++this.index < this.buffer.length) {\n      const cc = this.buffer.charCodeAt(this.index);\n      if (cc === 10) {\n        this.newlines.push(this.index);\n      }\n      if (cc === c) {\n        return true;\n      }\n    }\n    this.index = this.buffer.length - 1;\n    return false;\n  }\n  /**\n   * Comments and CDATA end with `-->` and `]]>`.\n   *\n   * Their common qualities are:\n   * - Their end sequences have a distinct character they start with.\n   * - That character is then repeated, so we have to check multiple repeats.\n   * - All characters but the start character of the sequence can be skipped.\n   */\n  stateInCommentLike(c) {\n    if (c === this.currentSequence[this.sequenceIndex]) {\n      if (++this.sequenceIndex === this.currentSequence.length) {\n        if (this.currentSequence === Sequences.CdataEnd) {\n          this.cbs.oncdata(this.sectionStart, this.index - 2);\n        } else {\n          this.cbs.oncomment(this.sectionStart, this.index - 2);\n        }\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n        this.state = 1;\n      }\n    } else if (this.sequenceIndex === 0) {\n      if (this.fastForwardTo(this.currentSequence[0])) {\n        this.sequenceIndex = 1;\n      }\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n      this.sequenceIndex = 0;\n    }\n  }\n  startSpecial(sequence, offset) {\n    this.enterRCDATA(sequence, offset);\n    this.state = 31;\n  }\n  enterRCDATA(sequence, offset) {\n    this.inRCDATA = true;\n    this.currentSequence = sequence;\n    this.sequenceIndex = offset;\n  }\n  stateBeforeTagName(c) {\n    if (c === 33) {\n      this.state = 22;\n      this.sectionStart = this.index + 1;\n    } else if (c === 63) {\n      this.state = 24;\n      this.sectionStart = this.index + 1;\n    } else if (isTagStartChar(c)) {\n      this.sectionStart = this.index;\n      if (this.mode === 0) {\n        this.state = 6;\n      } else if (this.inSFCRoot) {\n        this.state = 34;\n      } else if (!this.inXML) {\n        if (c === 116) {\n          this.state = 30;\n        } else {\n          this.state = c === 115 ? 29 : 6;\n        }\n      } else {\n        this.state = 6;\n      }\n    } else if (c === 47) {\n      this.state = 8;\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInTagName(c) {\n    if (isEndOfTagSection(c)) {\n      this.handleTagName(c);\n    }\n  }\n  stateInSFCRootTagName(c) {\n    if (isEndOfTagSection(c)) {\n      const tag = this.buffer.slice(this.sectionStart, this.index);\n      if (tag !== \"template\") {\n        this.enterRCDATA(toCharCodes(`</` + tag), 0);\n      }\n      this.handleTagName(c);\n    }\n  }\n  handleTagName(c) {\n    this.cbs.onopentagname(this.sectionStart, this.index);\n    this.sectionStart = -1;\n    this.state = 11;\n    this.stateBeforeAttrName(c);\n  }\n  stateBeforeClosingTagName(c) {\n    if (isWhitespace$1(c)) ; else if (c === 62) {\n      {\n        this.cbs.onerr(14, this.index);\n      }\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = isTagStartChar(c) ? 9 : 27;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInClosingTagName(c) {\n    if (c === 62 || isWhitespace$1(c)) {\n      this.cbs.onclosetag(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = 10;\n      this.stateAfterClosingTagName(c);\n    }\n  }\n  stateAfterClosingTagName(c) {\n    if (c === 62) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeAttrName(c) {\n    if (c === 62) {\n      this.cbs.onopentagend(this.index);\n      if (this.inRCDATA) {\n        this.state = 32;\n      } else {\n        this.state = 1;\n      }\n      this.sectionStart = this.index + 1;\n    } else if (c === 47) {\n      this.state = 7;\n      if (this.peek() !== 62) {\n        this.cbs.onerr(22, this.index);\n      }\n    } else if (c === 60 && this.peek() === 47) {\n      this.cbs.onopentagend(this.index);\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (!isWhitespace$1(c)) {\n      if (c === 61) {\n        this.cbs.onerr(\n          19,\n          this.index\n        );\n      }\n      this.handleAttrStart(c);\n    }\n  }\n  handleAttrStart(c) {\n    if (c === 118 && this.peek() === 45) {\n      this.state = 13;\n      this.sectionStart = this.index;\n    } else if (c === 46 || c === 58 || c === 64 || c === 35) {\n      this.cbs.ondirname(this.index, this.index + 1);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 12;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInSelfClosingTag(c) {\n    if (c === 62) {\n      this.cbs.onselfclosingtag(this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n      this.inRCDATA = false;\n    } else if (!isWhitespace$1(c)) {\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    }\n  }\n  stateInAttrName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.onattribname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 34 || c === 39 || c === 60) {\n      this.cbs.onerr(\n        17,\n        this.index\n      );\n    }\n  }\n  stateInDirName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 58) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else if (c === 46) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDirArg(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 91) {\n      this.state = 15;\n    } else if (c === 46) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDynamicDirArg(c) {\n    if (c === 93) {\n      this.state = 14;\n    } else if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index + 1);\n      this.handleAttrNameEnd(c);\n      {\n        this.cbs.onerr(\n          27,\n          this.index\n        );\n      }\n    }\n  }\n  stateInDirModifier(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 46) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.sectionStart = this.index + 1;\n    }\n  }\n  handleAttrNameEnd(c) {\n    this.sectionStart = this.index;\n    this.state = 17;\n    this.cbs.onattribnameend(this.index);\n    this.stateAfterAttrName(c);\n  }\n  stateAfterAttrName(c) {\n    if (c === 61) {\n      this.state = 18;\n    } else if (c === 47 || c === 62) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.sectionStart = -1;\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if (!isWhitespace$1(c)) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.handleAttrStart(c);\n    }\n  }\n  stateBeforeAttrValue(c) {\n    if (c === 34) {\n      this.state = 19;\n      this.sectionStart = this.index + 1;\n    } else if (c === 39) {\n      this.state = 20;\n      this.sectionStart = this.index + 1;\n    } else if (!isWhitespace$1(c)) {\n      this.sectionStart = this.index;\n      this.state = 21;\n      this.stateInAttrValueNoQuotes(c);\n    }\n  }\n  handleInAttrValue(c, quote) {\n    if (c === quote || false) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(\n        quote === 34 ? 3 : 2,\n        this.index + 1\n      );\n      this.state = 11;\n    } else if (c === 38) {\n      this.startEntity();\n    }\n  }\n  stateInAttrValueDoubleQuotes(c) {\n    this.handleInAttrValue(c, 34);\n  }\n  stateInAttrValueSingleQuotes(c) {\n    this.handleInAttrValue(c, 39);\n  }\n  stateInAttrValueNoQuotes(c) {\n    if (isWhitespace$1(c) || c === 62) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(1, this.index);\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if (c === 34 || c === 39 || c === 60 || c === 61 || c === 96) {\n      this.cbs.onerr(\n        18,\n        this.index\n      );\n    } else if (c === 38) {\n      this.startEntity();\n    }\n  }\n  stateBeforeDeclaration(c) {\n    if (c === 91) {\n      this.state = 26;\n      this.sequenceIndex = 0;\n    } else {\n      this.state = c === 45 ? 25 : 23;\n    }\n  }\n  stateInDeclaration(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInProcessingInstruction(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeComment(c) {\n    if (c === 45) {\n      this.state = 28;\n      this.currentSequence = Sequences.CommentEnd;\n      this.sequenceIndex = 2;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 23;\n    }\n  }\n  stateInSpecialComment(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.oncomment(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeSpecialS(c) {\n    if (c === Sequences.ScriptEnd[3]) {\n      this.startSpecial(Sequences.ScriptEnd, 4);\n    } else if (c === Sequences.StyleEnd[3]) {\n      this.startSpecial(Sequences.StyleEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  stateBeforeSpecialT(c) {\n    if (c === Sequences.TitleEnd[3]) {\n      this.startSpecial(Sequences.TitleEnd, 4);\n    } else if (c === Sequences.TextareaEnd[3]) {\n      this.startSpecial(Sequences.TextareaEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  startEntity() {\n    {\n      this.baseState = this.state;\n      this.state = 33;\n      this.entityStart = this.index;\n      this.entityDecoder.startEntity(\n        this.baseState === 1 || this.baseState === 32 ? DecodingMode.Legacy : DecodingMode.Attribute\n      );\n    }\n  }\n  stateInEntity() {\n    {\n      const length = this.entityDecoder.write(this.buffer, this.index);\n      if (length >= 0) {\n        this.state = this.baseState;\n        if (length === 0) {\n          this.index = this.entityStart;\n        }\n      } else {\n        this.index = this.buffer.length - 1;\n      }\n    }\n  }\n  /**\n   * Iterates through the buffer, calling the function corresponding to the current state.\n   *\n   * States that are more likely to be hit are higher up, as a performance improvement.\n   */\n  parse(input) {\n    this.buffer = input;\n    while (this.index < this.buffer.length) {\n      const c = this.buffer.charCodeAt(this.index);\n      if (c === 10) {\n        this.newlines.push(this.index);\n      }\n      switch (this.state) {\n        case 1: {\n          this.stateText(c);\n          break;\n        }\n        case 2: {\n          this.stateInterpolationOpen(c);\n          break;\n        }\n        case 3: {\n          this.stateInterpolation(c);\n          break;\n        }\n        case 4: {\n          this.stateInterpolationClose(c);\n          break;\n        }\n        case 31: {\n          this.stateSpecialStartSequence(c);\n          break;\n        }\n        case 32: {\n          this.stateInRCDATA(c);\n          break;\n        }\n        case 26: {\n          this.stateCDATASequence(c);\n          break;\n        }\n        case 19: {\n          this.stateInAttrValueDoubleQuotes(c);\n          break;\n        }\n        case 12: {\n          this.stateInAttrName(c);\n          break;\n        }\n        case 13: {\n          this.stateInDirName(c);\n          break;\n        }\n        case 14: {\n          this.stateInDirArg(c);\n          break;\n        }\n        case 15: {\n          this.stateInDynamicDirArg(c);\n          break;\n        }\n        case 16: {\n          this.stateInDirModifier(c);\n          break;\n        }\n        case 28: {\n          this.stateInCommentLike(c);\n          break;\n        }\n        case 27: {\n          this.stateInSpecialComment(c);\n          break;\n        }\n        case 11: {\n          this.stateBeforeAttrName(c);\n          break;\n        }\n        case 6: {\n          this.stateInTagName(c);\n          break;\n        }\n        case 34: {\n          this.stateInSFCRootTagName(c);\n          break;\n        }\n        case 9: {\n          this.stateInClosingTagName(c);\n          break;\n        }\n        case 5: {\n          this.stateBeforeTagName(c);\n          break;\n        }\n        case 17: {\n          this.stateAfterAttrName(c);\n          break;\n        }\n        case 20: {\n          this.stateInAttrValueSingleQuotes(c);\n          break;\n        }\n        case 18: {\n          this.stateBeforeAttrValue(c);\n          break;\n        }\n        case 8: {\n          this.stateBeforeClosingTagName(c);\n          break;\n        }\n        case 10: {\n          this.stateAfterClosingTagName(c);\n          break;\n        }\n        case 29: {\n          this.stateBeforeSpecialS(c);\n          break;\n        }\n        case 30: {\n          this.stateBeforeSpecialT(c);\n          break;\n        }\n        case 21: {\n          this.stateInAttrValueNoQuotes(c);\n          break;\n        }\n        case 7: {\n          this.stateInSelfClosingTag(c);\n          break;\n        }\n        case 23: {\n          this.stateInDeclaration(c);\n          break;\n        }\n        case 22: {\n          this.stateBeforeDeclaration(c);\n          break;\n        }\n        case 25: {\n          this.stateBeforeComment(c);\n          break;\n        }\n        case 24: {\n          this.stateInProcessingInstruction(c);\n          break;\n        }\n        case 33: {\n          this.stateInEntity();\n          break;\n        }\n      }\n      this.index++;\n    }\n    this.cleanup();\n    this.finish();\n  }\n  /**\n   * Remove data that has already been consumed from the buffer.\n   */\n  cleanup() {\n    if (this.sectionStart !== this.index) {\n      if (this.state === 1 || this.state === 32 && this.sequenceIndex === 0) {\n        this.cbs.ontext(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      } else if (this.state === 19 || this.state === 20 || this.state === 21) {\n        this.cbs.onattribdata(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      }\n    }\n  }\n  finish() {\n    if (this.state === 33) {\n      this.entityDecoder.end();\n      this.state = this.baseState;\n    }\n    this.handleTrailingData();\n    this.cbs.onend();\n  }\n  /** Handle any trailing data. */\n  handleTrailingData() {\n    const endIndex = this.buffer.length;\n    if (this.sectionStart >= endIndex) {\n      return;\n    }\n    if (this.state === 28) {\n      if (this.currentSequence === Sequences.CdataEnd) {\n        this.cbs.oncdata(this.sectionStart, endIndex);\n      } else {\n        this.cbs.oncomment(this.sectionStart, endIndex);\n      }\n    } else if (this.state === 6 || this.state === 11 || this.state === 18 || this.state === 17 || this.state === 12 || this.state === 13 || this.state === 14 || this.state === 15 || this.state === 16 || this.state === 20 || this.state === 19 || this.state === 21 || this.state === 9) ; else {\n      this.cbs.ontext(this.sectionStart, endIndex);\n    }\n  }\n  emitCodePoint(cp, consumed) {\n    {\n      if (this.baseState !== 1 && this.baseState !== 32) {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.onattribdata(this.sectionStart, this.entityStart);\n        }\n        this.sectionStart = this.entityStart + consumed;\n        this.index = this.sectionStart - 1;\n        this.cbs.onattribentity(\n          fromCodePoint(cp),\n          this.entityStart,\n          this.sectionStart\n        );\n      } else {\n        if (this.sectionStart < this.entityStart) {\n          this.cbs.ontext(this.sectionStart, this.entityStart);\n        }\n        this.sectionStart = this.entityStart + consumed;\n        this.index = this.sectionStart - 1;\n        this.cbs.ontextentity(\n          fromCodePoint(cp),\n          this.entityStart,\n          this.sectionStart\n        );\n      }\n    }\n  }\n};\n\nconst CompilerDeprecationTypes = {\n  \"COMPILER_IS_ON_ELEMENT\": \"COMPILER_IS_ON_ELEMENT\",\n  \"COMPILER_V_BIND_SYNC\": \"COMPILER_V_BIND_SYNC\",\n  \"COMPILER_V_BIND_OBJECT_ORDER\": \"COMPILER_V_BIND_OBJECT_ORDER\",\n  \"COMPILER_V_ON_NATIVE\": \"COMPILER_V_ON_NATIVE\",\n  \"COMPILER_V_IF_V_FOR_PRECEDENCE\": \"COMPILER_V_IF_V_FOR_PRECEDENCE\",\n  \"COMPILER_NATIVE_TEMPLATE\": \"COMPILER_NATIVE_TEMPLATE\",\n  \"COMPILER_INLINE_TEMPLATE\": \"COMPILER_INLINE_TEMPLATE\",\n  \"COMPILER_FILTERS\": \"COMPILER_FILTERS\"\n};\nconst deprecationData = {\n  [\"COMPILER_IS_ON_ELEMENT\"]: {\n    message: `Platform-native elements with \"is\" prop will no longer be treated as components in Vue 3 unless the \"is\" value is explicitly prefixed with \"vue:\".`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\n  },\n  [\"COMPILER_V_BIND_SYNC\"]: {\n    message: (key) => `.sync modifier for v-bind has been removed. Use v-model with argument instead. \\`v-bind:${key}.sync\\` should be changed to \\`v-model:${key}\\`.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\n  },\n  [\"COMPILER_V_BIND_OBJECT_ORDER\"]: {\n    message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript object spread: it will now overwrite an existing non-mergeable attribute that appears before v-bind in the case of conflict. To retain 2.x behavior, move v-bind to make it the first attribute. You can also suppress this warning if the usage is intended.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\n  },\n  [\"COMPILER_V_ON_NATIVE\"]: {\n    message: `.native modifier for v-on has been removed as is no longer necessary.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\n  },\n  [\"COMPILER_V_IF_V_FOR_PRECEDENCE\"]: {\n    message: `v-if / v-for precedence when used on the same element has changed in Vue 3: v-if now takes higher precedence and will no longer have access to v-for scope variables. It is best to avoid the ambiguity with <template> tags or use a computed property that filters v-for data source.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\n  },\n  [\"COMPILER_NATIVE_TEMPLATE\"]: {\n    message: `<template> with no special directives will render as a native template element instead of its inner content in Vue 3.`\n  },\n  [\"COMPILER_INLINE_TEMPLATE\"]: {\n    message: `\"inline-template\" has been removed in Vue 3.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\n  },\n  [\"COMPILER_FILTERS\"]: {\n    message: `filters have been removed in Vue 3. The \"|\" symbol will be treated as native JavaScript bitwise OR operator. Use method calls or computed properties instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\n  }\n};\nfunction getCompatValue(key, { compatConfig }) {\n  const value = compatConfig && compatConfig[key];\n  if (key === \"MODE\") {\n    return value || 3;\n  } else {\n    return value;\n  }\n}\nfunction isCompatEnabled(key, context) {\n  const mode = getCompatValue(\"MODE\", context);\n  const value = getCompatValue(key, context);\n  return mode === 3 ? value === true : value !== false;\n}\nfunction checkCompatEnabled(key, context, loc, ...args) {\n  const enabled = isCompatEnabled(key, context);\n  if (enabled) {\n    warnDeprecation(key, context, loc, ...args);\n  }\n  return enabled;\n}\nfunction warnDeprecation(key, context, loc, ...args) {\n  const val = getCompatValue(key, context);\n  if (val === \"suppress-warning\") {\n    return;\n  }\n  const { message, link } = deprecationData[key];\n  const msg = `(deprecation ${key}) ${typeof message === \"function\" ? message(...args) : message}${link ? `\n  Details: ${link}` : ``}`;\n  const err = new SyntaxError(msg);\n  err.code = key;\n  if (loc)\n    err.loc = loc;\n  context.onWarn(err);\n}\n\nfunction defaultOnError(error) {\n  throw error;\n}\nfunction defaultOnWarn(msg) {\n  console.warn(`[Vue warn] ${msg.message}`);\n}\nfunction createCompilerError(code, loc, messages, additionalMessage) {\n  const msg = (messages || errorMessages$1)[code] + (additionalMessage || ``) ;\n  const error = new SyntaxError(String(msg));\n  error.code = code;\n  error.loc = loc;\n  return error;\n}\nconst ErrorCodes = {\n  \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\": 0,\n  \"0\": \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\",\n  \"CDATA_IN_HTML_CONTENT\": 1,\n  \"1\": \"CDATA_IN_HTML_CONTENT\",\n  \"DUPLICATE_ATTRIBUTE\": 2,\n  \"2\": \"DUPLICATE_ATTRIBUTE\",\n  \"END_TAG_WITH_ATTRIBUTES\": 3,\n  \"3\": \"END_TAG_WITH_ATTRIBUTES\",\n  \"END_TAG_WITH_TRAILING_SOLIDUS\": 4,\n  \"4\": \"END_TAG_WITH_TRAILING_SOLIDUS\",\n  \"EOF_BEFORE_TAG_NAME\": 5,\n  \"5\": \"EOF_BEFORE_TAG_NAME\",\n  \"EOF_IN_CDATA\": 6,\n  \"6\": \"EOF_IN_CDATA\",\n  \"EOF_IN_COMMENT\": 7,\n  \"7\": \"EOF_IN_COMMENT\",\n  \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\": 8,\n  \"8\": \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\",\n  \"EOF_IN_TAG\": 9,\n  \"9\": \"EOF_IN_TAG\",\n  \"INCORRECTLY_CLOSED_COMMENT\": 10,\n  \"10\": \"INCORRECTLY_CLOSED_COMMENT\",\n  \"INCORRECTLY_OPENED_COMMENT\": 11,\n  \"11\": \"INCORRECTLY_OPENED_COMMENT\",\n  \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\": 12,\n  \"12\": \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\",\n  \"MISSING_ATTRIBUTE_VALUE\": 13,\n  \"13\": \"MISSING_ATTRIBUTE_VALUE\",\n  \"MISSING_END_TAG_NAME\": 14,\n  \"14\": \"MISSING_END_TAG_NAME\",\n  \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\": 15,\n  \"15\": \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\",\n  \"NESTED_COMMENT\": 16,\n  \"16\": \"NESTED_COMMENT\",\n  \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\": 17,\n  \"17\": \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\": 18,\n  \"18\": \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\",\n  \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\": 19,\n  \"19\": \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_NULL_CHARACTER\": 20,\n  \"20\": \"UNEXPECTED_NULL_CHARACTER\",\n  \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\": 21,\n  \"21\": \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\",\n  \"UNEXPECTED_SOLIDUS_IN_TAG\": 22,\n  \"22\": \"UNEXPECTED_SOLIDUS_IN_TAG\",\n  \"X_INVALID_END_TAG\": 23,\n  \"23\": \"X_INVALID_END_TAG\",\n  \"X_MISSING_END_TAG\": 24,\n  \"24\": \"X_MISSING_END_TAG\",\n  \"X_MISSING_INTERPOLATION_END\": 25,\n  \"25\": \"X_MISSING_INTERPOLATION_END\",\n  \"X_MISSING_DIRECTIVE_NAME\": 26,\n  \"26\": \"X_MISSING_DIRECTIVE_NAME\",\n  \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\": 27,\n  \"27\": \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\",\n  \"X_V_IF_NO_EXPRESSION\": 28,\n  \"28\": \"X_V_IF_NO_EXPRESSION\",\n  \"X_V_IF_SAME_KEY\": 29,\n  \"29\": \"X_V_IF_SAME_KEY\",\n  \"X_V_ELSE_NO_ADJACENT_IF\": 30,\n  \"30\": \"X_V_ELSE_NO_ADJACENT_IF\",\n  \"X_V_FOR_NO_EXPRESSION\": 31,\n  \"31\": \"X_V_FOR_NO_EXPRESSION\",\n  \"X_V_FOR_MALFORMED_EXPRESSION\": 32,\n  \"32\": \"X_V_FOR_MALFORMED_EXPRESSION\",\n  \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\": 33,\n  \"33\": \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\",\n  \"X_V_BIND_NO_EXPRESSION\": 34,\n  \"34\": \"X_V_BIND_NO_EXPRESSION\",\n  \"X_V_ON_NO_EXPRESSION\": 35,\n  \"35\": \"X_V_ON_NO_EXPRESSION\",\n  \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\": 36,\n  \"36\": \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\",\n  \"X_V_SLOT_MIXED_SLOT_USAGE\": 37,\n  \"37\": \"X_V_SLOT_MIXED_SLOT_USAGE\",\n  \"X_V_SLOT_DUPLICATE_SLOT_NAMES\": 38,\n  \"38\": \"X_V_SLOT_DUPLICATE_SLOT_NAMES\",\n  \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\": 39,\n  \"39\": \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\",\n  \"X_V_SLOT_MISPLACED\": 40,\n  \"40\": \"X_V_SLOT_MISPLACED\",\n  \"X_V_MODEL_NO_EXPRESSION\": 41,\n  \"41\": \"X_V_MODEL_NO_EXPRESSION\",\n  \"X_V_MODEL_MALFORMED_EXPRESSION\": 42,\n  \"42\": \"X_V_MODEL_MALFORMED_EXPRESSION\",\n  \"X_V_MODEL_ON_SCOPE_VARIABLE\": 43,\n  \"43\": \"X_V_MODEL_ON_SCOPE_VARIABLE\",\n  \"X_V_MODEL_ON_PROPS\": 44,\n  \"44\": \"X_V_MODEL_ON_PROPS\",\n  \"X_INVALID_EXPRESSION\": 45,\n  \"45\": \"X_INVALID_EXPRESSION\",\n  \"X_KEEP_ALIVE_INVALID_CHILDREN\": 46,\n  \"46\": \"X_KEEP_ALIVE_INVALID_CHILDREN\",\n  \"X_PREFIX_ID_NOT_SUPPORTED\": 47,\n  \"47\": \"X_PREFIX_ID_NOT_SUPPORTED\",\n  \"X_MODULE_MODE_NOT_SUPPORTED\": 48,\n  \"48\": \"X_MODULE_MODE_NOT_SUPPORTED\",\n  \"X_CACHE_HANDLER_NOT_SUPPORTED\": 49,\n  \"49\": \"X_CACHE_HANDLER_NOT_SUPPORTED\",\n  \"X_SCOPE_ID_NOT_SUPPORTED\": 50,\n  \"50\": \"X_SCOPE_ID_NOT_SUPPORTED\",\n  \"X_VNODE_HOOKS\": 51,\n  \"51\": \"X_VNODE_HOOKS\",\n  \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\": 52,\n  \"52\": \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\",\n  \"__EXTEND_POINT__\": 53,\n  \"53\": \"__EXTEND_POINT__\"\n};\nconst errorMessages$1 = {\n  // parse errors\n  [0]: \"Illegal comment.\",\n  [1]: \"CDATA section is allowed only in XML context.\",\n  [2]: \"Duplicate attribute.\",\n  [3]: \"End tag cannot have attributes.\",\n  [4]: \"Illegal '/' in tags.\",\n  [5]: \"Unexpected EOF in tag.\",\n  [6]: \"Unexpected EOF in CDATA section.\",\n  [7]: \"Unexpected EOF in comment.\",\n  [8]: \"Unexpected EOF in script.\",\n  [9]: \"Unexpected EOF in tag.\",\n  [10]: \"Incorrectly closed comment.\",\n  [11]: \"Incorrectly opened comment.\",\n  [12]: \"Illegal tag name. Use '&lt;' to print '<'.\",\n  [13]: \"Attribute value was expected.\",\n  [14]: \"End tag name was expected.\",\n  [15]: \"Whitespace was expected.\",\n  [16]: \"Unexpected '<!--' in comment.\",\n  [17]: `Attribute name cannot contain U+0022 (\"), U+0027 ('), and U+003C (<).`,\n  [18]: \"Unquoted attribute value cannot contain U+0022 (\\\"), U+0027 ('), U+003C (<), U+003D (=), and U+0060 (`).\",\n  [19]: \"Attribute name cannot start with '='.\",\n  [21]: \"'<?' is allowed only in XML context.\",\n  [20]: `Unexpected null character.`,\n  [22]: \"Illegal '/' in tags.\",\n  // Vue-specific parse errors\n  [23]: \"Invalid end tag.\",\n  [24]: \"Element is missing end tag.\",\n  [25]: \"Interpolation end sign was not found.\",\n  [27]: \"End bracket for dynamic directive argument was not found. Note that dynamic directive argument cannot contain spaces.\",\n  [26]: \"Legal directive name was expected.\",\n  // transform errors\n  [28]: `v-if/v-else-if is missing expression.`,\n  [29]: `v-if/else branches must use unique keys.`,\n  [30]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n  [31]: `v-for is missing expression.`,\n  [32]: `v-for has invalid expression.`,\n  [33]: `<template v-for> key should be placed on the <template> tag.`,\n  [34]: `v-bind is missing expression.`,\n  [52]: `v-bind with same-name shorthand only allows static argument.`,\n  [35]: `v-on is missing expression.`,\n  [36]: `Unexpected custom directive on <slot> outlet.`,\n  [37]: `Mixed v-slot usage on both the component and nested <template>. When there are multiple named slots, all slots should use <template> syntax to avoid scope ambiguity.`,\n  [38]: `Duplicate slot names found. `,\n  [39]: `Extraneous children found when component already has explicitly named default slot. These children will be ignored.`,\n  [40]: `v-slot can only be used on components or <template> tags.`,\n  [41]: `v-model is missing expression.`,\n  [42]: `v-model value must be a valid JavaScript member expression.`,\n  [43]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n  [44]: `v-model cannot be used on a prop, because local prop bindings are not writable.\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\n  [45]: `Error parsing JavaScript expression: `,\n  [46]: `<KeepAlive> expects exactly one child component.`,\n  [51]: `@vnode-* hooks in templates are no longer supported. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support has been removed in 3.4.`,\n  // generic errors\n  [47]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n  [48]: `ES module mode is not supported in this build of compiler.`,\n  [49]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n  [50]: `\"scopeId\" option is only supported in module mode.`,\n  // just to fulfill types\n  [53]: ``\n};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction getAugmentedNamespace(n) {\n  if (n.__esModule) return n;\n  var f = n.default;\n\tif (typeof f == \"function\") {\n\t\tvar a = function a () {\n\t\t\tif (this instanceof a) {\n        return Reflect.construct(f, arguments, this.constructor);\n\t\t\t}\n\t\t\treturn f.apply(this, arguments);\n\t\t};\n\t\ta.prototype = f.prototype;\n  } else a = {};\n  Object.defineProperty(a, '__esModule', {value: true});\n\tObject.keys(n).forEach(function (k) {\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n\t\tObject.defineProperty(a, k, d.get ? d : {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn n[k];\n\t\t\t}\n\t\t});\n\t});\n\treturn a;\n}\n\nvar lib = {};\n\nObject.defineProperty(lib, '__esModule', {\n  value: true\n});\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nclass Position {\n  constructor(line, col, index) {\n    this.line = void 0;\n    this.column = void 0;\n    this.index = void 0;\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n}\nfunction createPositionWithColumnOffset(position, columnOffset) {\n  const {\n    line,\n    column,\n    index\n  } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\nconst code = \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\";\nvar ModuleErrors = {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code\n  }\n};\nconst NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\"\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\"\n};\nconst toNodeDescription = ({\n  type,\n  prefix\n}) => type === \"UpdateExpression\" ? NodeDescriptions.UpdateExpression[String(prefix)] : NodeDescriptions[type];\nvar StandardErrors = {\n  AccessorIsGenerator: ({\n    kind\n  }) => `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitUsingNotInAsyncContext: \"'await using' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accessor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accessor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accessor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorArgumentsOutsideParentheses: \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.\",\n  DecoratorsBeforeAfterExport: \"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeferImportRequiresNamespace: 'Only `import defer * as x from \"./module\"` is valid.',\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({\n    exportName\n  }) => `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  DynamicImportPhaseRequiresImportExpressions: ({\n    phase\n  }) => `'import.${phase}(...)' can only be parsed when using the 'createImportExpressions' option.`,\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName\n  }) => `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: ({\n    type\n  }) => `'${type === \"ForInStatement\" ? \"for-in\" : \"for-of\"}' loop variable declaration may not have an initializer.`,\n  ForInUsing: \"For-in loop may not start with 'using' declaration.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: ({\n    type\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportAttributesUseAssert: \"The `assert` keyword in import attributes is deprecated and it has been replaced by the `with` keyword. You can enable the `deprecatedAssertSyntax: true` option in the import attributes plugin to suppress this error.\",\n  ImportBindingIsString: ({\n    importName\n  }) => `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: ({\n    maxArgumentCount\n  }) => `\\`import()\\` requires exactly ${maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"}.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault: \"A JSON module can only be imported with `default`.\",\n  ImportReflectionHasAssertion: \"`import module x` cannot have assertions.\",\n  ImportReflectionNotBinding: 'Only `import module x from \"./module\"` is valid.',\n  IncompatibleRegExpUVFlags: \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({\n    radix\n  }) => `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({\n    reservedWord\n  }) => `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({\n    identifierName\n  }) => `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({\n    ancestor\n  }) => `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({\n    ancestor\n  }) => `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsOptionalChaining: ({\n    ancestor\n  }) => `Invalid optional chaining in the left-hand side of ${toNodeDescription(ancestor)}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({\n    unexpected\n  }) => `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({\n    labelName\n  }) => `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding: \"'let' is disallowed as a lexically bound name.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({\n    missingPlugin\n  }) => `This experimental syntax requires enabling the parser plugin: ${missingPlugin.map(name => JSON.stringify(name)).join(\", \")}.`,\n  MissingOneOfPlugins: ({\n    missingPlugin\n  }) => `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin.map(name => JSON.stringify(name)).join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({\n    key\n  }) => `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode\n  }) => `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(16)}'.`,\n  ModuleExportUndefined: ({\n    localName\n  }) => `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({\n    identifierName\n  }) => `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({\n    identifierName\n  }) => `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level or inside a block.\",\n  SloppyFunctionAnnexB: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  SourcePhaseImportRequiresDefault: 'Only `import source x from \"./module\"` is valid.',\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({\n    keyword\n  }) => `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({\n    reservedWord\n  }) => `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected\n  }) => `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${expected ? `, expected \"${expected}\"` : \"\"}`,\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnexpectedUsingDeclaration: \"Using declaration cannot appear in the top level when source type is `script`.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName\n  }) => `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  UsingDeclarationHasBindingPattern: \"Using declaration cannot have destructuring patterns.\",\n  VarRedeclaration: ({\n    identifierName\n  }) => `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n};\nvar StrictModeErrors = {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: ({\n    referenceName\n  }) => `Assigning to '${referenceName}' in strict mode.`,\n  StrictEvalArgumentsBinding: ({\n    bindingName\n  }) => `Binding '${bindingName}' in strict mode.`,\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\"\n};\nconst UnparenthesizedPipeBodyDescriptions = new Set([\"ArrowFunctionExpression\", \"AssignmentExpression\", \"ConditionalExpression\", \"YieldExpression\"]);\nvar PipelineOperatorErrors = {\n  PipeBodyIsTighter: \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({\n    token\n  }) => `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({\n    type\n  }) => `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n    type\n  })}; please wrap it in parentheses.`,\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.'\n};\nconst _excluded = [\"toMessage\"],\n  _excluded2 = [\"message\"];\nfunction defineHidden(obj, key, value) {\n  Object.defineProperty(obj, key, {\n    enumerable: false,\n    configurable: true,\n    value\n  });\n}\nfunction toParseErrorConstructor(_ref) {\n  let {\n      toMessage\n    } = _ref,\n    properties = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return function constructor(loc, details) {\n    const error = new SyntaxError();\n    Object.assign(error, properties, {\n      loc,\n      pos: loc.index\n    });\n    if (\"missingPlugin\" in details) {\n      Object.assign(error, {\n        missingPlugin: details.missingPlugin\n      });\n    }\n    defineHidden(error, \"clone\", function clone(overrides = {}) {\n      var _overrides$loc;\n      const {\n        line,\n        column,\n        index\n      } = (_overrides$loc = overrides.loc) != null ? _overrides$loc : loc;\n      return constructor(new Position(line, column, index), Object.assign({}, details, overrides.details));\n    });\n    defineHidden(error, \"details\", details);\n    Object.defineProperty(error, \"message\", {\n      configurable: true,\n      get() {\n        const message = `${toMessage(details)} (${loc.line}:${loc.column})`;\n        this.message = message;\n        return message;\n      },\n      set(value) {\n        Object.defineProperty(this, \"message\", {\n          value,\n          writable: true\n        });\n      }\n    });\n    return error;\n  };\n}\nfunction ParseErrorEnum(argument, syntaxPlugin) {\n  if (Array.isArray(argument)) {\n    return parseErrorTemplates => ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n  const ParseErrorConstructors = {};\n  for (const reasonCode of Object.keys(argument)) {\n    const template = argument[reasonCode];\n    const _ref2 = typeof template === \"string\" ? {\n        message: () => template\n      } : typeof template === \"function\" ? {\n        message: template\n      } : template,\n      {\n        message\n      } = _ref2,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n    const toMessage = typeof message === \"string\" ? () => message : message;\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor(Object.assign({\n      code: \"BABEL_PARSER_SYNTAX_ERROR\",\n      reasonCode,\n      toMessage\n    }, syntaxPlugin ? {\n      syntaxPlugin\n    } : {}, rest));\n  }\n  return ParseErrorConstructors;\n}\nconst Errors = Object.assign({}, ParseErrorEnum(ModuleErrors), ParseErrorEnum(StandardErrors), ParseErrorEnum(StrictModeErrors), ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors));\nconst {\n  defineProperty\n} = Object;\nconst toUnenumerable = (object, key) => defineProperty(object, key, {\n  enumerable: false,\n  value: object[key]\n});\nfunction toESTreeLocation(node) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n  return node;\n}\nvar estree = superClass => class ESTreeParserMixin extends superClass {\n  parse() {\n    const file = toESTreeLocation(super.parse());\n    if (this.options.tokens) {\n      file.tokens = file.tokens.map(toESTreeLocation);\n    }\n    return file;\n  }\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n  parseBigIntLiteral(value) {\n    let bigInt;\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  directiveToStmt(directive) {\n    const expression = directive.value;\n    delete directive.value;\n    expression.type = \"Literal\";\n    expression.raw = expression.extra.raw;\n    expression.value = expression.extra.expressionValue;\n    const stmt = directive;\n    stmt.type = \"ExpressionStatement\";\n    stmt.expression = expression;\n    stmt.directive = expression.extra.rawValue;\n    delete expression.extra;\n    return stmt;\n  }\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    super.parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n    classBody.body.push(method);\n  }\n  parsePrivateName() {\n    const node = super.parsePrivateName();\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return node;\n      }\n    }\n    return this.convertPrivateNameToPrivateIdentifier(node);\n  }\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n  isPrivateName(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n    }\n    return node.type === \"PrivateIdentifier\";\n  }\n  getPrivateNameSV(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n    }\n    return node.name;\n  }\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n    return this.finishNode(node, \"MethodDefinition\");\n  }\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    return propertyNode;\n  }\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    propertyNode.computed = false;\n    return propertyNode;\n  }\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") {\n        node.kind = \"init\";\n      }\n      node.shorthand = false;\n    }\n    return node;\n  }\n  parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors);\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n    return node;\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return type === \"Property\" ? \"value\" : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n  }\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n    return super.isAssignable(node, isBinding);\n  }\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      const {\n        key,\n        value\n      } = node;\n      if (this.isPrivateName(key)) {\n        this.classScope.usePrivateName(this.getPrivateNameSV(key), key.loc.start);\n      }\n      this.toAssignable(value, isLHS);\n    } else {\n      super.toAssignable(node, isLHS);\n    }\n  }\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(Errors.PatternHasAccessor, prop.key);\n    } else if (prop.method) {\n      this.raise(Errors.PatternHasMethod, prop.key);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n    }\n  }\n  finishCallExpression(unfinished, optional) {\n    const node = super.finishCallExpression(unfinished, optional);\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      if (this.hasPlugin(\"importAttributes\") || this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$, _node$arguments$2;\n        node.options = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n        node.attributes = (_node$arguments$2 = node.arguments[1]) != null ? _node$arguments$2 : null;\n      }\n      delete node.arguments;\n      delete node.callee;\n    }\n    return node;\n  }\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n    super.toReferencedArguments(node);\n  }\n  parseExport(unfinished, decorators) {\n    const exportStartLoc = this.state.lastTokStartLoc;\n    const node = super.parseExport(unfinished, decorators);\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n      case \"ExportDefaultDeclaration\":\n        {\n          var _declaration$decorato;\n          const {\n            declaration\n          } = node;\n          if ((declaration == null ? void 0 : declaration.type) === \"ClassDeclaration\" && ((_declaration$decorato = declaration.decorators) == null ? void 0 : _declaration$decorato.length) > 0 && declaration.start === node.start) {\n            this.resetStartLocation(node, exportStartLoc);\n          }\n        }\n        break;\n    }\n    return node;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startLoc, noCalls, state);\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n    return node;\n  }\n  isOptionalMemberExpression(node) {\n    if (node.type === \"ChainExpression\") {\n      return node.expression.type === \"MemberExpression\";\n    }\n    return super.isOptionalMemberExpression(node);\n  }\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n    return super.hasPropertyAsPrivateName(node);\n  }\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n  finishNodeAt(node, type, endLoc) {\n    return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n  }\n  resetStartLocation(node, startLoc) {\n    super.resetStartLocation(node, startLoc);\n    toESTreeLocation(node);\n  }\n  resetEndLocation(node, endLoc = this.state.lastTokEndLoc) {\n    super.resetEndLocation(node, endLoc);\n    toESTreeLocation(node);\n  }\n};\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n}\nconst types$1 = {\n  brace: new TokContext(\"{\"),\n  j_oTag: new TokContext(\"<tag\"),\n  j_cTag: new TokContext(\"</tag\"),\n  j_expr: new TokContext(\"<tag>...</tag>\", true)\n};\n{\n  types$1.template = new TokContext(\"`\", true);\n}\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass ExportedTokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    {\n      this.updateContext = null;\n    }\n  }\n}\nconst keywords$1 = new Map();\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\nfunction createBinop(name, binop) {\n  return createToken(name, {\n    beforeExpr,\n    binop\n  });\n}\nlet tokenTypeCounter = -1;\nconst tokenTypes$1 = [];\nconst tokenLabels = [];\nconst tokenBinops = [];\nconst tokenBeforeExprs = [];\nconst tokenStartsExprs = [];\nconst tokenPrefixes = [];\nfunction createToken(name, options = {}) {\n  var _options$binop, _options$beforeExpr, _options$startsExpr, _options$prefix;\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop = options.binop) != null ? _options$binop : -1);\n  tokenBeforeExprs.push((_options$beforeExpr = options.beforeExpr) != null ? _options$beforeExpr : false);\n  tokenStartsExprs.push((_options$startsExpr = options.startsExpr) != null ? _options$startsExpr : false);\n  tokenPrefixes.push((_options$prefix = options.prefix) != null ? _options$prefix : false);\n  tokenTypes$1.push(new ExportedTokenType(name, options));\n  return tokenTypeCounter;\n}\nfunction createKeywordLike(name, options = {}) {\n  var _options$binop2, _options$beforeExpr2, _options$startsExpr2, _options$prefix2;\n  ++tokenTypeCounter;\n  keywords$1.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop2 = options.binop) != null ? _options$binop2 : -1);\n  tokenBeforeExprs.push((_options$beforeExpr2 = options.beforeExpr) != null ? _options$beforeExpr2 : false);\n  tokenStartsExprs.push((_options$startsExpr2 = options.startsExpr) != null ? _options$startsExpr2 : false);\n  tokenPrefixes.push((_options$prefix2 = options.prefix) != null ? _options$prefix2 : false);\n  tokenTypes$1.push(new ExportedTokenType(\"name\", options));\n  return tokenTypeCounter;\n}\nconst tt = {\n  bracketL: createToken(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: createToken(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: createToken(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: createToken(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: createToken(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", {\n    beforeExpr\n  }),\n  semi: createToken(\";\", {\n    beforeExpr\n  }),\n  colon: createToken(\":\", {\n    beforeExpr\n  }),\n  doubleColon: createToken(\"::\", {\n    beforeExpr\n  }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", {\n    beforeExpr\n  }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", {\n    beforeExpr\n  }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", {\n    beforeExpr\n  }),\n  backQuote: createToken(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: createToken(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  templateTail: createToken(\"...`\", {\n    startsExpr\n  }),\n  templateNonTail: createToken(\"...${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: createToken(\"#!...\"),\n  eq: createToken(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  xorAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: createToken(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: createToken(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: createToken(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  doubleCaret: createToken(\"^^\", {\n    startsExpr\n  }),\n  doubleAt: createToken(\"@@\", {\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: createToken(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: createToken(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _as: createKeywordLike(\"as\", {\n    startsExpr\n  }),\n  _assert: createKeywordLike(\"assert\", {\n    startsExpr\n  }),\n  _async: createKeywordLike(\"async\", {\n    startsExpr\n  }),\n  _await: createKeywordLike(\"await\", {\n    startsExpr\n  }),\n  _defer: createKeywordLike(\"defer\", {\n    startsExpr\n  }),\n  _from: createKeywordLike(\"from\", {\n    startsExpr\n  }),\n  _get: createKeywordLike(\"get\", {\n    startsExpr\n  }),\n  _let: createKeywordLike(\"let\", {\n    startsExpr\n  }),\n  _meta: createKeywordLike(\"meta\", {\n    startsExpr\n  }),\n  _of: createKeywordLike(\"of\", {\n    startsExpr\n  }),\n  _sent: createKeywordLike(\"sent\", {\n    startsExpr\n  }),\n  _set: createKeywordLike(\"set\", {\n    startsExpr\n  }),\n  _source: createKeywordLike(\"source\", {\n    startsExpr\n  }),\n  _static: createKeywordLike(\"static\", {\n    startsExpr\n  }),\n  _using: createKeywordLike(\"using\", {\n    startsExpr\n  }),\n  _yield: createKeywordLike(\"yield\", {\n    startsExpr\n  }),\n  _asserts: createKeywordLike(\"asserts\", {\n    startsExpr\n  }),\n  _checks: createKeywordLike(\"checks\", {\n    startsExpr\n  }),\n  _exports: createKeywordLike(\"exports\", {\n    startsExpr\n  }),\n  _global: createKeywordLike(\"global\", {\n    startsExpr\n  }),\n  _implements: createKeywordLike(\"implements\", {\n    startsExpr\n  }),\n  _intrinsic: createKeywordLike(\"intrinsic\", {\n    startsExpr\n  }),\n  _infer: createKeywordLike(\"infer\", {\n    startsExpr\n  }),\n  _is: createKeywordLike(\"is\", {\n    startsExpr\n  }),\n  _mixins: createKeywordLike(\"mixins\", {\n    startsExpr\n  }),\n  _proto: createKeywordLike(\"proto\", {\n    startsExpr\n  }),\n  _require: createKeywordLike(\"require\", {\n    startsExpr\n  }),\n  _satisfies: createKeywordLike(\"satisfies\", {\n    startsExpr\n  }),\n  _keyof: createKeywordLike(\"keyof\", {\n    startsExpr\n  }),\n  _readonly: createKeywordLike(\"readonly\", {\n    startsExpr\n  }),\n  _unique: createKeywordLike(\"unique\", {\n    startsExpr\n  }),\n  _abstract: createKeywordLike(\"abstract\", {\n    startsExpr\n  }),\n  _declare: createKeywordLike(\"declare\", {\n    startsExpr\n  }),\n  _enum: createKeywordLike(\"enum\", {\n    startsExpr\n  }),\n  _module: createKeywordLike(\"module\", {\n    startsExpr\n  }),\n  _namespace: createKeywordLike(\"namespace\", {\n    startsExpr\n  }),\n  _interface: createKeywordLike(\"interface\", {\n    startsExpr\n  }),\n  _type: createKeywordLike(\"type\", {\n    startsExpr\n  }),\n  _opaque: createKeywordLike(\"opaque\", {\n    startsExpr\n  }),\n  name: createToken(\"name\", {\n    startsExpr\n  }),\n  string: createToken(\"string\", {\n    startsExpr\n  }),\n  num: createToken(\"num\", {\n    startsExpr\n  }),\n  bigint: createToken(\"bigint\", {\n    startsExpr\n  }),\n  decimal: createToken(\"decimal\", {\n    startsExpr\n  }),\n  regexp: createToken(\"regexp\", {\n    startsExpr\n  }),\n  privateName: createToken(\"#name\", {\n    startsExpr\n  }),\n  eof: createToken(\"eof\"),\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", {\n    beforeExpr: true\n  }),\n  jsxTagStart: createToken(\"jsxTagStart\", {\n    startsExpr: true\n  }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n  placeholder: createToken(\"%%\", {\n    startsExpr: true\n  })\n};\nfunction tokenIsIdentifier(token) {\n  return token >= 93 && token <= 132;\n}\nfunction tokenKeywordOrIdentifierIsKeyword(token) {\n  return token <= 92;\n}\nfunction tokenIsKeywordOrIdentifier(token) {\n  return token >= 58 && token <= 132;\n}\nfunction tokenIsLiteralPropertyName(token) {\n  return token >= 58 && token <= 136;\n}\nfunction tokenComesBeforeExpression(token) {\n  return tokenBeforeExprs[token];\n}\nfunction tokenCanStartExpression(token) {\n  return tokenStartsExprs[token];\n}\nfunction tokenIsAssignment(token) {\n  return token >= 29 && token <= 33;\n}\nfunction tokenIsFlowInterfaceOrTypeOrOpaque(token) {\n  return token >= 129 && token <= 131;\n}\nfunction tokenIsLoop(token) {\n  return token >= 90 && token <= 92;\n}\nfunction tokenIsKeyword(token) {\n  return token >= 58 && token <= 92;\n}\nfunction tokenIsOperator(token) {\n  return token >= 39 && token <= 59;\n}\nfunction tokenIsPostfix(token) {\n  return token === 34;\n}\nfunction tokenIsPrefix(token) {\n  return tokenPrefixes[token];\n}\nfunction tokenIsTSTypeOperator(token) {\n  return token >= 121 && token <= 123;\n}\nfunction tokenIsTSDeclarationStart(token) {\n  return token >= 124 && token <= 130;\n}\nfunction tokenLabelName(token) {\n  return tokenLabels[token];\n}\nfunction tokenOperatorPrecedence(token) {\n  return tokenBinops[token];\n}\nfunction tokenIsRightAssociative(token) {\n  return token === 57;\n}\nfunction tokenIsTemplate(token) {\n  return token >= 24 && token <= 25;\n}\nfunction getExportedToken(token) {\n  return tokenTypes$1[token];\n}\n{\n  tokenTypes$1[8].updateContext = context => {\n    context.pop();\n  };\n  tokenTypes$1[5].updateContext = tokenTypes$1[7].updateContext = tokenTypes$1[23].updateContext = context => {\n    context.push(types$1.brace);\n  };\n  tokenTypes$1[22].updateContext = context => {\n    if (context[context.length - 1] === types$1.template) {\n      context.pop();\n    } else {\n      context.push(types$1.template);\n    }\n  };\n  tokenTypes$1[142].updateContext = context => {\n    context.push(types$1.j_expr, types$1.j_oTag);\n  };\n}\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\nfunction isIteratorStart(current, next, next2) {\n  return current === 64 && next === 64 && isIdentifierStart(next2);\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\nclass Scope {\n  constructor(flags) {\n    this.flags = 0;\n    this.names = new Map();\n    this.firstLexicalName = \"\";\n    this.flags = flags;\n  }\n}\nclass ScopeHandler {\n  constructor(parser, inModule) {\n    this.parser = void 0;\n    this.scopeStack = [];\n    this.inModule = void 0;\n    this.undefinedExports = new Map();\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n  get inTopLevel() {\n    return (this.currentScope().flags & 1) > 0;\n  }\n  get inFunction() {\n    return (this.currentVarScopeFlags() & 2) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & 16) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & 32) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & 64) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & 64) > 0 && (flags & 2) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & 128) {\n        return true;\n      }\n      if (flags & (387 | 64)) {\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & 2) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n  createScope(flags) {\n    return new Scope(flags);\n  }\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n  exit() {\n    const scope = this.scopeStack.pop();\n    return scope.flags;\n  }\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & (2 | 128) || !this.parser.inModule && scope.flags & 1);\n  }\n  declareName(name, bindingType, loc) {\n    let scope = this.currentScope();\n    if (bindingType & 8 || bindingType & 16) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      let type = scope.names.get(name) || 0;\n      if (bindingType & 16) {\n        type = type | 4;\n      } else {\n        if (!scope.firstLexicalName) {\n          scope.firstLexicalName = name;\n        }\n        type = type | 2;\n      }\n      scope.names.set(name, type);\n      if (bindingType & 8) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & 4) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.names.set(name, (scope.names.get(name) || 0) | 1);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & 387) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & 1) {\n      this.undefinedExports.delete(name);\n    }\n  }\n  maybeExportDefined(scope, name) {\n    if (this.parser.inModule && scope.flags & 1) {\n      this.undefinedExports.delete(name);\n    }\n  }\n  checkRedeclarationInScope(scope, name, bindingType, loc) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, loc, {\n        identifierName: name\n      });\n    }\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & 1)) return false;\n    if (bindingType & 8) {\n      return scope.names.has(name);\n    }\n    const type = scope.names.get(name);\n    if (bindingType & 16) {\n      return (type & 2) > 0 || !this.treatFunctionsAsVarInScope(scope) && (type & 1) > 0;\n    }\n    return (type & 2) > 0 && !(scope.flags & 8 && scope.firstLexicalName === name) || !this.treatFunctionsAsVarInScope(scope) && (type & 4) > 0;\n  }\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (!topLevelScope.names.has(name)) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & 387) {\n        return flags;\n      }\n    }\n  }\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & (387 | 64) && !(flags & 4)) {\n        return flags;\n      }\n    }\n  }\n}\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n}\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n  declareName(name, bindingType, loc) {\n    const scope = this.currentScope();\n    if (bindingType & 2048) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n    super.declareName(name, bindingType, loc);\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n    if (bindingType & 2048 && !scope.declareFunctions.has(name)) {\n      const type = scope.names.get(name);\n      return (type & 4) > 0 || (type & 2) > 0;\n    }\n    return false;\n  }\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n  hasPlugin(pluginConfig) {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(pluginOptions)) {\n        if ((actualOptions == null ? void 0 : actualOptions[key]) !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  getPluginOption(plugin, name) {\n    var _this$plugins$get;\n    return (_this$plugins$get = this.plugins.get(plugin)) == null ? void 0 : _this$plugins$get[name];\n  }\n}\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\nfunction setLeadingComments(node, comments) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    const {\n      commentsLen\n    } = this.state;\n    if (this.comments.length != commentsLen) this.comments.length = commentsLen;\n    this.comments.push(comment);\n    this.state.commentsLen++;\n  }\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n    const {\n      start: nodeStart\n    } = node;\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        break;\n      }\n    }\n  }\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n  resetPreviousIdentifierLeadingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    if (commentStack[length - 1].trailingNode === node) {\n      commentStack[length - 1].trailingNode = null;\n    } else if (length >= 2 && commentStack[length - 2].trailingNode === node) {\n      commentStack[length - 2].trailingNode = null;\n    }\n  }\n  takeSurroundingComments(node, start, end) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/g;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n    default:\n      return false;\n  }\n}\nclass State {\n  constructor() {\n    this.flags = 1024;\n    this.curLine = void 0;\n    this.lineStart = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.labels = [];\n    this.commentsLen = 0;\n    this.commentStack = [];\n    this.pos = 0;\n    this.type = 139;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.context = [types$1.brace];\n    this.firstInvalidTemplateEscapePos = null;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n  get strict() {\n    return (this.flags & 1) > 0;\n  }\n  set strict(value) {\n    if (value) {\n      this.flags |= 1;\n    } else {\n      this.flags &= ~1;\n    }\n  }\n  init({\n    strictMode,\n    sourceType,\n    startLine,\n    startColumn\n  }) {\n    this.strict = strictMode === false ? false : strictMode === true ? true : sourceType === \"module\";\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n  get maybeInArrowParameters() {\n    return (this.flags & 2) > 0;\n  }\n  set maybeInArrowParameters(value) {\n    if (value) {\n      this.flags |= 2;\n    } else {\n      this.flags &= ~2;\n    }\n  }\n  get inType() {\n    return (this.flags & 4) > 0;\n  }\n  set inType(value) {\n    if (value) {\n      this.flags |= 4;\n    } else {\n      this.flags &= ~4;\n    }\n  }\n  get noAnonFunctionType() {\n    return (this.flags & 8) > 0;\n  }\n  set noAnonFunctionType(value) {\n    if (value) {\n      this.flags |= 8;\n    } else {\n      this.flags &= ~8;\n    }\n  }\n  get hasFlowComment() {\n    return (this.flags & 16) > 0;\n  }\n  set hasFlowComment(value) {\n    if (value) {\n      this.flags |= 16;\n    } else {\n      this.flags &= ~16;\n    }\n  }\n  get isAmbientContext() {\n    return (this.flags & 32) > 0;\n  }\n  set isAmbientContext(value) {\n    if (value) {\n      this.flags |= 32;\n    } else {\n      this.flags &= ~32;\n    }\n  }\n  get inAbstractClass() {\n    return (this.flags & 64) > 0;\n  }\n  set inAbstractClass(value) {\n    if (value) {\n      this.flags |= 64;\n    } else {\n      this.flags &= ~64;\n    }\n  }\n  get inDisallowConditionalTypesContext() {\n    return (this.flags & 128) > 0;\n  }\n  set inDisallowConditionalTypesContext(value) {\n    if (value) {\n      this.flags |= 128;\n    } else {\n      this.flags &= ~128;\n    }\n  }\n  get soloAwait() {\n    return (this.flags & 256) > 0;\n  }\n  set soloAwait(value) {\n    if (value) {\n      this.flags |= 256;\n    } else {\n      this.flags &= ~256;\n    }\n  }\n  get inFSharpPipelineDirectBody() {\n    return (this.flags & 512) > 0;\n  }\n  set inFSharpPipelineDirectBody(value) {\n    if (value) {\n      this.flags |= 512;\n    } else {\n      this.flags &= ~512;\n    }\n  }\n  get canStartJSXElement() {\n    return (this.flags & 1024) > 0;\n  }\n  set canStartJSXElement(value) {\n    if (value) {\n      this.flags |= 1024;\n    } else {\n      this.flags &= ~1024;\n    }\n  }\n  get containsEsc() {\n    return (this.flags & 2048) > 0;\n  }\n  set containsEsc(value) {\n    if (value) {\n      this.flags |= 2048;\n    } else {\n      this.flags &= ~2048;\n    }\n  }\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n  clone() {\n    const state = new State();\n    state.flags = this.flags;\n    state.curLine = this.curLine;\n    state.lineStart = this.lineStart;\n    state.startLoc = this.startLoc;\n    state.endLoc = this.endLoc;\n    state.errors = this.errors.slice();\n    state.potentialArrowAt = this.potentialArrowAt;\n    state.noArrowAt = this.noArrowAt.slice();\n    state.noArrowParamsConversionAt = this.noArrowParamsConversionAt.slice();\n    state.topicContext = this.topicContext;\n    state.labels = this.labels.slice();\n    state.commentsLen = this.commentsLen;\n    state.commentStack = this.commentStack.slice();\n    state.pos = this.pos;\n    state.type = this.type;\n    state.value = this.value;\n    state.start = this.start;\n    state.end = this.end;\n    state.lastTokEndLoc = this.lastTokEndLoc;\n    state.lastTokStartLoc = this.lastTokStartLoc;\n    state.context = this.context.slice();\n    state.firstInvalidTemplateEscapePos = this.firstInvalidTemplateEscapePos;\n    state.strictErrors = this.strictErrors;\n    state.tokensLength = this.tokensLength;\n    return state;\n  }\n}\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set([46, 66, 69, 79, 95, 98, 101, 111]),\n  hex: new Set([46, 88, 95, 120])\n};\nconst isAllowedNumericSeparatorSibling = {\n  bin: ch => ch === 48 || ch === 49,\n  oct: ch => ch >= 48 && ch <= 55,\n  dec: ch => ch >= 48 && ch <= 57,\n  hex: ch => ch >= 48 && ch <= 57 || ch >= 65 && ch <= 70 || ch >= 97 && ch <= 102\n};\nfunction readStringContents(type, input, pos, lineStart, curLine, errors) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n  let out = \"\";\n  let firstInvalidLoc = null;\n  let chunkStart = pos;\n  const {\n    length\n  } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === 92) {\n      out += input.slice(chunkStart, pos);\n      const res = readEscapedChar(input, pos, lineStart, curLine, type === \"template\", errors);\n      if (res.ch === null && !firstInvalidLoc) {\n        firstInvalidLoc = {\n          pos,\n          lineStart,\n          curLine\n        };\n      } else {\n        out += res.ch;\n      }\n      ({\n        pos,\n        lineStart,\n        curLine\n      } = res);\n      chunkStart = pos;\n    } else if (ch === 8232 || ch === 8233) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === 10 || ch === 13) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (ch === 13 && input.charCodeAt(pos) === 10) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return {\n    pos,\n    str: out,\n    firstInvalidLoc,\n    lineStart,\n    curLine,\n    containsInvalid: !!firstInvalidLoc\n  };\n}\nfunction isStringEnd(type, ch, input, pos) {\n  if (type === \"template\") {\n    return ch === 96 || ch === 36 && input.charCodeAt(pos + 1) === 123;\n  }\n  return ch === (type === \"double\" ? 34 : 39);\n}\nfunction readEscapedChar(input, pos, lineStart, curLine, inTemplate, errors) {\n  const throwOnInvalid = !inTemplate;\n  pos++;\n  const res = ch => ({\n    pos,\n    ch,\n    lineStart,\n    curLine\n  });\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case 110:\n      return res(\"\\n\");\n    case 114:\n      return res(\"\\r\");\n    case 120:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readHexChar(input, pos, lineStart, curLine, 2, false, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCharCode(code));\n      }\n    case 117:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCodePoint(code));\n      }\n    case 116:\n      return res(\"\\t\");\n    case 98:\n      return res(\"\\b\");\n    case 118:\n      return res(\"\\u000b\");\n    case 102:\n      return res(\"\\f\");\n    case 13:\n      if (input.charCodeAt(pos) === 10) {\n        ++pos;\n      }\n    case 10:\n      lineStart = pos;\n      ++curLine;\n    case 8232:\n    case 8233:\n      return res(\"\");\n    case 56:\n    case 57:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/);\n        let octalStr = match[0];\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (octalStr !== \"0\" || next === 56 || next === 57) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n        return res(String.fromCharCode(octal));\n      }\n      return res(String.fromCharCode(ch));\n  }\n}\nfunction readHexChar(input, pos, lineStart, curLine, len, forceLen, throwOnInvalid, errors) {\n  const initialPos = pos;\n  let n;\n  ({\n    n,\n    pos\n  } = readInt(input, pos, lineStart, curLine, 16, len, forceLen, false, errors, !throwOnInvalid));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return {\n    code: n,\n    pos\n  };\n}\nfunction readInt(input, pos, lineStart, curLine, radix, len, forceLen, allowNumSeparator, errors, bailOnError) {\n  const start = pos;\n  const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling = radix === 16 ? isAllowedNumericSeparatorSibling.hex : radix === 10 ? isAllowedNumericSeparatorSibling.dec : radix === 8 ? isAllowedNumericSeparatorSibling.oct : isAllowedNumericSeparatorSibling.bin;\n  let invalid = false;\n  let total = 0;\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n    if (code === 95 && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n      if (!allowNumSeparator) {\n        if (bailOnError) return {\n          n: null,\n          pos\n        };\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (Number.isNaN(next) || !isAllowedSibling(next) || forbiddenSiblings.has(prev) || forbiddenSiblings.has(next)) {\n        if (bailOnError) return {\n          n: null,\n          pos\n        };\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n      ++pos;\n      continue;\n    }\n    if (code >= 97) {\n      val = code - 97 + 10;\n    } else if (code >= 65) {\n      val = code - 65 + 10;\n    } else if (_isDigit(code)) {\n      val = code - 48;\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      if (val <= 9 && bailOnError) {\n        return {\n          n: null,\n          pos\n        };\n      } else if (val <= 9 && errors.invalidDigit(pos, lineStart, curLine, radix)) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || len != null && pos - start !== len || invalid) {\n    return {\n      n: null,\n      pos\n    };\n  }\n  return {\n    n: total,\n    pos\n  };\n}\nfunction readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors) {\n  const ch = input.charCodeAt(pos);\n  let code;\n  if (ch === 123) {\n    ++pos;\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, input.indexOf(\"}\", pos) - pos, true, throwOnInvalid, errors));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return {\n          code: null,\n          pos\n        };\n      }\n    }\n  } else {\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, 4, false, throwOnInvalid, errors));\n  }\n  return {\n    code,\n    pos\n  };\n}\nfunction buildPosition(pos, lineStart, curLine) {\n  return new Position(curLine, pos - lineStart, pos);\n}\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100, 118]);\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n}\nclass Tokenizer extends CommentsParser {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.errorHandlers_readInt = {\n      invalidDigit: (pos, lineStart, curLine, radix) => {\n        if (!this.options.errorRecovery) return false;\n        this.raise(Errors.InvalidDigit, buildPosition(pos, lineStart, curLine), {\n          radix\n        });\n        return true;\n      },\n      numericSeparatorInEscapeSequence: this.errorBuilder(Errors.NumericSeparatorInEscapeSequence),\n      unexpectedNumericSeparator: this.errorBuilder(Errors.UnexpectedNumericSeparator)\n    };\n    this.errorHandlers_readCodePoint = Object.assign({}, this.errorHandlers_readInt, {\n      invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n      invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint)\n    });\n    this.errorHandlers_readStringContents_string = Object.assign({}, this.errorHandlers_readCodePoint, {\n      strictNumericEscape: (pos, lineStart, curLine) => {\n        this.recordStrictModeErrors(Errors.StrictNumericEscape, buildPosition(pos, lineStart, curLine));\n      },\n      unterminated: (pos, lineStart, curLine) => {\n        throw this.raise(Errors.UnterminatedString, buildPosition(pos - 1, lineStart, curLine));\n      }\n    });\n    this.errorHandlers_readStringContents_template = Object.assign({}, this.errorHandlers_readCodePoint, {\n      strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n      unterminated: (pos, lineStart, curLine) => {\n        throw this.raise(Errors.UnterminatedTemplate, buildPosition(pos, lineStart, curLine));\n      }\n    });\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.comments = [];\n    this.isLookahead = false;\n  }\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n  next() {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n  match(type) {\n    return this.state.type === type;\n  }\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition\n    };\n  }\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n  nextTokenInLineStart() {\n    return this.nextTokenInLineStartSince(this.state.pos);\n  }\n  nextTokenInLineStartSince(pos) {\n    skipWhiteSpaceInLine.lastIndex = pos;\n    return skipWhiteSpaceInLine.test(this.input) ? skipWhiteSpaceInLine.lastIndex : pos;\n  }\n  lookaheadInLineCharCode() {\n    return this.input.charCodeAt(this.nextTokenInLineStart());\n  }\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n  setStrict(strict) {\n    this.state.strict = strict;\n    if (strict) {\n      this.state.strictErrors.forEach(([toParseError, at]) => this.raise(toParseError, at));\n      this.state.strictErrors.clear();\n    }\n  }\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n  nextToken() {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(139);\n      return;\n    }\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n  skipBlockComment(commentEnd) {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(commentEnd, start + 2);\n    if (end === -1) {\n      throw this.raise(Errors.UnterminatedComment, this.state.curPosition());\n    }\n    this.state.pos = end + commentEnd.length;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + commentEnd.length,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment(\"*/\");\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n                break;\n              }\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n                break;\n              }\n            default:\n              break loop;\n          }\n          break;\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule && this.options.annexB) {\n            const pos = this.state.pos;\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule && this.options.annexB) {\n            const pos = this.state.pos;\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n  replaceToken(type) {\n    this.state.type = type;\n    this.updateContext();\n  }\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= 48 && next <= 57) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, this.state.curPosition());\n    }\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\") {\n        throw this.raise(next === 123 ? Errors.RecordExpressionHashIncorrectStartSyntaxType : Errors.TupleExpressionHashIncorrectStartSyntaxType, this.state.curPosition());\n      }\n      this.state.pos += 2;\n      if (next === 123) {\n        this.finishToken(7);\n      } else {\n        this.finishToken(1);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(138, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(138, this.readWord1());\n    } else {\n      this.finishOp(27, 1);\n    }\n  }\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(21);\n    } else {\n      ++this.state.pos;\n      this.finishToken(16);\n    }\n  }\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      this.finishOp(31, 2);\n    } else {\n      this.finishOp(56, 1);\n    }\n  }\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(28, value);\n    return true;\n  }\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? 55 : 54;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = 57;\n    }\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? 33 : 30;\n    }\n    this.finishOp(type, width);\n  }\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(code === 124 ? 41 : 42, 2);\n      }\n      return;\n    }\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(39, 2);\n        return;\n      }\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, this.state.curPosition());\n        }\n        this.state.pos += 2;\n        this.finishToken(9);\n        return;\n      }\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, this.state.curPosition());\n        }\n        this.state.pos += 2;\n        this.finishToken(4);\n        return;\n      }\n    }\n    if (next === 61) {\n      this.finishOp(30, 2);\n      return;\n    }\n    this.finishOp(code === 124 ? 43 : 45, 1);\n  }\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61 && !this.state.inType) {\n      this.finishOp(32, 2);\n    } else if (next === 94 && this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"hack\",\n      topicToken: \"^^\"\n    }])) {\n      this.finishOp(37, 2);\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === 94) {\n        this.unexpected();\n      }\n    } else {\n      this.finishOp(44, 1);\n    }\n  }\n  readToken_atSign() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 64 && this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"hack\",\n      topicToken: \"@@\"\n    }])) {\n      this.finishOp(38, 2);\n    } else {\n      this.finishOp(26, 1);\n    }\n  }\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === code) {\n      this.finishOp(34, 2);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(30, 2);\n    } else {\n      this.finishOp(53, 1);\n    }\n  }\n  readToken_lt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n    if (next === 60) {\n      if (this.input.charCodeAt(pos + 2) === 61) {\n        this.finishOp(30, 3);\n        return;\n      }\n      this.finishOp(51, 2);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(49, 2);\n      return;\n    }\n    this.finishOp(47, 1);\n  }\n  readToken_gt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n    if (next === 62) {\n      const size = this.input.charCodeAt(pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === 61) {\n        this.finishOp(30, size + 1);\n        return;\n      }\n      this.finishOp(52, size);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(49, 2);\n      return;\n    }\n    this.finishOp(48, 1);\n  }\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      this.finishOp(46, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(19);\n      return;\n    }\n    this.finishOp(code === 61 ? 29 : 35, 1);\n  }\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(40, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(18);\n    } else {\n      ++this.state.pos;\n      this.finishToken(17);\n    }\n  }\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n      case 40:\n        ++this.state.pos;\n        this.finishToken(10);\n        return;\n      case 41:\n        ++this.state.pos;\n        this.finishToken(11);\n        return;\n      case 59:\n        ++this.state.pos;\n        this.finishToken(13);\n        return;\n      case 44:\n        ++this.state.pos;\n        this.finishToken(12);\n        return;\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(Errors.TupleExpressionBarIncorrectStartSyntaxType, this.state.curPosition());\n          }\n          this.state.pos += 2;\n          this.finishToken(2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(0);\n        }\n        return;\n      case 93:\n        ++this.state.pos;\n        this.finishToken(3);\n        return;\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(Errors.RecordExpressionBarIncorrectStartSyntaxType, this.state.curPosition());\n          }\n          this.state.pos += 2;\n          this.finishToken(6);\n        } else {\n          ++this.state.pos;\n          this.finishToken(5);\n        }\n        return;\n      case 125:\n        ++this.state.pos;\n        this.finishToken(8);\n        return;\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(15, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(14);\n        }\n        return;\n      case 63:\n        this.readToken_question();\n        return;\n      case 96:\n        this.readTemplateToken();\n        return;\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n      case 47:\n        this.readToken_slash();\n        return;\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n      case 94:\n        this.readToken_caret();\n        return;\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n      case 60:\n        this.readToken_lt();\n        return;\n      case 62:\n        this.readToken_gt();\n        return;\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n      case 126:\n        this.finishOp(36, 1);\n        return;\n      case 64:\n        this.readToken_atSign();\n        return;\n      case 35:\n        this.readToken_numberSign();\n        return;\n      case 92:\n        this.readWord();\n        return;\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n    throw this.raise(Errors.InvalidOrUnexpectedToken, this.state.curPosition(), {\n      unexpected: String.fromCodePoint(code)\n    });\n  }\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n  readRegexp() {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(Errors.UnterminatedRegExp, createPositionWithColumnOffset(startLoc, 1));\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, createPositionWithColumnOffset(startLoc, 1));\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n        escaped = ch === 92;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n    const nextPos = () => createPositionWithColumnOffset(startLoc, pos + 2 - start);\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === 118) {\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, nextPos());\n          }\n        } else if (cp === 117) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, nextPos());\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, nextPos());\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(Errors.MalformedRegExpFlags, nextPos());\n      } else {\n        break;\n      }\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n    this.finishToken(137, {\n      pattern: content,\n      flags: mods\n    });\n  }\n  readInt(radix, len, forceLen = false, allowNumSeparator = true) {\n    const {\n      n,\n      pos\n    } = readInt(this.input, this.state.pos, this.state.lineStart, this.state.curLine, radix, len, forceLen, allowNumSeparator, this.errorHandlers_readInt, false);\n    this.state.pos = pos;\n    return n;\n  }\n  readRadixNumber(radix) {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, createPositionWithColumnOffset(startLoc, 2), {\n        radix\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(Errors.InvalidDecimal, startLoc);\n    }\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, this.state.curPosition());\n    }\n    if (isBigInt) {\n      const str = this.input.slice(startLoc.index, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(135, str);\n      return;\n    }\n    this.finishToken(134, val);\n  }\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, this.state.curPosition());\n    }\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, startLoc);\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(Errors.ZeroDigitNumericSeparator, createPositionWithColumnOffset(startLoc, underscorePos));\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, startLoc);\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, startLoc);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, startLoc);\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, this.state.curPosition());\n    }\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n    if (isBigInt) {\n      this.finishToken(135, str);\n      return;\n    }\n    if (isDecimal) {\n      this.finishToken(136, str);\n      return;\n    }\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(134, val);\n  }\n  readCodePoint(throwOnInvalid) {\n    const {\n      code,\n      pos\n    } = readCodePoint(this.input, this.state.pos, this.state.lineStart, this.state.curLine, throwOnInvalid, this.errorHandlers_readCodePoint);\n    this.state.pos = pos;\n    return code;\n  }\n  readString(quote) {\n    const {\n      str,\n      pos,\n      curLine,\n      lineStart\n    } = readStringContents(quote === 34 ? \"double\" : \"single\", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_string);\n    this.state.pos = pos + 1;\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(133, str);\n  }\n  readTemplateContinuation() {\n    if (!this.match(8)) {\n      this.unexpected(null, 8);\n    }\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n  readTemplateToken() {\n    const opening = this.input[this.state.pos];\n    const {\n      str,\n      firstInvalidLoc,\n      pos,\n      curLine,\n      lineStart\n    } = readStringContents(\"template\", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_template);\n    this.state.pos = pos + 1;\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    if (firstInvalidLoc) {\n      this.state.firstInvalidTemplateEscapePos = new Position(firstInvalidLoc.curLine, firstInvalidLoc.pos - firstInvalidLoc.lineStart, firstInvalidLoc.pos);\n    }\n    if (this.input.codePointAt(pos) === 96) {\n      this.finishToken(24, firstInvalidLoc ? null : opening + str + \"`\");\n    } else {\n      this.state.pos++;\n      this.finishToken(25, firstInvalidLoc ? null : opening + str + \"${\");\n    }\n  }\n  recordStrictModeErrors(toParseError, at) {\n    const index = at.index;\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, at);\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(Errors.MissingUnicodeEscape, this.state.curPosition());\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, escStart);\n          }\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word);\n    if (type !== undefined) {\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(132, word);\n    }\n  }\n  checkKeywordEscapes() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, this.state.startLoc, {\n        reservedWord: tokenLabelName(type)\n      });\n    }\n  }\n  raise(toParseError, at, details = {}) {\n    const loc = at instanceof Position ? at : at.loc.start;\n    const error = toParseError(loc, details);\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n    return error;\n  }\n  raiseOverwrite(toParseError, at, details = {}) {\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        return errors[i] = toParseError(loc, details);\n      }\n      if (error.loc.index < pos) break;\n    }\n    return this.raise(toParseError, at, details);\n  }\n  updateContext(prevType) {}\n  unexpected(loc, type) {\n    throw this.raise(Errors.UnexpectedToken, loc != null ? loc : this.state.startLoc, {\n      expected: type ? tokenLabelName(type) : null\n    });\n  }\n  expectPlugin(pluginName, loc) {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n    throw this.raise(Errors.MissingPlugin, loc != null ? loc : this.state.startLoc, {\n      missingPlugin: [pluginName]\n    });\n  }\n  expectOnePlugin(pluginNames) {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, this.state.startLoc, {\n        missingPlugin: pluginNames\n      });\n    }\n  }\n  errorBuilder(error) {\n    return (pos, lineStart, curLine) => {\n      this.raise(error, buildPosition(pos, lineStart, curLine));\n    };\n  }\n}\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n}\nclass ClassScopeHandler {\n  constructor(parser) {\n    this.parser = void 0;\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.parser = parser;\n  }\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, loc, {\n          identifierName: name\n        });\n      }\n    }\n  }\n  declarePrivateName(name, elementType, loc) {\n    const {\n      privateNames,\n      loneAccessors,\n      undefinedPrivateNames\n    } = this.current();\n    let redefined = privateNames.has(name);\n    if (elementType & 3) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & 4;\n        const newStatic = elementType & 4;\n        const oldKind = accessor & 3;\n        const newKind = elementType & 3;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, loc, {\n        identifierName: name\n      });\n    }\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n  usePrivateName(name, loc) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, loc, {\n        identifierName: name\n      });\n    }\n  }\n}\nclass ExpressionScope {\n  constructor(type = 0) {\n    this.type = type;\n  }\n  canBeArrowParameterDeclaration() {\n    return this.type === 2 || this.type === 1;\n  }\n  isCertainlyParameterDeclaration() {\n    return this.type === 3;\n  }\n}\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.declarationErrors = new Map();\n  }\n  recordDeclarationError(ParsingErrorClass, at) {\n    const index = at.index;\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(iterator) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\nclass ExpressionScopeHandler {\n  constructor(parser) {\n    this.parser = void 0;\n    this.stack = [new ExpressionScope()];\n    this.parser = parser;\n  }\n  enter(scope) {\n    this.stack.push(scope);\n  }\n  exit() {\n    this.stack.pop();\n  }\n  recordParameterInitializerError(toParseError, node) {\n    const origin = node.loc.start;\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n  recordArrowParameterBindingError(error, node) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n    const origin = node.loc.start;\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n  recordAsyncArrowParametersError(at) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === 2) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, at);\n      }\n      scope = stack[--i];\n    }\n  }\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, loc);\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(3);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(1);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(2);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n  exit() {\n    this.stacks.pop();\n  }\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n  get hasAwait() {\n    return (this.currentFlags() & 2) > 0;\n  }\n  get hasYield() {\n    return (this.currentFlags() & 1) > 0;\n  }\n  get hasReturn() {\n    return (this.currentFlags() & 4) > 0;\n  }\n  get hasIn() {\n    return (this.currentFlags() & 8) > 0;\n  }\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? 2 : 0) | (isGenerator ? 1 : 0);\n}\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, value, enumerable = true) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, {\n        enumerable,\n        value\n      });\n    }\n  }\n  isContextual(token) {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n    return false;\n  }\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n  eatContextual(token) {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  expectContextual(token, toParseError) {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, this.state.startLoc);\n      }\n      this.unexpected(null, token);\n    }\n  }\n  canInsertSemicolon() {\n    return this.match(139) || this.match(8) || this.hasPrecedingLineBreak();\n  }\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEndLoc.index, this.state.start));\n  }\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n  isLineTerminator() {\n    return this.eat(13) || this.canInsertSemicolon();\n  }\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(13)) return;\n    this.raise(Errors.MissingSemicolon, this.state.lastTokEndLoc);\n  }\n  expect(type, loc) {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n      throw error;\n    }\n  }\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc\n    } = refExpressionErrors;\n    const hasErrors = !!shorthandAssignLoc || !!doubleProtoLoc || !!optionalParametersLoc || !!privateKeyLoc;\n    if (!andThrow) {\n      return hasErrors;\n    }\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, shorthandAssignLoc);\n    }\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, doubleProtoLoc);\n    }\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, privateKeyLoc);\n    }\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n  isLiteralPropertyName() {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n  enterInitialScopes() {\n    let paramFlags = 0;\n    if (this.inModule) {\n      paramFlags |= 2;\n    }\n    this.scope.enter(1);\n    this.prodParam.enter(paramFlags);\n  }\n  checkDestructuringPrivate(refExpressionErrors) {\n    const {\n      privateKeyLoc\n    } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssignLoc = null;\n    this.doubleProtoLoc = null;\n    this.privateKeyLoc = null;\n    this.optionalParametersLoc = null;\n  }\n}\nlet Node$5 = class Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n};\nconst NodePrototype = Node$5.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node$5(undefined, this.start, this.loc.start);\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n    return newNode;\n  };\n}\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    const loc = this.state.startLoc;\n    return new Node$5(this, loc.index, loc);\n  }\n  startNodeAt(loc) {\n    return new Node$5(this, loc.index, loc);\n  }\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.loc.start);\n  }\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n  finishNodeAt(node, type, endLoc) {\n    node.type = type;\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n  resetStartLocation(node, startLoc) {\n    node.start = startLoc.index;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = startLoc.index;\n  }\n  resetEndLocation(node, endLoc = this.state.lastTokEndLoc) {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.loc.start);\n  }\n}\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: ({\n    reservedType\n  }) => `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName\n  }) => `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName\n  }) => `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({\n    enumName\n  }) => `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName\n  }) => `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName\n  }) => `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType\n  }) => `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName\n  }) => `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName\n  }) => `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion\n  }) => `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName\n  }) => `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitialized: ({\n    enumName\n  }) => `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportReflectionHasImportType: \"An `import module` declaration can not use `type` or `typeof` keyword.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: Object.assign({\n    message: \"A binding pattern parameter cannot be optional in an implementation signature.\"\n  }, {\n    reasonCode: \"OptionalBindingPattern\"\n  }),\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({\n    reservedType\n  }) => `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion\n  }) => `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n});\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = superClass => class FlowParserMixin extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n  finishToken(type, val) {\n    if (type !== 133 && type !== 13 && type !== 28) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n    super.finishToken(type, val);\n  }\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n      if (!matches) ;else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n    super.addComment(comment);\n  }\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || 14);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloLoc = this.state.startLoc;\n    this.next();\n    this.expectContextual(110);\n    if (this.state.lastTokStartLoc.index > moduloLoc.index + 1) {\n      this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, moduloLoc);\n    }\n    if (this.eat(10)) {\n      node.value = super.parseExpression();\n      this.expect(11);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(14);\n    let type = null;\n    let predicate = null;\n    if (this.match(54)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n      if (this.match(54)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n    return [type, predicate];\n  }\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n    if (this.match(47)) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n    this.expect(10);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(11);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, 2048, node.id.loc.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n  flowParseDeclare(node, insideModule) {\n    if (this.match(80)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(68)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(74)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(127)) {\n      if (this.match(16)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(FlowErrors.NestedDeclareModule, this.state.lastTokStartLoc);\n        }\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(130)) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(131)) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(129)) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(82)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      this.unexpected();\n    }\n  }\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, 5, node.id.loc.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n  flowParseDeclareModule(node) {\n    this.scope.enter(0);\n    if (this.match(133)) {\n      node.id = super.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(5);\n    while (!this.match(8)) {\n      let bodyNode = this.startNode();\n      if (this.match(83)) {\n        this.next();\n        if (!this.isContextual(130) && !this.match(87)) {\n          this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, this.state.lastTokStartLoc);\n        }\n        super.parseImport(bodyNode);\n      } else {\n        this.expectContextual(125, FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n      body.push(bodyNode);\n    }\n    this.scope.exit();\n    this.expect(8);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(FlowErrors.AmbiguousDeclareModuleKind, bodyElement);\n        }\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(FlowErrors.DuplicateDeclareModuleExports, bodyElement);\n        }\n        if (kind === \"ES\") {\n          this.raise(FlowErrors.AmbiguousDeclareModuleKind, bodyElement);\n        }\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(82);\n    if (this.eat(65)) {\n      if (this.match(68) || this.match(80)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(75) || this.isLet() || (this.isContextual(130) || this.isContextual(129)) && !insideModule) {\n        const label = this.state.value;\n        throw this.raise(FlowErrors.UnsupportedDeclareExportKind, this.state.startLoc, {\n          unsupportedExportKind: label,\n          suggestion: exportSuggestions[label]\n        });\n      }\n      if (this.match(74) || this.match(68) || this.match(80) || this.isContextual(131)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(55) || this.match(5) || this.isContextual(129) || this.isContextual(130) || this.isContextual(131)) {\n        node = this.parseExport(node, null);\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n    this.unexpected();\n  }\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(111);\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    const finished = this.flowParseTypeAlias(node);\n    finished.type = \"DeclareTypeAlias\";\n    return finished;\n  }\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    const finished = this.flowParseOpaqueType(node, true);\n    finished.type = \"DeclareOpaqueType\";\n    return finished;\n  }\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node, false);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n  flowParseInterfaceish(node, isClass) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? 17 : 8201, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.extends = [];\n    if (this.eat(81)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(12));\n    }\n    if (isClass) {\n      node.implements = [];\n      node.mixins = [];\n      if (this.eatContextual(117)) {\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(12));\n      }\n      if (this.eatContextual(113)) {\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(12));\n      }\n    }\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node, false);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(FlowErrors.UnexpectedReservedUnderscore, this.state.startLoc);\n    }\n  }\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, startLoc, {\n      reservedType: word\n    });\n  }\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.startLoc, declaration);\n    return this.parseIdentifier(liberal);\n  }\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, 8201, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.right = this.flowParseTypeInitialiser(29);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(130);\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, 8201, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.supertype = null;\n    if (this.match(14)) {\n      node.supertype = this.flowParseTypeInitialiser(14);\n    }\n    node.impltype = null;\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(29);\n    }\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStartLoc = this.state.startLoc;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n    if (this.match(29)) {\n      this.eat(29);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(FlowErrors.MissingTypeParamDefault, nodeStartLoc);\n      }\n    }\n    return this.finishNode(node, \"TypeParameter\");\n  }\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n    if (this.match(47) || this.match(142)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n    let defaultRequired = false;\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    } while (!this.match(48));\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(47);\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n    while (!this.match(48)) {\n      node.params.push(this.flowParseType());\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    }\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(47);\n    while (!this.match(48)) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    }\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(129);\n    node.extends = [];\n    if (this.eat(81)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n  flowParseObjectPropertyKey() {\n    return this.match(134) || this.match(133) ? super.parseExprAtom() : this.parseIdentifier(true);\n  }\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n    if (this.lookahead().type === 14) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n    this.expect(3);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(3);\n    this.expect(3);\n    if (this.match(47) || this.match(10)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));\n    } else {\n      node.method = false;\n      if (this.eat(17)) {\n        node.optional = true;\n      }\n      node.value = this.flowParseTypeInitialiser();\n    }\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    this.expect(10);\n    if (this.match(78)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    while (!this.match(11) && !this.match(21)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    if (this.eat(21)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n    this.expect(11);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n    if (allowExact && this.match(6)) {\n      this.expect(6);\n      endDelim = 9;\n      exact = true;\n    } else {\n      this.expect(5);\n      endDelim = 8;\n      exact = false;\n    }\n    nodeStart.exact = exact;\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStartLoc = null;\n      let inexactStartLoc = null;\n      const node = this.startNode();\n      if (allowProto && this.isContextual(118)) {\n        const lookahead = this.lookahead();\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          protoStartLoc = this.state.startLoc;\n          allowStatic = false;\n        }\n      }\n      if (allowStatic && this.isContextual(106)) {\n        const lookahead = this.lookahead();\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          isStatic = true;\n        }\n      }\n      const variance = this.flowParseVariance();\n      if (this.eat(0)) {\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (this.eat(0)) {\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(10) || this.match(47)) {\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.unexpected(variance.loc.start);\n        }\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n        if (this.isContextual(99) || this.isContextual(104)) {\n          const lookahead = this.lookahead();\n          if (tokenIsLiteralPropertyName(lookahead.type)) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStartLoc, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStartLoc = this.state.lastTokStartLoc;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n      this.flowObjectTypeSemicolon();\n      if (inexactStartLoc && !this.match(8) && !this.match(9)) {\n        this.raise(FlowErrors.UnexpectedExplicitInexactInObject, inexactStartLoc);\n      }\n    }\n    this.expect(endDelim);\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n  flowParseObjectTypeProperty(node, isStatic, protoStartLoc, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(21)) {\n      const isInexactToken = this.match(12) || this.match(13) || this.match(8) || this.match(9);\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(FlowErrors.InexactInsideNonObject, this.state.lastTokStartLoc);\n        } else if (!allowInexact) {\n          this.raise(FlowErrors.InexactInsideExact, this.state.lastTokStartLoc);\n        }\n        if (variance) {\n          this.raise(FlowErrors.InexactVariance, variance);\n        }\n        return null;\n      }\n      if (!allowSpread) {\n        this.raise(FlowErrors.UnexpectedSpreadType, this.state.lastTokStartLoc);\n      }\n      if (protoStartLoc != null) {\n        this.unexpected(protoStartLoc);\n      }\n      if (variance) {\n        this.raise(FlowErrors.SpreadVariance, variance);\n      }\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStartLoc != null;\n      node.kind = kind;\n      let optional = false;\n      if (this.match(47) || this.match(10)) {\n        node.method = true;\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.unexpected(variance.loc.start);\n        }\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, node.value.this);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n        if (this.eat(17)) {\n          optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n    if (property.value.this) {\n      this.raise(property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam, property.value.this);\n    }\n    if (length !== paramCount) {\n      this.raise(property.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity, property);\n    }\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(Errors.BadSetterRestParameter, property);\n    }\n  }\n  flowObjectTypeSemicolon() {\n    if (!this.eat(13) && !this.eat(12) && !this.match(8) && !this.match(9)) {\n      this.unexpected();\n    }\n  }\n  flowParseQualifiedTypeIdentifier(startLoc, id) {\n    var _startLoc;\n    (_startLoc = startLoc) != null ? _startLoc : startLoc = this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n    while (this.eat(16)) {\n      const node2 = this.startNodeAt(startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n    return node;\n  }\n  flowParseGenericType(startLoc, id) {\n    const node = this.startNodeAt(startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startLoc, id);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(87);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(0);\n    while (this.state.pos < this.length && !this.match(3)) {\n      node.types.push(this.flowParseType());\n      if (this.match(3)) break;\n      this.expect(12);\n    }\n    this.expect(3);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === 78;\n    if (lh.type === 14 || lh.type === 17) {\n      if (isThis && !first) {\n        this.raise(FlowErrors.ThisParamMustBeFirst, node);\n      }\n      name = this.parseIdentifier(isThis);\n      if (this.eat(17)) {\n        optional = true;\n        if (isThis) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, node);\n        }\n      }\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n    if (this.match(78)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    while (!this.match(11) && !this.match(21)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    if (this.eat(21)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n  flowIdentToTypeAnnotation(startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startLoc, id);\n    }\n  }\n  flowParsePrimaryType() {\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    switch (this.state.type) {\n      case 5:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n      case 6:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n      case 0:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n      case 47:\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n        this.expect(10);\n        tmp = this.flowParseFunctionTypeParams();\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      case 10:\n        this.next();\n        if (!this.match(11) && !this.match(21)) {\n          if (tokenIsIdentifier(this.state.type) || this.match(78)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== 17 && token !== 14;\n          } else {\n            isGroupedType = true;\n          }\n        }\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.state.noAnonFunctionType || !(this.match(12) || this.match(11) && this.lookahead().type === 19)) {\n            this.expect(11);\n            return type;\n          } else {\n            this.eat(12);\n          }\n        }\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      case 133:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n      case 85:\n      case 86:\n        node.value = this.match(85);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n      case 53:\n        if (this.state.value === \"-\") {\n          this.next();\n          if (this.match(134)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n          if (this.match(135)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n          throw this.raise(FlowErrors.UnexpectedSubtractionOperand, this.state.startLoc);\n        }\n        this.unexpected();\n        return;\n      case 134:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n      case 135:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n      case 88:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n      case 84:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n      case 78:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n      case 55:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n      case 87:\n        return this.flowParseTypeofType();\n      default:\n        if (tokenIsKeyword(this.state.type)) {\n          const label = tokenLabelName(this.state.type);\n          this.next();\n          return super.createIdentifier(node, label);\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (this.isContextual(129)) {\n            return this.flowParseInterfaceType();\n          }\n          return this.flowIdentToTypeAnnotation(startLoc, node, this.parseIdentifier());\n        }\n    }\n    this.unexpected();\n  }\n  flowParsePostfixType() {\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n    while ((this.match(0) || this.match(18)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startLoc);\n      const optional = this.eat(18);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(0);\n      if (!optional && this.match(3)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(3);\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n    return type;\n  }\n  flowParsePrefixType() {\n    const node = this.startNode();\n    if (this.eat(17)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n    if (!this.state.noAnonFunctionType && this.eat(19)) {\n      const node = this.startNodeAt(param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n    return param;\n  }\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(45);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n    while (this.eat(45)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(43);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n    while (this.eat(43)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === 132 && this.state.value === \"_\") {\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n    if (this.match(14)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n    return ident;\n  }\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n  flowParseVariance() {\n    let variance = null;\n    if (this.match(53)) {\n      variance = this.startNode();\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n      this.next();\n      return this.finishNode(variance, \"Variance\");\n    }\n    return variance;\n  }\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      return;\n    }\n    super.parseFunctionBody(node, false, isMethod);\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n    return super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n  parseStatementLike(flags) {\n    if (this.state.strict && this.isContextual(129)) {\n      const lookahead = this.lookahead();\n      if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(126)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n    const stmt = super.parseStatementLike(flags);\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n    return stmt;\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(80) || tokenIsIdentifier(this.state.type) || this.match(68) || this.match(74) || this.match(82)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (tokenIsIdentifier(this.state.type)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n    return super.parseExpressionStatement(node, expr, decorators);\n  }\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 126) {\n      return !this.state.containsEsc;\n    }\n    return super.shouldParseExportDeclaration();\n  }\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 126) {\n      return this.state.containsEsc;\n    }\n    return super.isExportDefaultSpecifier();\n  }\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(126)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n    return super.parseExportDefaultExpression();\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (!this.match(17)) return expr;\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n    this.expect(17);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n      if (failed && valid.length > 1) {\n        this.raise(FlowErrors.AmbiguousConditionalArrow, state.startLoc);\n      }\n      if (failed && valid.length === 1) {\n        this.state = state;\n        noArrowAt.push(valid[0].start);\n        this.state.noArrowAt = noArrowAt;\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(14);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(14);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n    while (stack.length !== 0) {\n      const node = stack.pop();\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n  finishArrowValidation(node) {\n    var _node$extra;\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingCommaLoc, false);\n    this.scope.enter(2 | 4);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n    return result;\n  }\n  parseParenItem(node, startLoc) {\n    node = super.parseParenItem(node, startLoc);\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n    return node;\n  }\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n    super.assertModuleNodeAllowed(node);\n  }\n  parseExportDeclaration(node) {\n    if (this.isContextual(130)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      if (this.match(5)) {\n        node.specifiers = this.parseExportSpecifiers(true);\n        super.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(131)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(129)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(126)) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n  eatExportStar(node) {\n    if (super.eatExportStar(node)) return true;\n    if (this.isContextual(130) && this.lookahead().type === 55) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamespaceSpecifier(node) {\n    const {\n      startLoc\n    } = this.state;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(startLoc);\n    }\n    return hasNamespace;\n  }\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n  parseClassMember(classBody, member, state) {\n    const {\n      startLoc\n    } = this.state;\n    if (this.isContextual(125)) {\n      if (super.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n      member.declare = true;\n    }\n    super.parseClassMember(classBody, member, state);\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(FlowErrors.DeclareClassElement, startLoc);\n      } else if (member.value) {\n        this.raise(FlowErrors.DeclareClassFieldInitializer, member.value);\n      }\n    }\n  }\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(Errors.InvalidIdentifier, this.state.curPosition(), {\n        identifierName: fullWord\n      });\n    }\n    this.finishToken(132, fullWord);\n  }\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 123 && next === 124) {\n      this.finishOp(6, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      this.finishOp(code === 62 ? 48 : 47, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        this.finishOp(18, 2);\n      } else {\n        this.finishOp(17, 1);\n      }\n    } else if (isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))) {\n      this.state.pos += 2;\n      this.readIterator();\n    } else {\n      super.getTokenFromCode(code);\n    }\n  }\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n  toAssignable(node, isLHS = false) {\n    if (!isLHS && node.type === \"AssignmentExpression\" && node.left.type === \"TypeCastExpression\") {\n      node.left = this.typeCastToParameter(node.left);\n    }\n    super.toAssignable(node, isLHS);\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n    super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n  }\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n      const expr = exprList[i];\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(FlowErrors.TypeCastInPattern, expr.typeAnnotation);\n      }\n    }\n    return exprList;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n    return node;\n  }\n  isValidLVal(type, isParenthesized, binding) {\n    return type === \"TypeCastExpression\" || super.isValidLVal(type, isParenthesized, binding);\n  }\n  parseClassProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n    return super.parseClassProperty(node);\n  }\n  parseClassPrivateProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n    return super.parseClassPrivateProperty(node);\n  }\n  isClassMethod() {\n    return this.match(47) || super.isClassMethod();\n  }\n  isClassProperty() {\n    return this.match(14) || super.isClassProperty();\n  }\n  isNonstaticConstructor(method) {\n    return !this.match(14) && super.isNonstaticConstructor(method);\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.loc.start);\n    }\n    delete method.variance;\n    if (this.match(47)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n    if (method.params && isConstructor) {\n      const params = method.params;\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(FlowErrors.ThisParamBannedInConstructor, method);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(FlowErrors.ThisParamBannedInConstructor, method);\n      }\n    }\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.loc.start);\n    }\n    delete method.variance;\n    if (this.match(47)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n    if (node.superClass && this.match(47)) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n    if (this.isContextual(113)) {\n      this.next();\n      const implemented = node.implements = [];\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n        if (this.match(47)) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(12));\n    }\n  }\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    if (params.length > 0) {\n      const param = params[0];\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(FlowErrors.GetterMayNotHaveThisParam, param);\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.SetterMayNotHaveThisParam, param);\n      }\n    }\n  }\n  parsePropertyNamePrefixOperator(node) {\n    node.variance = this.flowParseVariance();\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.loc.start);\n    }\n    delete prop.variance;\n    let typeParameters;\n    if (this.match(47) && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(10)) this.unexpected();\n    }\n    const result = super.parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    if (typeParameters) {\n      (result.value || result).typeParameters = typeParameters;\n    }\n    return result;\n  }\n  parseAssignableListItemTypes(param) {\n    if (this.eat(17)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(FlowErrors.PatternIsOptional, param);\n      }\n      if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamMayNotBeOptional, param);\n      }\n      param.optional = true;\n    }\n    if (this.match(14)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(FlowErrors.ThisParamAnnotationRequired, param);\n    }\n    if (this.match(29) && this.isThisParam(param)) {\n      this.raise(FlowErrors.ThisParamNoDefault, param);\n    }\n    this.resetEndLocation(param);\n    return param;\n  }\n  parseMaybeDefault(startLoc, left) {\n    const node = super.parseMaybeDefault(startLoc, left);\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(FlowErrors.TypeBeforeInitializer, node.typeAnnotation);\n    }\n    return node;\n  }\n  checkImportReflection(node) {\n    super.checkImportReflection(node);\n    if (node.module && node.importKind !== \"value\") {\n      this.raise(FlowErrors.ImportReflectionHasImportType, node.specifiers[0].loc.start);\n    }\n  }\n  parseImportSpecifierLocal(node, specifier, type) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n  isPotentialImportPhase(isExport) {\n    if (super.isPotentialImportPhase(isExport)) return true;\n    if (this.isContextual(130)) {\n      if (!isExport) return true;\n      const ch = this.lookaheadCharCode();\n      return ch === 123 || ch === 42;\n    }\n    return !isExport && this.isContextual(87);\n  }\n  applyImportPhase(node, isExport, phase, loc) {\n    super.applyImportPhase(node, isExport, phase, loc);\n    if (isExport) {\n      if (!phase && this.match(65)) {\n        return;\n      }\n      node.exportKind = phase === \"type\" ? phase : \"value\";\n    } else {\n      if (phase === \"type\" && this.match(55)) this.unexpected();\n      node.importKind = phase === \"type\" || phase === \"typeof\" ? phase : \"value\";\n    }\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    const firstIdent = specifier.imported;\n    let specifierTypeKind = null;\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n    let isBinding = false;\n    if (this.isContextual(93) && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n      if (specifierTypeKind !== null && !tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (importedIsString) {\n          throw this.raise(Errors.ImportBindingIsString, specifier, {\n            importName: firstIdent.value\n          });\n        }\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n      if (this.eatContextual(93)) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n    if (isInTypeOnlyImport && specifierIsTypeImport) {\n      this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, specifier);\n    }\n    if (isInTypeOnlyImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.loc.start, true);\n    }\n    if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.loc.start, true, true);\n    }\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n  }\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 78:\n        return this.parseIdentifier(true);\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n  parseFunctionParams(node, isConstructor) {\n    const kind = node.kind;\n    if (kind !== \"get\" && kind !== \"set\" && this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.parseFunctionParams(node, isConstructor);\n  }\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n    if (this.match(14)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n    let state = null;\n    let jsx;\n    if (this.hasPlugin(\"jsx\") && (this.match(142) || this.match(47))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n      if (currentContext === types$1.j_oTag || currentContext === types$1.j_expr) {\n        context.pop();\n      }\n    }\n    if ((_jsx = jsx) != null && _jsx.error || this.match(47)) {\n      var _jsx2, _jsx3;\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction, typeParameters);\n          }\n          return arrow.node;\n        }\n        arrowExpression = arrow.node;\n      }\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, typeParameters);\n    }\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(19)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n    return super.parseArrow(node);\n  }\n  shouldParseArrow(params) {\n    return this.match(14) || super.shouldParseArrow(params);\n  }\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(FlowErrors.ThisParamMustBeFirst, node.params[i]);\n      }\n    }\n    super.checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged);\n  }\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n  parseSubscripts(base, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startLoc.index) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      node.arguments = super.parseCallExpressionArguments(11, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.match(47)) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n      throw arrow.error || result.error;\n    }\n    return super.parseSubscripts(base, startLoc, noCalls);\n  }\n  parseSubscript(base, startLoc, noCalls, subscriptState) {\n    if (this.match(18) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n      this.next();\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(10);\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.match(47)) {\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(10);\n        node.arguments = super.parseCallExpressionArguments(11, false);\n        if (subscriptState.optionalChainMember) {\n          node.optional = false;\n        }\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n    return super.parseSubscript(base, startLoc, noCalls, subscriptState);\n  }\n  parseNewCallee(node) {\n    super.parseNewCallee(node);\n    let targs = null;\n    if (this.shouldParseTypes() && this.match(47)) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n    node.typeArguments = targs;\n  }\n  parseAsyncArrowWithTypeParameters(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    this.parseFunctionParams(node, false);\n    if (!this.parseArrow(node)) return;\n    return super.parseArrowExpression(node, undefined, true);\n  }\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n    super.readToken_mult_modulo(code);\n  }\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 124 && next === 125) {\n      this.finishOp(9, 2);\n      return;\n    }\n    super.readToken_pipe_amp(code);\n  }\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n    if (this.state.hasFlowComment) {\n      this.raise(FlowErrors.UnterminatedFlowComment, this.state.curPosition());\n    }\n    return fileNode;\n  }\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        throw this.raise(FlowErrors.NestedFlowComment, this.state.startLoc);\n      }\n      this.hasFlowCommentCompletion();\n      const commentSkip = this.skipFlowComment();\n      if (commentSkip) {\n        this.state.pos += commentSkip;\n        this.state.hasFlowComment = true;\n      }\n      return;\n    }\n    return super.skipBlockComment(this.state.hasFlowComment ? \"*-/\" : \"*/\");\n  }\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n    return false;\n  }\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n    if (end === -1) {\n      throw this.raise(Errors.UnterminatedComment, this.state.curPosition());\n    }\n  }\n  flowEnumErrorBooleanMemberNotInitialized(loc, {\n    enumName,\n    memberName\n  }) {\n    this.raise(FlowErrors.EnumBooleanMemberNotInitialized, loc, {\n      memberName,\n      enumName\n    });\n  }\n  flowEnumErrorInvalidMemberInitializer(loc, enumContext) {\n    return this.raise(!enumContext.explicitType ? FlowErrors.EnumInvalidMemberInitializerUnknownType : enumContext.explicitType === \"symbol\" ? FlowErrors.EnumInvalidMemberInitializerSymbolType : FlowErrors.EnumInvalidMemberInitializerPrimaryType, loc, enumContext);\n  }\n  flowEnumErrorNumberMemberNotInitialized(loc, details) {\n    this.raise(FlowErrors.EnumNumberMemberNotInitialized, loc, details);\n  }\n  flowEnumErrorStringMemberInconsistentlyInitialized(node, details) {\n    this.raise(FlowErrors.EnumStringMemberInconsistentlyInitialized, node, details);\n  }\n  flowEnumMemberInit() {\n    const startLoc = this.state.startLoc;\n    const endOfInit = () => this.match(12) || this.match(8);\n    switch (this.state.type) {\n      case 134:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      case 133:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      case 85:\n      case 86:\n        {\n          const literal = this.parseBooleanLiteral(this.match(85));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      default:\n        return {\n          type: \"invalid\",\n          loc: startLoc\n        };\n    }\n  }\n  flowEnumMemberRaw() {\n    const loc = this.state.startLoc;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(29) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      loc\n    };\n    return {\n      id,\n      init\n    };\n  }\n  flowEnumCheckExplicitTypeMismatch(loc, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n    if (explicitType === null) {\n      return;\n    }\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(loc, context);\n    }\n  }\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n    while (!this.match(8)) {\n      if (this.eat(21)) {\n        hasUnknownMembers = true;\n        break;\n      }\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n      if (memberName === \"\") {\n        continue;\n      }\n      if (/^[a-z]/.test(memberName)) {\n        this.raise(FlowErrors.EnumInvalidMemberName, id, {\n          memberName,\n          suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n          enumName\n        });\n      }\n      if (seenNames.has(memberName)) {\n        this.raise(FlowErrors.EnumDuplicateMemberName, id, {\n          memberName,\n          enumName\n        });\n      }\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.loc, context);\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n      if (!this.match(8)) {\n        this.expect(12);\n      }\n    }\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitialized(member, {\n          enumName\n        });\n      }\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitialized(member, {\n          enumName\n        });\n      }\n      return initializedMembers;\n    }\n  }\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (!this.eatContextual(102)) return null;\n    if (!tokenIsIdentifier(this.state.type)) {\n      throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, this.state.startLoc, {\n        enumName\n      });\n    }\n    const {\n      value\n    } = this.state;\n    this.next();\n    if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n      this.raise(FlowErrors.EnumInvalidExplicitType, this.state.startLoc, {\n        enumName,\n        invalidEnumType: value\n      });\n    }\n    return value;\n  }\n  flowEnumBody(node, id) {\n    const enumName = id.name;\n    const nameLoc = id.loc.start;\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(5);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumBooleanBody\");\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumNumberBody\");\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(8);\n        return this.finishNode(node, \"EnumStringBody\");\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumSymbolBody\");\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), id);\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n    return false;\n  }\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n};\nconst entities = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({\n    openingTagName\n  }) => `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity\n  }) => `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\nvar jsx = superClass => class JSXParserMixin extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(JsxErrors.UnterminatedJsxContent, this.state.startLoc);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.canStartJSXElement) {\n              ++this.state.pos;\n              this.finishToken(142);\n            } else {\n              super.getTokenFromCode(ch);\n            }\n            return;\n          }\n          out += this.input.slice(chunkStart, this.state.pos);\n          this.finishToken(141, out);\n          return;\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n        case 62:\n        case 125:\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n      }\n    }\n  }\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(Errors.UnterminatedString, this.state.startLoc);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(133, out);\n  }\n  jsxReadEntity() {\n    const startPos = ++this.state.pos;\n    if (this.codePointAtPos(this.state.pos) === 35) {\n      ++this.state.pos;\n      let radix = 10;\n      if (this.codePointAtPos(this.state.pos) === 120) {\n        radix = 16;\n        ++this.state.pos;\n      }\n      const codePoint = this.readInt(radix, undefined, false, \"bail\");\n      if (codePoint !== null && this.codePointAtPos(this.state.pos) === 59) {\n        ++this.state.pos;\n        return String.fromCodePoint(codePoint);\n      }\n    } else {\n      let count = 0;\n      let semi = false;\n      while (count++ < 10 && this.state.pos < this.length && !(semi = this.codePointAtPos(this.state.pos) == 59)) {\n        ++this.state.pos;\n      }\n      if (semi) {\n        const desc = this.input.slice(startPos, this.state.pos);\n        const entity = entities[desc];\n        ++this.state.pos;\n        if (entity) {\n          return entity;\n        }\n      }\n    }\n    this.state.pos = startPos;\n    return \"&\";\n  }\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n    this.finishToken(140, this.input.slice(start, this.state.pos));\n  }\n  jsxParseIdentifier() {\n    const node = this.startNode();\n    if (this.match(140)) {\n      node.name = this.state.value;\n    } else if (tokenIsKeyword(this.state.type)) {\n      node.name = tokenLabelName(this.state.type);\n    } else {\n      this.unexpected();\n    }\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n  jsxParseNamespacedName() {\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(14)) return name;\n    const node = this.startNodeAt(startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n  jsxParseElementName() {\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n    while (this.eat(16)) {\n      const newNode = this.startNodeAt(startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n    return node;\n  }\n  jsxParseAttributeValue() {\n    let node;\n    switch (this.state.type) {\n      case 5:\n        node = this.startNode();\n        this.setContext(types$1.brace);\n        this.next();\n        node = this.jsxParseExpressionContainer(node, types$1.j_oTag);\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(JsxErrors.AttributeIsEmpty, node);\n        }\n        return node;\n      case 142:\n      case 133:\n        return this.parseExprAtom();\n      default:\n        throw this.raise(JsxErrors.UnsupportedJsxValue, this.state.startLoc);\n    }\n  }\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n  }\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.setContext(types$1.j_expr);\n    this.state.canStartJSXElement = true;\n    this.expect(8);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n  jsxParseExpressionContainer(node, previousContext) {\n    if (this.match(8)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n    this.setContext(previousContext);\n    this.state.canStartJSXElement = true;\n    this.expect(8);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n  jsxParseAttribute() {\n    const node = this.startNode();\n    if (this.match(5)) {\n      this.setContext(types$1.brace);\n      this.next();\n      this.expect(21);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.setContext(types$1.j_oTag);\n      this.state.canStartJSXElement = true;\n      this.expect(8);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(29) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n  jsxParseOpeningElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    if (this.eat(143)) {\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n    while (!this.match(56) && !this.match(143)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n    node.attributes = attributes;\n    node.selfClosing = this.eat(56);\n    this.expect(143);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n  jsxParseClosingElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    if (this.eat(143)) {\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n    node.name = this.jsxParseElementName();\n    this.expect(143);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n  jsxParseElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startLoc);\n    let closingElement = null;\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case 142:\n            startLoc = this.state.startLoc;\n            this.next();\n            if (this.eat(56)) {\n              closingElement = this.jsxParseClosingElementAt(startLoc);\n              break contents;\n            }\n            children.push(this.jsxParseElementAt(startLoc));\n            break;\n          case 141:\n            children.push(this.parseExprAtom());\n            break;\n          case 5:\n            {\n              const node = this.startNode();\n              this.setContext(types$1.brace);\n              this.next();\n              if (this.match(21)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node, types$1.j_expr));\n              }\n              break;\n            }\n          default:\n            this.unexpected();\n        }\n      }\n      if (isFragment(openingElement) && !isFragment(closingElement) && closingElement !== null) {\n        this.raise(JsxErrors.MissingClosingTagFragment, closingElement);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(JsxErrors.MissingClosingTagElement, closingElement, {\n          openingTagName: getQualifiedJSXName(openingElement.name)\n        });\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(JsxErrors.MissingClosingTagElement, closingElement, {\n            openingTagName: getQualifiedJSXName(openingElement.name)\n          });\n        }\n      }\n    }\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n    node.children = children;\n    if (this.match(47)) {\n      throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, this.state.startLoc);\n    }\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n  jsxParseElement() {\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startLoc);\n  }\n  setContext(newContext) {\n    const {\n      context\n    } = this.state;\n    context[context.length - 1] = newContext;\n  }\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(141)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(142)) {\n      return this.jsxParseElement();\n    } else if (this.match(47) && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.replaceToken(142);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n  skipSpace() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) super.skipSpace();\n  }\n  getTokenFromCode(code) {\n    const context = this.curContext();\n    if (context === types$1.j_expr) {\n      this.jsxReadToken();\n      return;\n    }\n    if (context === types$1.j_oTag || context === types$1.j_cTag) {\n      if (isIdentifierStart(code)) {\n        this.jsxReadWord();\n        return;\n      }\n      if (code === 62) {\n        ++this.state.pos;\n        this.finishToken(143);\n        return;\n      }\n      if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n        this.jsxReadString(code);\n        return;\n      }\n    }\n    if (code === 60 && this.state.canStartJSXElement && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      this.finishToken(142);\n      return;\n    }\n    super.getTokenFromCode(code);\n  }\n  updateContext(prevType) {\n    const {\n      context,\n      type\n    } = this.state;\n    if (type === 56 && prevType === 142) {\n      context.splice(-2, 2, types$1.j_cTag);\n      this.state.canStartJSXElement = false;\n    } else if (type === 142) {\n      context.push(types$1.j_oTag);\n    } else if (type === 143) {\n      const out = context[context.length - 1];\n      if (out === types$1.j_oTag && prevType === 56 || out === types$1.j_cTag) {\n        context.pop();\n        this.state.canStartJSXElement = context[context.length - 1] === types$1.j_expr;\n      } else {\n        this.setContext(types$1.j_expr);\n        this.state.canStartJSXElement = true;\n      }\n    } else {\n      this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n    }\n  }\n};\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.tsNames = new Map();\n  }\n}\nclass TypeScriptScopeHandler extends ScopeHandler {\n  constructor(...args) {\n    super(...args);\n    this.importsStack = [];\n  }\n  createScope(flags) {\n    this.importsStack.push(new Set());\n    return new TypeScriptScope(flags);\n  }\n  enter(flags) {\n    if (flags == 256) {\n      this.importsStack.push(new Set());\n    }\n    super.enter(flags);\n  }\n  exit() {\n    const flags = super.exit();\n    if (flags == 256) {\n      this.importsStack.pop();\n    }\n    return flags;\n  }\n  hasImport(name, allowShadow) {\n    const len = this.importsStack.length;\n    if (this.importsStack[len - 1].has(name)) {\n      return true;\n    }\n    if (!allowShadow && len > 1) {\n      for (let i = 0; i < len - 1; i++) {\n        if (this.importsStack[i].has(name)) return true;\n      }\n    }\n    return false;\n  }\n  declareName(name, bindingType, loc) {\n    if (bindingType & 4096) {\n      if (this.hasImport(name, true)) {\n        this.parser.raise(Errors.VarRedeclaration, loc, {\n          identifierName: name\n        });\n      }\n      this.importsStack[this.importsStack.length - 1].add(name);\n      return;\n    }\n    const scope = this.currentScope();\n    let type = scope.tsNames.get(name) || 0;\n    if (bindingType & 1024) {\n      this.maybeExportDefined(scope, name);\n      scope.tsNames.set(name, type | 16);\n      return;\n    }\n    super.declareName(name, bindingType, loc);\n    if (bindingType & 2) {\n      if (!(bindingType & 1)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      type = type | 1;\n    }\n    if (bindingType & 256) {\n      type = type | 2;\n    }\n    if (bindingType & 512) {\n      type = type | 4;\n    }\n    if (bindingType & 128) {\n      type = type | 8;\n    }\n    if (type) scope.tsNames.set(name, type);\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    const type = scope.tsNames.get(name);\n    if ((type & 2) > 0) {\n      if (bindingType & 256) {\n        const isConst = !!(bindingType & 512);\n        const wasConst = (type & 4) > 0;\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & 128 && (type & 8) > 0) {\n      if (scope.names.get(name) & 2) {\n        return !!(bindingType & 1);\n      } else {\n        return false;\n      }\n    }\n    if (bindingType & 2 && (type & 1) > 0) {\n      return true;\n    }\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    if (this.hasImport(name)) return;\n    const len = this.scopeStack.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const scope = this.scopeStack[i];\n      const type = scope.tsNames.get(name);\n      if ((type & 1) > 0 || (type & 16) > 0) {\n        return;\n      }\n    }\n    super.checkLocalExport(id);\n  }\n}\nconst getOwn$1 = (object, key) => hasOwnProperty.call(object, key) && object[key];\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParameterBindingError(Errors.InvalidParenthesizedAssignment, node);\n        } else if (parenthesized.type !== \"MemberExpression\" && !this.isOptionalMemberExpression(parenthesized)) {\n          this.raise(Errors.InvalidParenthesizedAssignment, node);\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, node);\n      }\n    }\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingCommaLoc) {\n            this.raise(Errors.RestTrailingComma, node.extra.trailingCommaLoc);\n          }\n        }\n        break;\n      case \"ObjectProperty\":\n        {\n          const {\n            key,\n            value\n          } = node;\n          if (this.isPrivateName(key)) {\n            this.classScope.usePrivateName(this.getPrivateNameSV(key), key.loc.start);\n          }\n          this.toAssignable(value, isLHS);\n          break;\n        }\n      case \"SpreadElement\":\n        {\n          throw new Error(\"Internal @babel/parser error (this is a bug, please report it).\" + \" SpreadElement should be converted by .toAssignable's caller.\");\n        }\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingCommaLoc, isLHS);\n        break;\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, node.left.loc.end);\n        }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n  }\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(prop.kind === \"get\" || prop.kind === \"set\" ? Errors.PatternHasAccessor : Errors.PatternHasMethod, prop.key);\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, false);\n      this.toAssignable(arg, isLHS);\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, prop);\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    const end = exprList.length - 1;\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, elt);\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, trailingCommaLoc);\n        }\n      }\n    }\n  }\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n      default:\n        return false;\n    }\n  }\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n  parseSpread(refExpressionErrors) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 0:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(3, 93, 1);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n      case 5:\n        return this.parseObjectLike(8, true);\n    }\n    return this.parseIdentifier();\n  }\n  parseBindingList(close, closeCharCode, flags) {\n    const allowEmpty = flags & 1;\n    const elts = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n      }\n      if (allowEmpty && this.match(12)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(21)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding(), flags));\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(26) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, this.state.startLoc);\n        }\n        while (this.match(26)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(flags, decorators));\n      }\n    }\n    return elts;\n  }\n  parseBindingRestProperty(prop) {\n    this.next();\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(125);\n    return this.finishNode(prop, \"RestElement\");\n  }\n  parseBindingProperty() {\n    const prop = this.startNode();\n    const {\n      type,\n      startLoc\n    } = this.state;\n    if (type === 21) {\n      return this.parseBindingRestProperty(prop);\n    } else if (type === 138) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      prop.key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop);\n    }\n    prop.method = false;\n    return this.parseObjPropValue(prop, startLoc, false, false, true, false);\n  }\n  parseAssignableListItem(flags, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left, flags);\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n  parseAssignableListItemTypes(param, flags) {\n    return param;\n  }\n  parseMaybeDefault(startLoc, left) {\n    var _startLoc, _left;\n    (_startLoc = startLoc) != null ? _startLoc : startLoc = this.state.startLoc;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(29)) return left;\n    const node = this.startNodeAt(startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return getOwn$1({\n      AssignmentPattern: \"left\",\n      RestElement: \"argument\",\n      ObjectProperty: \"value\",\n      ParenthesizedExpression: \"expression\",\n      ArrayPattern: \"elements\",\n      ObjectPattern: \"properties\"\n    }, type);\n  }\n  isOptionalMemberExpression(expression) {\n    return expression.type === \"OptionalMemberExpression\";\n  }\n  checkLVal(expression, {\n    in: ancestor,\n    binding = 64,\n    checkClashes = false,\n    strictModeChanged = false,\n    hasParenthesizedAncestor = false\n  }) {\n    var _expression$extra;\n    const type = expression.type;\n    if (this.isObjectMethod(expression)) return;\n    const isOptionalMemberExpression = this.isOptionalMemberExpression(expression);\n    if (isOptionalMemberExpression || type === \"MemberExpression\") {\n      if (isOptionalMemberExpression) {\n        this.expectPlugin(\"optionalChainingAssign\", expression.loc.start);\n        if (ancestor.type !== \"AssignmentExpression\") {\n          this.raise(Errors.InvalidLhsOptionalChaining, expression, {\n            ancestor\n          });\n        }\n      }\n      if (binding !== 64) {\n        this.raise(Errors.InvalidPropertyBindingPattern, expression);\n      }\n      return;\n    }\n    if (type === \"Identifier\") {\n      this.checkIdentifier(expression, binding, strictModeChanged);\n      const {\n        name\n      } = expression;\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, expression);\n        } else {\n          checkClashes.add(name);\n        }\n      }\n      return;\n    }\n    const validity = this.isValidLVal(type, !(hasParenthesizedAncestor || (_expression$extra = expression.extra) != null && _expression$extra.parenthesized) && ancestor.type === \"AssignmentExpression\", binding);\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass = binding === 64 ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\n      this.raise(ParseErrorClass, expression, {\n        ancestor\n      });\n      return;\n    }\n    const [key, isParenthesizedExpression] = Array.isArray(validity) ? validity : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor = type === \"ArrayPattern\" || type === \"ObjectPattern\" ? {\n      type\n    } : ancestor;\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression\n        });\n      }\n    }\n  }\n  checkIdentifier(at, bindingType, strictModeChanged = false) {\n    if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(at.name, this.inModule) : isStrictBindOnlyReservedWord(at.name))) {\n      if (bindingType === 64) {\n        this.raise(Errors.StrictEvalArguments, at, {\n          referenceName: at.name\n        });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, at, {\n          bindingName: at.name\n        });\n      }\n    }\n    if (bindingType & 8192 && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, at);\n    }\n    if (!(bindingType & 64)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n  declareNameFromIdentifier(identifier, binding) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n  checkToRestConversion(node, allowPattern) {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, node);\n    }\n  }\n  checkCommaAfterRest(close) {\n    if (!this.match(12)) {\n      return false;\n    }\n    this.raise(this.lookaheadCharCode() === close ? Errors.RestTrailingComma : Errors.ElementAfterRest, this.state.startLoc);\n    return true;\n  }\n}\nconst getOwn = (object, key) => hasOwnProperty.call(object, key) && object[key];\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\nfunction assert$1(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({\n    methodName\n  }) => `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName\n  }) => `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  AccessorCannotBeOptional: \"An 'accessor' property cannot be declared optional.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference: \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({\n    kind\n  }) => `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: ({\n    modifier\n  }) => `Accessibility modifier already seen.`,\n  DuplicateModifier: ({\n    modifier\n  }) => `Duplicate modifier: '${modifier}'.`,\n  EmptyHeritageClauseType: ({\n    token\n  }) => `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  ImportReflectionHasImportType: \"An `import module` declaration can not use `type` modifier\",\n  IncompatibleModifiers: ({\n    modifiers\n  }) => `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier\n  }) => `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext: \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({\n    modifier\n  }) => `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({\n    modifier\n  }) => `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier\n  }) => `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers\n  }) => `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression: \"Invalid property access after an instantiation expression. \" + \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier\n  }) => `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam: \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion: \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName\n  }) => `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TupleOptionalAfterType: \"A labeled tuple optional element must be declared using a question mark after the name and before the colon (`name?: type`), rather than after the type (`name: type?`).\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports: \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports: \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({\n    type\n  }) => `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`\n});\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\nfunction tsIsVarianceAnnotations(modifier) {\n  return modifier === \"in\" || modifier === \"out\";\n}\nvar typescript = superClass => class TypeScriptParserMixin extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.tsParseInOutModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\"],\n      disallowedModifiers: [\"const\", \"public\", \"private\", \"protected\", \"readonly\", \"declare\", \"abstract\", \"override\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter\n    });\n    this.tsParseConstModifier = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"const\"],\n      disallowedModifiers: [\"in\", \"out\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions\n    });\n    this.tsParseInOutConstModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\", \"const\"],\n      disallowedModifiers: [\"public\", \"private\", \"protected\", \"readonly\", \"declare\", \"abstract\", \"override\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter\n    });\n  }\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n  tsIsIdentifier() {\n    return tokenIsIdentifier(this.state.type);\n  }\n  tsTokenCanFollowModifier() {\n    return (this.match(0) || this.match(5) || this.match(55) || this.match(21) || this.match(138) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\n    if (!tokenIsIdentifier(this.state.type) && this.state.type !== 58 && this.state.type !== 75) {\n      return undefined;\n    }\n    const modifier = this.state.value;\n    if (allowedModifiers.indexOf(modifier) !== -1) {\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n        return undefined;\n      }\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n        return modifier;\n      }\n    }\n    return undefined;\n  }\n  tsParseModifiers({\n    allowedModifiers,\n    disallowedModifiers,\n    stopOnStartOfClassStaticBlock,\n    errorTemplate = TSErrors.InvalidModifierOnTypeMember\n  }, modified) {\n    const enforceOrder = (loc, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(TSErrors.InvalidModifiersOrder, loc, {\n          orderedModifiers: [before, after]\n        });\n      }\n    };\n    const incompatible = (loc, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(TSErrors.IncompatibleModifiers, loc, {\n          modifiers: [mod1, mod2]\n        });\n      }\n    };\n    for (;;) {\n      const {\n        startLoc\n      } = this.state;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\n      if (!modifier) break;\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(TSErrors.DuplicateAccessibilityModifier, startLoc, {\n            modifier\n          });\n        } else {\n          enforceOrder(startLoc, modifier, modifier, \"override\");\n          enforceOrder(startLoc, modifier, modifier, \"static\");\n          enforceOrder(startLoc, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else if (tsIsVarianceAnnotations(modifier)) {\n        if (modified[modifier]) {\n          this.raise(TSErrors.DuplicateModifier, startLoc, {\n            modifier\n          });\n        }\n        modified[modifier] = true;\n        enforceOrder(startLoc, modifier, \"in\", \"out\");\n      } else {\n        if (hasOwnProperty.call(modified, modifier)) {\n          this.raise(TSErrors.DuplicateModifier, startLoc, {\n            modifier\n          });\n        } else {\n          enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n          enforceOrder(startLoc, modifier, \"static\", \"override\");\n          enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n          enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n          incompatible(startLoc, modifier, \"declare\", \"override\");\n          incompatible(startLoc, modifier, \"static\", \"abstract\");\n        }\n        modified[modifier] = true;\n      }\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(errorTemplate, startLoc, {\n          modifier\n        });\n      }\n    }\n  }\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(8);\n      case \"HeritageClauseElement\":\n        return this.match(5);\n      case \"TupleElementTypes\":\n        return this.match(3);\n      case \"TypeParametersOrArguments\":\n        return this.match(48);\n    }\n  }\n  tsParseList(kind, parseElement) {\n    const result = [];\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n    return result;\n  }\n  tsParseDelimitedList(kind, parseElement, refTrailingCommaPos) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true, refTrailingCommaPos));\n  }\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess, refTrailingCommaPos) {\n    const result = [];\n    let trailingCommaPos = -1;\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n      trailingCommaPos = -1;\n      const element = parseElement();\n      if (element == null) {\n        return undefined;\n      }\n      result.push(element);\n      if (this.eat(12)) {\n        trailingCommaPos = this.state.lastTokStartLoc.index;\n        continue;\n      }\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n      if (expectSuccess) {\n        this.expect(12);\n      }\n      return undefined;\n    }\n    if (refTrailingCommaPos) {\n      refTrailingCommaPos.value = trailingCommaPos;\n    }\n    return result;\n  }\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken, refTrailingCommaPos) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(0);\n      } else {\n        this.expect(47);\n      }\n    }\n    const result = this.tsParseDelimitedList(kind, parseElement, refTrailingCommaPos);\n    if (bracket) {\n      this.expect(3);\n    } else {\n      this.expect(48);\n    }\n    return result;\n  }\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(83);\n    this.expect(10);\n    if (!this.match(133)) {\n      this.raise(TSErrors.UnsupportedImportTypeArgument, this.state.startLoc);\n    }\n    node.argument = super.parseExprAtom();\n    if (this.hasPlugin(\"importAttributes\") || this.hasPlugin(\"importAssertions\")) {\n      node.options = null;\n    }\n    if (this.eat(12)) {\n      this.expectImportAttributesPlugin();\n      if (!this.match(11)) {\n        node.options = super.parseMaybeAssignAllowIn();\n        this.eat(12);\n      }\n    }\n    this.expect(11);\n    if (this.eat(16)) {\n      node.qualifier = this.tsParseEntityName();\n    }\n    if (this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSImportType\");\n  }\n  tsParseEntityName(allowReservedWords = true) {\n    let entity = this.parseIdentifier(allowReservedWords);\n    while (this.eat(16)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n    return entity;\n  }\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName();\n    if (!this.hasPrecedingLineBreak() && this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(87);\n    if (this.match(83)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName();\n    }\n    if (!this.hasPrecedingLineBreak() && this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n  tsParseTypeParameter(parseModifiers) {\n    const node = this.startNode();\n    parseModifiers(node);\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(81);\n    node.default = this.tsEatThenParseType(29);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n  tsTryParseTypeParameters(parseModifiers) {\n    if (this.match(47)) {\n      return this.tsParseTypeParameters(parseModifiers);\n    }\n  }\n  tsParseTypeParameters(parseModifiers) {\n    const node = this.startNode();\n    if (this.match(47) || this.match(142)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n    const refTrailingCommaPos = {\n      value: -1\n    };\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this, parseModifiers), false, true, refTrailingCommaPos);\n    if (node.params.length === 0) {\n      this.raise(TSErrors.EmptyTypeParameters, node);\n    }\n    if (refTrailingCommaPos.value !== -1) {\n      this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n    }\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === 19;\n    const paramsKey = \"parameters\";\n    const returnTypeKey = \"typeAnnotation\";\n    signature.typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    this.expect(10);\n    signature[paramsKey] = this.tsParseBindingListForSignature();\n    if (returnTokenRequired) {\n      signature[returnTypeKey] = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature[returnTypeKey] = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n  tsParseBindingListForSignature() {\n    const list = super.parseBindingList(11, 41, 2);\n    for (const pattern of list) {\n      const {\n        type\n      } = pattern;\n      if (type === \"AssignmentPattern\" || type === \"TSParameterProperty\") {\n        this.raise(TSErrors.UnsupportedSignatureParameterKind, pattern, {\n          type\n        });\n      }\n    }\n    return list;\n  }\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(12) && !this.isLineTerminator()) {\n      this.expect(13);\n    }\n  }\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(14, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    if (tokenIsIdentifier(this.state.type)) {\n      this.next();\n      return this.match(14);\n    }\n    return false;\n  }\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(0) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return;\n    }\n    this.expect(0);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(3);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(17)) node.optional = true;\n    const nodeAny = node;\n    if (this.match(10) || this.match(47)) {\n      if (readonly) {\n        this.raise(TSErrors.ReadonlyForMethodSignature, node);\n      }\n      const method = nodeAny;\n      if (method.kind && this.match(47)) {\n        this.raise(TSErrors.AccesorCannotHaveTypeParameters, this.state.curPosition());\n      }\n      this.tsFillSignature(14, method);\n      this.tsParseTypeMemberSemicolon();\n      const paramsKey = \"parameters\";\n      const returnTypeKey = \"typeAnnotation\";\n      if (method.kind === \"get\") {\n        if (method[paramsKey].length > 0) {\n          this.raise(Errors.BadGetterArity, this.state.curPosition());\n          if (this.isThisParam(method[paramsKey][0])) {\n            this.raise(TSErrors.AccesorCannotDeclareThisParameter, this.state.curPosition());\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method[paramsKey].length !== 1) {\n          this.raise(Errors.BadSetterArity, this.state.curPosition());\n        } else {\n          const firstParameter = method[paramsKey][0];\n          if (this.isThisParam(firstParameter)) {\n            this.raise(TSErrors.AccesorCannotDeclareThisParameter, this.state.curPosition());\n          }\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, this.state.curPosition());\n          }\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(TSErrors.SetAccesorCannotHaveRestParameter, this.state.curPosition());\n          }\n        }\n        if (method[returnTypeKey]) {\n          this.raise(TSErrors.SetAccesorCannotHaveReturnType, method[returnTypeKey]);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n  tsParseTypeMember() {\n    const node = this.startNode();\n    if (this.match(10) || this.match(47)) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n    if (this.match(77)) {\n      const id = this.startNode();\n      this.next();\n      if (this.match(10) || this.match(47)) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n    this.tsParseModifiers({\n      allowedModifiers: [\"readonly\"],\n      disallowedModifiers: [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"]\n    }, node);\n    const idx = this.tsTryParseIndexSignature(node);\n    if (idx) {\n      return idx;\n    }\n    super.parsePropertyName(node);\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      super.parsePropertyName(node);\n    }\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n  tsParseObjectTypeMembers() {\n    this.expect(5);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(8);\n    return members;\n  }\n  tsIsStartOfMappedType() {\n    this.next();\n    if (this.eat(53)) {\n      return this.isContextual(122);\n    }\n    if (this.isContextual(122)) {\n      this.next();\n    }\n    if (!this.match(0)) {\n      return false;\n    }\n    this.next();\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n    this.next();\n    return this.match(58);\n  }\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(58);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(5);\n    if (this.match(53)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(122);\n    } else if (this.eatContextual(122)) {\n      node.readonly = true;\n    }\n    this.expect(0);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(93) ? this.tsParseType() : null;\n    this.expect(3);\n    if (this.match(53)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(17);\n    } else if (this.eat(17)) {\n      node.optional = true;\n    }\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(8);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    node.elementTypes.forEach(elementNode => {\n      const {\n        type\n      } = elementNode;\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(TSErrors.OptionalTypeBeforeRequired, elementNode);\n      }\n      seenOptionalElement || (seenOptionalElement = type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\");\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n  tsParseTupleElementType() {\n    const {\n      startLoc\n    } = this.state;\n    const rest = this.eat(21);\n    let labeled;\n    let label;\n    let optional;\n    let type;\n    const isWord = tokenIsKeywordOrIdentifier(this.state.type);\n    const chAfterWord = isWord ? this.lookaheadCharCode() : null;\n    if (chAfterWord === 58) {\n      labeled = true;\n      optional = false;\n      label = this.parseIdentifier(true);\n      this.expect(14);\n      type = this.tsParseType();\n    } else if (chAfterWord === 63) {\n      optional = true;\n      const startLoc = this.state.startLoc;\n      const wordName = this.state.value;\n      const typeOrLabel = this.tsParseNonArrayType();\n      if (this.lookaheadCharCode() === 58) {\n        labeled = true;\n        label = this.createIdentifier(this.startNodeAt(startLoc), wordName);\n        this.expect(17);\n        this.expect(14);\n        type = this.tsParseType();\n      } else {\n        labeled = false;\n        type = typeOrLabel;\n        this.expect(17);\n      }\n    } else {\n      type = this.tsParseType();\n      optional = this.eat(17);\n      labeled = this.eat(14);\n    }\n    if (labeled) {\n      let labeledNode;\n      if (label) {\n        labeledNode = this.startNodeAtNode(label);\n        labeledNode.optional = optional;\n        labeledNode.label = label;\n        labeledNode.elementType = type;\n        if (this.eat(17)) {\n          labeledNode.optional = true;\n          this.raise(TSErrors.TupleOptionalAfterType, this.state.lastTokStartLoc);\n        }\n      } else {\n        labeledNode = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n        this.raise(TSErrors.InvalidTupleMemberLabel, type);\n        labeledNode.label = type;\n        labeledNode.elementType = this.tsParseType();\n      }\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n    if (rest) {\n      const restNode = this.startNodeAt(startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n    return type;\n  }\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(10);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(11);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n    this.tsInAllowConditionalTypesContext(() => this.tsFillSignature(19, node));\n    return this.finishNode(node, type);\n  }\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n    switch (this.state.type) {\n      case 134:\n      case 135:\n      case 133:\n      case 85:\n      case 86:\n        node.literal = super.parseExprAtom();\n        break;\n      default:\n        this.unexpected();\n    }\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = super.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n    if (this.isContextual(116) && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case 133:\n      case 134:\n      case 135:\n      case 85:\n      case 86:\n        return this.tsParseLiteralTypeNode();\n      case 53:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n          if (nextToken.type !== 134 && nextToken.type !== 135) {\n            this.unexpected();\n          }\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n        break;\n      case 78:\n        return this.tsParseThisTypeOrThisTypePredicate();\n      case 87:\n        return this.tsParseTypeQuery();\n      case 83:\n        return this.tsParseImportType();\n      case 5:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n      case 0:\n        return this.tsParseTupleType();\n      case 10:\n        return this.tsParseParenthesizedType();\n      case 25:\n      case 24:\n        return this.tsParseTemplateLiteralType();\n      default:\n        {\n          const {\n            type\n          } = this.state;\n          if (tokenIsIdentifier(type) || type === 88 || type === 84) {\n            const nodeType = type === 88 ? \"TSVoidKeyword\" : type === 84 ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n            if (nodeType !== undefined && this.lookaheadCharCode() !== 46) {\n              const node = this.startNode();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n    }\n    this.unexpected();\n  }\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n    while (!this.hasPrecedingLineBreak() && this.eat(0)) {\n      if (this.match(3)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(3);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(3);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n    return type;\n  }\n  tsParseTypeOperator() {\n    const node = this.startNode();\n    const operator = this.state.value;\n    this.next();\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n      default:\n        this.raise(TSErrors.UnexpectedReadonly, node);\n    }\n  }\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(115);\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    typeParameter.constraint = this.tsTryParse(() => this.tsParseConstraintForInferType());\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n  tsParseConstraintForInferType() {\n    if (this.eat(81)) {\n      const constraint = this.tsInDisallowConditionalTypesContext(() => this.tsParseType());\n      if (this.state.inDisallowConditionalTypesContext || !this.match(17)) {\n        return constraint;\n      }\n    }\n  }\n  tsParseTypeOperatorOrHigher() {\n    const isTypeOperator = tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n    return isTypeOperator ? this.tsParseTypeOperator() : this.isContextual(115) ? this.tsParseInferType() : this.tsInAllowConditionalTypesContext(() => this.tsParseArrayTypeOrHigher());\n  }\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), 45);\n  }\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), 43);\n  }\n  tsIsStartOfFunctionType() {\n    if (this.match(47)) {\n      return true;\n    }\n    return this.match(10) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n  tsSkipParameterStart() {\n    if (tokenIsIdentifier(this.state.type) || this.match(78)) {\n      this.next();\n      return true;\n    }\n    if (this.match(5)) {\n      const {\n        errors\n      } = this.state;\n      const previousErrorCount = errors.length;\n      try {\n        this.parseObjectLike(8, true);\n        return errors.length === previousErrorCount;\n      } catch (_unused) {\n        return false;\n      }\n    }\n    if (this.match(0)) {\n      this.next();\n      const {\n        errors\n      } = this.state;\n      const previousErrorCount = errors.length;\n      try {\n        super.parseBindingList(3, 93, 1);\n        return errors.length === previousErrorCount;\n      } catch (_unused2) {\n        return false;\n      }\n    }\n    return false;\n  }\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n    if (this.match(11) || this.match(21)) {\n      return true;\n    }\n    if (this.tsSkipParameterStart()) {\n      if (this.match(14) || this.match(12) || this.match(17) || this.match(29)) {\n        return true;\n      }\n      if (this.match(11)) {\n        this.next();\n        if (this.match(19)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n      if (asserts && this.match(78)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    if (this.match(14)) {\n      return this.tsParseTypeOrTypePredicateAnnotation(14);\n    }\n  }\n  tsTryParseTypeAnnotation() {\n    if (this.match(14)) {\n      return this.tsParseTypeAnnotation();\n    }\n  }\n  tsTryParseType() {\n    return this.tsEatThenParseType(14);\n  }\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n    if (this.isContextual(116) && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n  tsParseTypePredicateAsserts() {\n    if (this.state.type !== 109) {\n      return false;\n    }\n    const containsEsc = this.state.containsEsc;\n    this.next();\n    if (!tokenIsIdentifier(this.state.type) && !this.match(78)) {\n      return false;\n    }\n    if (containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, this.state.lastTokStartLoc, {\n        reservedWord: \"asserts\"\n      });\n    }\n    return true;\n  }\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(14);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n  tsParseType() {\n    assert$1(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n    if (this.state.inDisallowConditionalTypesContext || this.hasPrecedingLineBreak() || !this.eat(81)) {\n      return type;\n    }\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsInDisallowConditionalTypesContext(() => this.tsParseNonConditionalType());\n    this.expect(17);\n    node.trueType = this.tsInAllowConditionalTypesContext(() => this.tsParseType());\n    this.expect(14);\n    node.falseType = this.tsInAllowConditionalTypesContext(() => this.tsParseType());\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n  isAbstractConstructorSignature() {\n    return this.isContextual(124) && this.lookahead().type === 77;\n  }\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n    if (this.match(77)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n    return this.tsParseUnionTypeOrHigher();\n  }\n  tsParseTypeAssertion() {\n    if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(TSErrors.ReservedTypeAssertion, this.state.startLoc);\n    }\n    const node = this.startNode();\n    node.typeAnnotation = this.tsInType(() => {\n      this.next();\n      return this.match(75) ? this.tsParseTypeReference() : this.tsParseType();\n    });\n    this.expect(48);\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n  tsParseHeritageClause(token) {\n    const originalStartLoc = this.state.startLoc;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", () => {\n      const node = this.startNode();\n      node.expression = this.tsParseEntityName();\n      if (this.match(47)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    });\n    if (!delimitedList.length) {\n      this.raise(TSErrors.EmptyHeritageClauseType, originalStartLoc, {\n        token\n      });\n    }\n    return delimitedList;\n  }\n  tsParseInterfaceDeclaration(node, properties = {}) {\n    if (this.hasFollowingLineBreak()) return null;\n    this.expectContextual(129);\n    if (properties.declare) node.declare = true;\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, 130);\n    } else {\n      node.id = null;\n      this.raise(TSErrors.MissingInterfaceName, this.state.startLoc);\n    }\n    node.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);\n    if (this.eat(81)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, 2);\n    node.typeAnnotation = this.tsInType(() => {\n      node.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutModifiers);\n      this.expect(29);\n      if (this.isContextual(114) && this.lookahead().type !== 16) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n  tsInDisallowConditionalTypesContext(cb) {\n    const oldInDisallowConditionalTypesContext = this.state.inDisallowConditionalTypesContext;\n    this.state.inDisallowConditionalTypesContext = true;\n    try {\n      return cb();\n    } finally {\n      this.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n    }\n  }\n  tsInAllowConditionalTypesContext(cb) {\n    const oldInDisallowConditionalTypesContext = this.state.inDisallowConditionalTypesContext;\n    this.state.inDisallowConditionalTypesContext = false;\n    try {\n      return cb();\n    } finally {\n      this.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n    }\n  }\n  tsEatThenParseType(token) {\n    if (this.match(token)) {\n      return this.tsNextThenParseType();\n    }\n  }\n  tsExpectThenParseType(token) {\n    return this.tsInType(() => {\n      this.expect(token);\n      return this.tsParseType();\n    });\n  }\n  tsNextThenParseType() {\n    return this.tsInType(() => {\n      this.next();\n      return this.tsParseType();\n    });\n  }\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(133) ? super.parseStringLiteral(this.state.value) : this.parseIdentifier(true);\n    if (this.eat(29)) {\n      node.initializer = super.parseMaybeAssignAllowIn();\n    }\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n  tsParseEnumDeclaration(node, properties = {}) {\n    if (properties.const) node.const = true;\n    if (properties.declare) node.declare = true;\n    this.expectContextual(126);\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, node.const ? 8971 : 8459);\n    this.expect(5);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(8);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(0);\n    this.expect(5);\n    super.parseBlockOrModuleBlockBody(node.body = [], undefined, true, 8);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n    if (!nested) {\n      this.checkIdentifier(node.id, 1024);\n    }\n    if (this.eat(16)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(256);\n      this.prodParam.enter(0);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(112)) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(133)) {\n      node.id = super.parseStringLiteral(this.state.value);\n    } else {\n      this.unexpected();\n    }\n    if (this.match(5)) {\n      this.scope.enter(256);\n      this.prodParam.enter(0);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n  tsParseImportEqualsDeclaration(node, maybeDefaultIdentifier, isExport) {\n    node.isExport = isExport || false;\n    node.id = maybeDefaultIdentifier || this.parseIdentifier();\n    this.checkIdentifier(node.id, 4096);\n    this.expect(29);\n    const moduleReference = this.tsParseModuleReference();\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(TSErrors.ImportAliasHasImportType, moduleReference);\n    }\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n  tsIsExternalModuleReference() {\n    return this.isContextual(119) && this.lookaheadCharCode() === 40;\n  }\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(119);\n    this.expect(10);\n    if (!this.match(133)) {\n      this.unexpected();\n    }\n    node.expression = super.parseExprAtom();\n    this.expect(11);\n    this.sawUnambiguousESM = true;\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n    if (result !== undefined && result !== false) {\n      return result;\n    }\n    this.state = state;\n  }\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n    let startType = this.state.type;\n    let kind;\n    if (this.isContextual(100)) {\n      startType = 74;\n      kind = \"let\";\n    }\n    return this.tsInAmbientContext(() => {\n      switch (startType) {\n        case 68:\n          nany.declare = true;\n          return super.parseFunctionStatement(nany, false, false);\n        case 80:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n        case 126:\n          return this.tsParseEnumDeclaration(nany, {\n            declare: true\n          });\n        case 112:\n          return this.tsParseAmbientExternalModuleDeclaration(nany);\n        case 75:\n        case 74:\n          if (!this.match(75) || !this.isLookaheadContextual(\"enum\")) {\n            nany.declare = true;\n            return this.parseVarStatement(nany, kind || this.state.value, true);\n          }\n          this.expect(75);\n          return this.tsParseEnumDeclaration(nany, {\n            const: true,\n            declare: true\n          });\n        case 129:\n          {\n            const result = this.tsParseInterfaceDeclaration(nany, {\n              declare: true\n            });\n            if (result) return result;\n          }\n        default:\n          if (tokenIsIdentifier(startType)) {\n            return this.tsParseDeclaration(nany, this.state.value, true, null);\n          }\n      }\n    });\n  }\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true, null);\n  }\n  tsParseExpressionStatement(node, expr, decorators) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n          }\n          return declaration;\n        }\n      case \"global\":\n        if (this.match(5)) {\n          this.scope.enter(256);\n          this.prodParam.enter(0);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n        break;\n      default:\n        return this.tsParseDeclaration(node, expr.name, false, decorators);\n    }\n  }\n  tsParseDeclaration(node, value, next, decorators) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(80) || tokenIsIdentifier(this.state.type))) {\n          return this.tsParseAbstractDeclaration(node, decorators);\n        }\n        break;\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(133)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n        break;\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n        break;\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n        break;\n    }\n  }\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n    return !this.isLineTerminator();\n  }\n  tsTryParseGenericAsyncArrowFunction(startLoc) {\n    if (!this.match(47)) return;\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startLoc);\n      node.typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(19);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    if (!res) return;\n    return super.parseArrowExpression(res, null, true);\n  }\n  tsParseTypeArgumentsInExpression() {\n    if (this.reScan_lt() !== 47) return;\n    return this.tsParseTypeArguments();\n  }\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expect(47);\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n    if (node.params.length === 0) {\n      this.raise(TSErrors.EmptyTypeArguments, node);\n    } else if (!this.state.inType && this.curContext() === types$1.brace) {\n      this.reScan_lt_gt();\n    }\n    this.expect(48);\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n  tsIsDeclarationStart() {\n    return tokenIsTSDeclarationStart(this.state.type);\n  }\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n  parseAssignableListItem(flags, decorators) {\n    const startLoc = this.state.startLoc;\n    const modified = {};\n    this.tsParseModifiers({\n      allowedModifiers: [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]\n    }, modified);\n    const accessibility = modified.accessibility;\n    const override = modified.override;\n    const readonly = modified.readonly;\n    if (!(flags & 4) && (accessibility || readonly || override)) {\n      this.raise(TSErrors.UnexpectedParameterModifier, startLoc);\n    }\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left, flags);\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startLoc);\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(TSErrors.UnsupportedParameterPropertyKind, pp);\n      }\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n  isSimpleParameter(node) {\n    return node.type === \"TSParameterProperty\" && super.isSimpleParameter(node.parameter) || super.isSimpleParameter(node);\n  }\n  tsDisallowOptionalPattern(node) {\n    for (const param of node.params) {\n      if (param.type !== \"Identifier\" && param.optional && !this.state.isAmbientContext) {\n        this.raise(TSErrors.PatternIsOptional, param);\n      }\n    }\n  }\n  setArrowFunctionParameters(node, params, trailingCommaLoc) {\n    super.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    this.tsDisallowOptionalPattern(node);\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n    }\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" || type === \"ClassPrivateMethod\" ? \"TSDeclareMethod\" : undefined;\n    if (bodilessType && !this.match(5) && this.isLineTerminator()) {\n      return this.finishNode(node, bodilessType);\n    }\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(TSErrors.DeclareFunctionHasImplementation, node);\n      if (node.declare) {\n        return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n      }\n    }\n    this.tsDisallowOptionalPattern(node);\n    return super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkIdentifier(node.id, 1024);\n    } else {\n      super.registerFunctionStatementId(node);\n    }\n  }\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(TSErrors.UnexpectedTypeAnnotation, node.typeAnnotation);\n      }\n    });\n  }\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n    return node;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(35)) {\n      this.state.canStartJSXElement = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n    let isOptionalCall = false;\n    if (this.match(18) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n    if (this.match(47) || this.match(51)) {\n      let missingParenErrorLoc;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startLoc);\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n        if (!typeArguments) return;\n        if (isOptionalCall && !this.match(10)) {\n          missingParenErrorLoc = this.state.curPosition();\n          return;\n        }\n        if (tokenIsTemplate(this.state.type)) {\n          const result = super.parseTaggedTemplateExpression(base, startLoc, state);\n          result.typeParameters = typeArguments;\n          return result;\n        }\n        if (!noCalls && this.eat(10)) {\n          const node = this.startNodeAt(startLoc);\n          node.callee = base;\n          node.arguments = this.parseCallExpressionArguments(11, false);\n          this.tsCheckForInvalidTypeCasts(node.arguments);\n          node.typeParameters = typeArguments;\n          if (state.optionalChainMember) {\n            node.optional = isOptionalCall;\n          }\n          return this.finishCallExpression(node, state.optionalChainMember);\n        }\n        const tokenType = this.state.type;\n        if (tokenType === 48 || tokenType === 52 || tokenType !== 10 && tokenCanStartExpression(tokenType) && !this.hasPrecedingLineBreak()) {\n          return;\n        }\n        const node = this.startNodeAt(startLoc);\n        node.expression = base;\n        node.typeParameters = typeArguments;\n        return this.finishNode(node, \"TSInstantiationExpression\");\n      });\n      if (missingParenErrorLoc) {\n        this.unexpected(missingParenErrorLoc, 10);\n      }\n      if (result) {\n        if (result.type === \"TSInstantiationExpression\" && (this.match(16) || this.match(18) && this.lookaheadCharCode() !== 40)) {\n          this.raise(TSErrors.InvalidPropertyAccessAfterInstantiationExpression, this.state.startLoc);\n        }\n        return result;\n      }\n    }\n    return super.parseSubscript(base, startLoc, noCalls, state);\n  }\n  parseNewCallee(node) {\n    var _callee$extra;\n    super.parseNewCallee(node);\n    const {\n      callee\n    } = node;\n    if (callee.type === \"TSInstantiationExpression\" && !((_callee$extra = callee.extra) != null && _callee$extra.parenthesized)) {\n      node.typeParameters = callee.typeParameters;\n      node.callee = callee.expression;\n    }\n  }\n  parseExprOp(left, leftStartLoc, minPrec) {\n    let isSatisfies;\n    if (tokenOperatorPrecedence(58) > minPrec && !this.hasPrecedingLineBreak() && (this.isContextual(93) || (isSatisfies = this.isContextual(120)))) {\n      const node = this.startNodeAt(leftStartLoc);\n      node.expression = left;\n      node.typeAnnotation = this.tsInType(() => {\n        this.next();\n        if (this.match(75)) {\n          if (isSatisfies) {\n            this.raise(Errors.UnexpectedKeyword, this.state.startLoc, {\n              keyword: \"const\"\n            });\n          }\n          return this.tsParseTypeReference();\n        }\n        return this.tsParseType();\n      });\n      this.finishNode(node, isSatisfies ? \"TSSatisfiesExpression\" : \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartLoc, minPrec);\n    }\n    return super.parseExprOp(left, leftStartLoc, minPrec);\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (!this.state.isAmbientContext) {\n      super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n    }\n  }\n  checkImportReflection(node) {\n    super.checkImportReflection(node);\n    if (node.module && node.importKind !== \"value\") {\n      this.raise(TSErrors.ImportReflectionHasImportType, node.specifiers[0].loc.start);\n    }\n  }\n  checkDuplicateExports() {}\n  isPotentialImportPhase(isExport) {\n    if (super.isPotentialImportPhase(isExport)) return true;\n    if (this.isContextual(130)) {\n      const ch = this.lookaheadCharCode();\n      return isExport ? ch === 123 || ch === 42 : ch !== 61;\n    }\n    return !isExport && this.isContextual(87);\n  }\n  applyImportPhase(node, isExport, phase, loc) {\n    super.applyImportPhase(node, isExport, phase, loc);\n    if (isExport) {\n      node.exportKind = phase === \"type\" ? \"type\" : \"value\";\n    } else {\n      node.importKind = phase === \"type\" || phase === \"typeof\" ? phase : \"value\";\n    }\n  }\n  parseImport(node) {\n    if (this.match(133)) {\n      node.importKind = \"value\";\n      return super.parseImport(node);\n    }\n    let importNode;\n    if (tokenIsIdentifier(this.state.type) && this.lookaheadCharCode() === 61) {\n      node.importKind = \"value\";\n      return this.tsParseImportEqualsDeclaration(node);\n    } else if (this.isContextual(130)) {\n      const maybeDefaultIdentifier = this.parseMaybeImportPhase(node, false);\n      if (this.lookaheadCharCode() === 61) {\n        return this.tsParseImportEqualsDeclaration(node, maybeDefaultIdentifier);\n      } else {\n        importNode = super.parseImportSpecifiersAndAfter(node, maybeDefaultIdentifier);\n      }\n    } else {\n      importNode = super.parseImport(node);\n    }\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, importNode);\n    }\n    return importNode;\n  }\n  parseExport(node, decorators) {\n    if (this.match(83)) {\n      this.next();\n      let maybeDefaultIdentifier = null;\n      if (this.isContextual(130) && this.isPotentialImportPhase(false)) {\n        maybeDefaultIdentifier = this.parseMaybeImportPhase(node, false);\n      } else {\n        node.importKind = \"value\";\n      }\n      return this.tsParseImportEqualsDeclaration(node, maybeDefaultIdentifier, true);\n    } else if (this.eat(29)) {\n      const assign = node;\n      assign.expression = super.parseExpression();\n      this.semicolon();\n      this.sawUnambiguousESM = true;\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(93)) {\n      const decl = node;\n      this.expectContextual(128);\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      return super.parseExport(node, decorators);\n    }\n  }\n  isAbstractClass() {\n    return this.isContextual(124) && this.lookahead().type === 80;\n  }\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      return this.parseClass(cls, true, true);\n    }\n    if (this.match(129)) {\n      const result = this.tsParseInterfaceDeclaration(this.startNode());\n      if (result) return result;\n    }\n    return super.parseExportDefaultExpression();\n  }\n  parseVarStatement(node, kind, allowMissingInitializer = false) {\n    const {\n      isAmbientContext\n    } = this.state;\n    const declaration = super.parseVarStatement(node, kind, allowMissingInitializer || isAmbientContext);\n    if (!isAmbientContext) return declaration;\n    for (const {\n      id,\n      init\n    } of declaration.declarations) {\n      if (!init) continue;\n      if (kind !== \"const\" || !!id.typeAnnotation) {\n        this.raise(TSErrors.InitializerNotAllowedInAmbientContext, init);\n      } else if (!isValidAmbientConstInitializer(init, this.hasPlugin(\"estree\"))) {\n        this.raise(TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference, init);\n      }\n    }\n    return declaration;\n  }\n  parseStatementContent(flags, decorators) {\n    if (this.match(75) && this.isLookaheadContextual(\"enum\")) {\n      const node = this.startNode();\n      this.expect(75);\n      return this.tsParseEnumDeclaration(node, {\n        const: true\n      });\n    }\n    if (this.isContextual(126)) {\n      return this.tsParseEnumDeclaration(this.startNode());\n    }\n    if (this.isContextual(129)) {\n      const result = this.tsParseInterfaceDeclaration(this.startNode());\n      if (result) return result;\n    }\n    return super.parseStatementContent(flags, decorators);\n  }\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n      return !!member[modifier];\n    });\n  }\n  tsIsStartOfStaticBlocks() {\n    return this.isContextual(106) && this.lookaheadCharCode() === 123;\n  }\n  parseClassMember(classBody, member, state) {\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\n    this.tsParseModifiers({\n      allowedModifiers: modifiers,\n      disallowedModifiers: [\"in\", \"out\"],\n      stopOnStartOfClassStaticBlock: true,\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions\n    }, member);\n    const callParseClassMemberWithIsStatic = () => {\n      if (this.tsIsStartOfStaticBlocks()) {\n        this.next();\n        this.next();\n        if (this.tsHasSomeModifiers(member, modifiers)) {\n          this.raise(TSErrors.StaticBlockCannotHaveModifier, this.state.curPosition());\n        }\n        super.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\n      }\n    };\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n    if (idx) {\n      classBody.body.push(idx);\n      if (member.abstract) {\n        this.raise(TSErrors.IndexSignatureHasAbstract, member);\n      }\n      if (member.accessibility) {\n        this.raise(TSErrors.IndexSignatureHasAccessibility, member, {\n          modifier: member.accessibility\n        });\n      }\n      if (member.declare) {\n        this.raise(TSErrors.IndexSignatureHasDeclare, member);\n      }\n      if (member.override) {\n        this.raise(TSErrors.IndexSignatureHasOverride, member);\n      }\n      return;\n    }\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(TSErrors.NonAbstractClassHasAbstractMethod, member);\n    }\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(TSErrors.OverrideNotInSubClass, member);\n      }\n    }\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(17);\n    if (optional) methodOrProp.optional = true;\n    if (methodOrProp.readonly && this.match(10)) {\n      this.raise(TSErrors.ClassMethodHasReadonly, methodOrProp);\n    }\n    if (methodOrProp.declare && this.match(10)) {\n      this.raise(TSErrors.ClassMethodHasDeclare, methodOrProp);\n    }\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr, decorators) : undefined;\n    return decl || super.parseExpressionStatement(node, expr, decorators);\n  }\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(17)) {\n      return super.parseConditional(expr, startLoc, refExpressionErrors);\n    }\n    const result = this.tryParse(() => super.parseConditional(expr, startLoc));\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n      return expr;\n    }\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n  parseParenItem(node, startLoc) {\n    node = super.parseParenItem(node, startLoc);\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n    return node;\n  }\n  parseExportDeclaration(node) {\n    if (!this.state.isAmbientContext && this.isContextual(125)) {\n      return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n    }\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(125);\n    if (isDeclare && (this.isContextual(125) || !this.shouldParseExportDeclaration())) {\n      throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, this.state.startLoc);\n    }\n    const isIdentifier = tokenIsIdentifier(this.state.type);\n    const declaration = isIdentifier && this.tsTryParseExportDeclaration() || super.parseExportDeclaration(node);\n    if (!declaration) return null;\n    if (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare) {\n      node.exportKind = \"type\";\n    }\n    if (isDeclare) {\n      this.resetStartLocation(declaration, startLoc);\n      declaration.declare = true;\n    }\n    return declaration;\n  }\n  parseClassId(node, isStatement, optionalId, bindingType) {\n    if ((!isStatement || optionalId) && this.isContextual(113)) {\n      return;\n    }\n    super.parseClassId(node, isStatement, optionalId, node.declare ? 1024 : 8331);\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional) {\n      if (this.eat(35)) {\n        node.definite = true;\n      } else if (this.eat(17)) {\n        node.optional = true;\n      }\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n    if (this.state.isAmbientContext && !(node.readonly && !node.typeAnnotation) && this.match(29)) {\n      this.raise(TSErrors.DeclareClassFieldHasInitializer, this.state.startLoc);\n    }\n    if (node.abstract && this.match(29)) {\n      const {\n        key\n      } = node;\n      this.raise(TSErrors.AbstractPropertyHasInitializer, this.state.startLoc, {\n        propertyName: key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`\n      });\n    }\n    return super.parseClassProperty(node);\n  }\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(TSErrors.PrivateElementHasAbstract, node);\n    }\n    if (node.accessibility) {\n      this.raise(TSErrors.PrivateElementHasAccessibility, node, {\n        modifier: node.accessibility\n      });\n    }\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n  parseClassAccessorProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n    if (node.optional) {\n      this.raise(TSErrors.AccessorCannotBeOptional, node);\n    }\n    return super.parseClassAccessorProperty(node);\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters && isConstructor) {\n      this.raise(TSErrors.ConstructorHasTypeParameters, typeParameters);\n    }\n    const {\n      declare = false,\n      kind\n    } = method;\n    if (declare && (kind === \"get\" || kind === \"set\")) {\n      this.raise(TSErrors.DeclareAccessor, method, {\n        kind\n      });\n    }\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n  declareClassPrivateMethodInScope(node, kind) {\n    if (node.type === \"TSDeclareMethod\") return;\n    if (node.type === \"MethodDefinition\" && !node.value.body) return;\n    super.declareClassPrivateMethodInScope(node, kind);\n  }\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n    if (node.superClass && (this.match(47) || this.match(51))) {\n      node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n    }\n    if (this.eatContextual(113)) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters) prop.typeParameters = typeParameters;\n    return super.parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n  }\n  parseFunctionParams(node, isConstructor) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, isConstructor);\n  }\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n    if (decl.id.type === \"Identifier\" && !this.hasPrecedingLineBreak() && this.eat(35)) {\n      decl.definite = true;\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2;\n    let state;\n    let jsx;\n    let typeCast;\n    if (this.hasPlugin(\"jsx\") && (this.match(142) || this.match(47))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n      if (currentContext === types$1.j_oTag || currentContext === types$1.j_expr) {\n        context.pop();\n      }\n    }\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.match(47)) {\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n    if (!state || state === this.state) state = this.state.clone();\n    let typeParameters;\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n      typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\n      const expr = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) {\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n    if (!jsx) {\n      assert$1(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n    if (arrow.node) {\n      this.state = arrow.failState;\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n    throw ((_jsx3 = jsx) == null ? void 0 : _jsx3.error) || arrow.error || ((_typeCast2 = typeCast) == null ? void 0 : _typeCast2.error);\n  }\n  reportReservedArrowTypeParam(node) {\n    var _node$extra;\n    if (node.params.length === 1 && !node.params[0].constraint && !((_node$extra = node.extra) != null && _node$extra.trailingComma) && this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(TSErrors.ReservedArrowTypeParam, node);\n    }\n  }\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    if (!this.hasPlugin(\"jsx\") && this.match(47)) {\n      return this.tsParseTypeAssertion();\n    }\n    return super.parseMaybeUnary(refExpressionErrors, sawUnary);\n  }\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n        if (this.canInsertSemicolon() || !this.match(19)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n    return super.parseArrow(node);\n  }\n  parseAssignableListItemTypes(param, flags) {\n    if (!(flags & 2)) return param;\n    if (this.eat(17)) {\n      param.optional = true;\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n      case \"TSParameterProperty\":\n        return true;\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.toAssignableParenthesizedExpression(node, isLHS);\n        break;\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        if (isLHS) {\n          this.expressionScope.recordArrowParameterBindingError(TSErrors.UnexpectedTypeCastInParameter, node);\n        } else {\n          this.raise(TSErrors.UnexpectedTypeCastInParameter, node);\n        }\n        this.toAssignable(node.expression, isLHS);\n        break;\n      case \"AssignmentExpression\":\n        if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n          node.left = this.typeCastToParameter(node.left);\n        }\n      default:\n        super.toAssignable(node, isLHS);\n    }\n  }\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isLHS);\n        break;\n      default:\n        super.toAssignable(node, isLHS);\n    }\n  }\n  checkToRestConversion(node, allowPattern) {\n    switch (node.type) {\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSTypeAssertion\":\n      case \"TSNonNullExpression\":\n        this.checkToRestConversion(node.expression, false);\n        break;\n      default:\n        super.checkToRestConversion(node, allowPattern);\n    }\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return getOwn({\n      TSTypeCastExpression: true,\n      TSParameterProperty: \"parameter\",\n      TSNonNullExpression: \"expression\",\n      TSAsExpression: (binding !== 64 || !isUnparenthesizedInAssign) && [\"expression\", true],\n      TSSatisfiesExpression: (binding !== 64 || !isUnparenthesizedInAssign) && [\"expression\", true],\n      TSTypeAssertion: (binding !== 64 || !isUnparenthesizedInAssign) && [\"expression\", true]\n    }, type) || super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n  }\n  parseBindingAtom() {\n    if (this.state.type === 78) {\n      return this.parseIdentifier(true);\n    }\n    return super.parseBindingAtom();\n  }\n  parseMaybeDecoratorArguments(expr) {\n    if (this.match(47) || this.match(51)) {\n      const typeArguments = this.tsParseTypeArgumentsInExpression();\n      if (this.match(10)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n      this.unexpected(null, 10);\n    }\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(12) && this.lookaheadCharCode() === close) {\n      this.next();\n      return false;\n    }\n    return super.checkCommaAfterRest(close);\n  }\n  isClassMethod() {\n    return this.match(47) || super.isClassMethod();\n  }\n  isClassProperty() {\n    return this.match(35) || this.match(14) || super.isClassProperty();\n  }\n  parseMaybeDefault(startLoc, left) {\n    const node = super.parseMaybeDefault(startLoc, left);\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(TSErrors.TypeAnnotationAfterAssign, node.typeAnnotation);\n    }\n    return node;\n  }\n  getTokenFromCode(code) {\n    if (this.state.inType) {\n      if (code === 62) {\n        this.finishOp(48, 1);\n        return;\n      }\n      if (code === 60) {\n        this.finishOp(47, 1);\n        return;\n      }\n    }\n    super.getTokenFromCode(code);\n  }\n  reScan_lt_gt() {\n    const {\n      type\n    } = this.state;\n    if (type === 47) {\n      this.state.pos -= 1;\n      this.readToken_lt();\n    } else if (type === 48) {\n      this.state.pos -= 1;\n      this.readToken_gt();\n    }\n  }\n  reScan_lt() {\n    const {\n      type\n    } = this.state;\n    if (type === 51) {\n      this.state.pos -= 2;\n      this.finishOp(47, 1);\n      return 47;\n    }\n    return type;\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if ((expr == null ? void 0 : expr.type) === \"TSTypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n    super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n  }\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n  shouldParseArrow(params) {\n    if (this.match(14)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n    return super.shouldParseArrow(params);\n  }\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n  jsxParseOpeningElementAfterName(node) {\n    if (this.match(47) || this.match(51)) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArgumentsInExpression());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n    return param;\n  }\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n  parseClass(node, isStatement, optionalId) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n    try {\n      return super.parseClass(node, isStatement, optionalId);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n  tsParseAbstractDeclaration(node, decorators) {\n    if (this.match(80)) {\n      node.abstract = true;\n      return this.maybeTakeDecorators(decorators, this.parseClass(node, true, false));\n    } else if (this.isContextual(129)) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, node);\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, 80);\n    }\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope) {\n    const method = super.parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(TSErrors.AbstractMethodHasImplementation, method, {\n          methodName: key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`\n        });\n      }\n    }\n    return method;\n  }\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n    return super.parse();\n  }\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n    return super.getExpression();\n  }\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (!isString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(node, false, isInTypeExport);\n      return this.finishNode(node, \"ExportSpecifier\");\n    }\n    node.exportKind = \"value\";\n    return super.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly);\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    if (!importedIsString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(specifier, true, isInTypeOnlyImport);\n      return this.finishNode(specifier, \"ImportSpecifier\");\n    }\n    specifier.importKind = \"value\";\n    return super.parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, isInTypeOnlyImport ? 4098 : 4096);\n  }\n  parseTypeOnlyImportExportSpecifier(node, isImport, isInTypeOnlyImportExport) {\n    const leftOfAsKey = isImport ? \"imported\" : \"local\";\n    const rightOfAsKey = isImport ? \"local\" : \"exported\";\n    let leftOfAs = node[leftOfAsKey];\n    let rightOfAs;\n    let hasTypeSpecifier = false;\n    let canParseAsKeyword = true;\n    const loc = leftOfAs.loc.start;\n    if (this.isContextual(93)) {\n      const firstAs = this.parseIdentifier();\n      if (this.isContextual(93)) {\n        const secondAs = this.parseIdentifier();\n        if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n          rightOfAs = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n          canParseAsKeyword = false;\n        } else {\n          rightOfAs = secondAs;\n          canParseAsKeyword = false;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        canParseAsKeyword = false;\n        rightOfAs = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n      } else {\n        hasTypeSpecifier = true;\n        leftOfAs = firstAs;\n      }\n    } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n      hasTypeSpecifier = true;\n      if (isImport) {\n        leftOfAs = this.parseIdentifier(true);\n        if (!this.isContextual(93)) {\n          this.checkReservedWord(leftOfAs.name, leftOfAs.loc.start, true, true);\n        }\n      } else {\n        leftOfAs = this.parseModuleExportName();\n      }\n    }\n    if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n      this.raise(isImport ? TSErrors.TypeModifierIsUsedInTypeImports : TSErrors.TypeModifierIsUsedInTypeExports, loc);\n    }\n    node[leftOfAsKey] = leftOfAs;\n    node[rightOfAsKey] = rightOfAs;\n    const kindKey = isImport ? \"importKind\" : \"exportKind\";\n    node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n    if (canParseAsKeyword && this.eatContextual(93)) {\n      node[rightOfAsKey] = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n    }\n    if (!node[rightOfAsKey]) {\n      node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n    }\n    if (isImport) {\n      this.checkIdentifier(node[rightOfAsKey], hasTypeSpecifier ? 4098 : 4096);\n    }\n  }\n};\nfunction isPossiblyLiteralEnum(expression) {\n  if (expression.type !== \"MemberExpression\") return false;\n  const {\n    computed,\n    property\n  } = expression;\n  if (computed && property.type !== \"StringLiteral\" && (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)) {\n    return false;\n  }\n  return isUncomputedMemberExpressionChain(expression.object);\n}\nfunction isValidAmbientConstInitializer(expression, estree) {\n  var _expression$extra;\n  const {\n    type\n  } = expression;\n  if ((_expression$extra = expression.extra) != null && _expression$extra.parenthesized) {\n    return false;\n  }\n  if (estree) {\n    if (type === \"Literal\") {\n      const {\n        value\n      } = expression;\n      if (typeof value === \"string\" || typeof value === \"boolean\") {\n        return true;\n      }\n    }\n  } else {\n    if (type === \"StringLiteral\" || type === \"BooleanLiteral\") {\n      return true;\n    }\n  }\n  if (isNumber$1(expression, estree) || isNegativeNumber(expression, estree)) {\n    return true;\n  }\n  if (type === \"TemplateLiteral\" && expression.expressions.length === 0) {\n    return true;\n  }\n  if (isPossiblyLiteralEnum(expression)) {\n    return true;\n  }\n  return false;\n}\nfunction isNumber$1(expression, estree) {\n  if (estree) {\n    return expression.type === \"Literal\" && (typeof expression.value === \"number\" || \"bigint\" in expression);\n  }\n  return expression.type === \"NumericLiteral\" || expression.type === \"BigIntLiteral\";\n}\nfunction isNegativeNumber(expression, estree) {\n  if (expression.type === \"UnaryExpression\") {\n    const {\n      operator,\n      argument\n    } = expression;\n    if (operator === \"-\" && isNumber$1(argument, estree)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isUncomputedMemberExpressionChain(expression) {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\" || expression.computed) {\n    return false;\n  }\n  return isUncomputedMemberExpressionChain(expression.object);\n}\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\"\n});\nvar placeholders = superClass => class PlaceholdersParserMixin extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(144)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace();\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace();\n      this.expect(144);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      this.finishOp(144, 2);\n    } else {\n      super.getTokenFromCode(code);\n    }\n  }\n  parseExprAtom(refExpressionErrors) {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(refExpressionErrors);\n  }\n  parseIdentifier(liberal) {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal);\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word !== undefined) {\n      super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n    }\n  }\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n  }\n  isValidLVal(type, isParenthesized, binding) {\n    return type === \"Placeholder\" || super.isValidLVal(type, isParenthesized, binding);\n  }\n  toAssignable(node, isLHS) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n    } else {\n      super.toAssignable(node, isLHS);\n    }\n  }\n  chStartsBindingIdentifier(ch, pos) {\n    if (super.chStartsBindingIdentifier(ch, pos)) {\n      return true;\n    }\n    const nextToken = this.lookahead();\n    if (nextToken.type === 144) {\n      return true;\n    }\n    return false;\n  }\n  verifyBreakContinue(node, isBreak) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(node, isBreak);\n  }\n  parseExpressionStatement(node, expr) {\n    var _expr$extra;\n    if (expr.type !== \"Placeholder\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n      return super.parseExpressionStatement(node, expr);\n    }\n    if (this.match(14)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = super.parseStatementOrSloppyAnnexBFunctionDeclaration();\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n  parseBlock(allowDirectives, createNewLexicalScope, afterBlockParse) {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(allowDirectives, createNewLexicalScope, afterBlockParse);\n  }\n  parseFunctionId(requireId) {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId);\n  }\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (placeholder) {\n      if (this.match(81) || this.match(144) || this.match(5)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        throw this.raise(PlaceholderErrors.ClassNameIsRequired, this.state.startLoc);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n    super.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || super.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n  parseExport(node, decorators) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(node, decorators);\n    if (!this.isContextual(98) && !this.match(12)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node, decorators);\n  }\n  isExportDefaultSpecifier() {\n    if (this.match(65)) {\n      const next = this.nextTokenStart();\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(tokenLabelName(144), this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n    return super.isExportDefaultSpecifier();\n  }\n  maybeParseExportDefaultSpecifier(node, maybeDefaultIdentifier) {\n    var _specifiers;\n    if ((_specifiers = node.specifiers) != null && _specifiers.length) {\n      return true;\n    }\n    return super.maybeParseExportDefaultSpecifier(node, maybeDefaultIdentifier);\n  }\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(node);\n    node.specifiers = [];\n    if (!this.isContextual(98) && !this.match(12)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    node.specifiers.push(this.finishNode(specifier, \"ImportDefaultSpecifier\"));\n    if (this.eat(12)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n    this.expectContextual(98);\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource();\n  }\n  assertNoSpace() {\n    if (this.state.start > this.state.lastTokEndLoc.index) {\n      this.raise(PlaceholderErrors.UnexpectedSpace, this.state.lastTokEndLoc);\n    }\n  }\n};\nvar v8intrinsic = superClass => class V8IntrinsicMixin extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(54)) {\n      const v8IntrinsicStartLoc = this.state.startLoc;\n      const node = this.startNode();\n      this.next();\n      if (tokenIsIdentifier(this.state.type)) {\n        const name = this.parseIdentifierName();\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n        if (this.match(10)) {\n          return identifier;\n        }\n      }\n      this.unexpected(v8IntrinsicStartLoc);\n    }\n  }\n  parseExprAtom(refExpressionErrors) {\n    return this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors);\n  }\n};\nfunction hasPlugin(plugins, expectedConfig) {\n  const [expectedName, expectedOptions] = typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n  const expectedKeys = Object.keys(expectedOptions);\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n  if (plugin && Array.isArray(plugin) && plugin.length > 1) {\n    return plugin[1][option];\n  }\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n    if (decoratorsBeforeExport != null && typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean, if specified.\");\n    }\n    const allowCallParenthesized = getPluginOption(plugins, \"decorators\", \"allowCallParenthesized\");\n    if (allowCallParenthesized != null && typeof allowCallParenthesized !== \"boolean\") {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\"recordAndTuple\", {\n      syntaxType: \"hash\"\n    }]);\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\") || hasPlugin(plugins, \"importAttributes\")) {\n        throw new Error(\"Cannot combine importAssertions, importAttributes and moduleAttributes plugins.\");\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n  if (hasPlugin(plugins, \"importAssertions\") && hasPlugin(plugins, \"importAttributes\")) {\n    throw new Error(\"Cannot combine importAssertions and importAttributes plugins.\");\n  }\n  if (hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") != null && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n  if (hasPlugin(plugins, \"optionalChainingAssign\") && getPluginOption(plugins, \"optionalChainingAssign\", \"version\") !== \"2023-07\") {\n    throw new Error(\"The 'optionalChainingAssign' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is '2023-07'.\");\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startColumn: 0,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowNewTargetOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createImportExpressions: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true,\n  annexB: true\n};\nfunction getOptions(opts) {\n  if (opts == null) {\n    return Object.assign({}, defaultOptions);\n  }\n  if (opts.annexB != null && opts.annexB !== false) {\n    throw new Error(\"The `annexB` option can only be set to `false`.\");\n  }\n  const options = {};\n  for (const key of Object.keys(defaultOptions)) {\n    var _opts$key;\n    options[key] = (_opts$key = opts[key]) != null ? _opts$key : defaultOptions[key];\n  }\n  return options;\n}\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, key);\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, key);\n        }\n      }\n      protoRef.used = true;\n    }\n  }\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(139)) {\n      this.unexpected();\n    }\n    this.finalizeRemainingComments();\n    expr.comments = this.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n  parseExpressionBase(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(12)) {\n      const node = this.startNodeAt(startLoc);\n      node.expressions = [expr];\n      while (this.eat(12)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$loc;\n    refExpressionErrors.optionalParametersLoc = (_resultError$loc = resultError == null ? void 0 : resultError.loc) != null ? _resultError$loc : this.state.startLoc;\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(108)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startLoc);\n        }\n        return left;\n      }\n    }\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const {\n      type\n    } = this.state;\n    if (type === 10 || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt(startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n      if (this.match(29)) {\n        this.toAssignable(left, true);\n        node.left = left;\n        const startIndex = startLoc.index;\n        if (refExpressionErrors.doubleProtoLoc != null && refExpressionErrors.doubleProtoLoc.index >= startIndex) {\n          refExpressionErrors.doubleProtoLoc = null;\n        }\n        if (refExpressionErrors.shorthandAssignLoc != null && refExpressionErrors.shorthandAssignLoc.index >= startIndex) {\n          refExpressionErrors.shorthandAssignLoc = null;\n        }\n        if (refExpressionErrors.privateKeyLoc != null && refExpressionErrors.privateKeyLoc.index >= startIndex) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null;\n        }\n      } else {\n        node.left = left;\n      }\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\")\n      });\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    return left;\n  }\n  parseMaybeConditional(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseConditional(expr, startLoc, refExpressionErrors);\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (this.eat(17)) {\n      const node = this.startNodeAt(startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(14);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\n    return this.match(138) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\n  }\n  parseExprOps(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseExprOp(expr, startLoc, -1);\n  }\n  parseExprOp(left, leftStartLoc, minPrec) {\n    if (this.isPrivateName(left)) {\n      const value = this.getPrivateNameSV(left);\n      if (minPrec >= tokenOperatorPrecedence(58) || !this.prodParam.hasIn || !this.match(58)) {\n        this.raise(Errors.PrivateInExpectedIn, left, {\n          identifierName: value\n        });\n      }\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(58))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === 39) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt(leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === 41 || op === 42;\n        const coalesce = op === 40;\n        if (coalesce) {\n          prec = tokenOperatorPrecedence(42);\n        }\n        this.next();\n        if (op === 39 && this.hasPlugin([\"pipelineOperator\", {\n          proposal: \"minimal\"\n        }])) {\n          if (this.state.type === 96 && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, this.state.startLoc);\n          }\n        }\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n        if (coalesce && (nextOp === 41 || nextOp === 42) || logical && nextOp === 40) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, this.state.startLoc);\n        }\n        return this.parseExprOp(finishedNode, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n  parseExprOpRightExpr(op, prec) {\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case 39:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(108)) {\n                throw this.raise(Errors.PipeBodyIsTighter, this.state.startLoc);\n              }\n              return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op, prec), startLoc);\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n  parseExprOpBaseRightExpr(op, prec) {\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startLoc, tokenIsRightAssociative(op) ? prec - 1 : prec);\n  }\n  parseHackPipeBody() {\n    var _body$extra;\n    const {\n      startLoc\n    } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(body.type);\n    if (requiredParentheses && !((_body$extra = body.extra) != null && _body$extra.parenthesized)) {\n      this.raise(Errors.PipeUnparenthesizedBody, startLoc, {\n        type: body.type\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipeTopicUnused, startLoc);\n    }\n    return body;\n  }\n  checkExponentialAfterUnary(node) {\n    if (this.match(57)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, node.argument);\n    }\n  }\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(96);\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(34);\n    const node = this.startNode();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n      if (this.match(72)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(89);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, node);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, node);\n        }\n      }\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n    if (isAwait) {\n      const {\n        type\n      } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? tokenCanStartExpression(type) : tokenCanStartExpression(type) && !this.match(54);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, startLoc);\n        return this.parseAwait(startLoc);\n      }\n    }\n    return expr;\n  }\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      const updateExpressionNode = node;\n      this.checkLVal(updateExpressionNode.argument, {\n        in: this.finishNode(updateExpressionNode, \"UpdateExpression\")\n      });\n      return node;\n    }\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: expr = this.finishNode(node, \"UpdateExpression\")\n      });\n    }\n    return expr;\n  }\n  parseExprSubscripts(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseSubscripts(expr, startLoc);\n  }\n  parseSubscripts(base, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n    do {\n      base = this.parseSubscript(base, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    const {\n      type\n    } = this.state;\n    if (!noCalls && type === 15) {\n      return this.parseBind(base, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(base, startLoc, state);\n    }\n    let optional = false;\n    if (type === 18) {\n      if (noCalls) {\n        this.raise(Errors.OptionalChainingNoNew, this.state.startLoc);\n        if (this.lookaheadCharCode() === 40) {\n          state.stop = true;\n          return base;\n        }\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n    if (!noCalls && this.match(10)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startLoc, state, optional);\n    } else {\n      const computed = this.eat(0);\n      if (computed || optional || this.eat(16)) {\n        return this.parseMember(base, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n  parseMember(base, startLoc, state, computed, optional) {\n    const node = this.startNodeAt(startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(3);\n    } else if (this.match(138)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, startLoc);\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n  parseBind(base, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startLoc);\n    node.object = base;\n    this.next();\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startLoc, noCalls);\n  }\n  parseCoverCallAndAsyncArrowHead(base, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    const node = this.startNodeAt(startLoc);\n    node.callee = base;\n    const {\n      maybeAsyncArrow,\n      optionalChainMember\n    } = state;\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n    if (optionalChainMember) {\n      node.optional = optional;\n    }\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(11);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(11, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n    let finishedNode = this.finishCallExpression(node, optionalChainMember);\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startLoc), finishedNode);\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return finishedNode;\n  }\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n  parseTaggedTemplateExpression(base, startLoc, state) {\n    const node = this.startNodeAt(startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, startLoc);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEndLoc.index === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n  expectImportAttributesPlugin() {\n    if (!this.hasPlugin(\"importAssertions\")) {\n      this.expectPlugin(\"importAttributes\");\n    }\n  }\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectImportAttributesPlugin();\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, node, {\n          maxArgumentCount: this.hasPlugin(\"importAttributes\") || this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? 2 : 1\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, arg);\n          }\n        }\n      }\n    }\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAttributes\") && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, this.state.lastTokStartLoc);\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n  shouldParseAsyncArrow() {\n    return this.match(19) && !this.canInsertSemicolon();\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(19);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingCommaLoc);\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node;\n  }\n  parseNoCallExpr() {\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startLoc, true);\n  }\n  parseExprAtom(refExpressionErrors) {\n    let node;\n    let decorators = null;\n    const {\n      type\n    } = this.state;\n    switch (type) {\n      case 79:\n        return this.parseSuper();\n      case 83:\n        node = this.startNode();\n        this.next();\n        if (this.match(16)) {\n          return this.parseImportMetaProperty(node);\n        }\n        if (this.match(10)) {\n          if (this.options.createImportExpressions) {\n            return this.parseImportCall(node);\n          } else {\n            return this.finishNode(node, \"Import\");\n          }\n        } else {\n          this.raise(Errors.UnsupportedImport, this.state.lastTokStartLoc);\n          return this.finishNode(node, \"Import\");\n        }\n      case 78:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n      case 90:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n      case 56:\n      case 31:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n      case 134:\n        return this.parseNumericLiteral(this.state.value);\n      case 135:\n        return this.parseBigIntLiteral(this.state.value);\n      case 136:\n        return this.parseDecimalLiteral(this.state.value);\n      case 133:\n        return this.parseStringLiteral(this.state.value);\n      case 84:\n        return this.parseNullLiteral();\n      case 85:\n        return this.parseBooleanLiteral(true);\n      case 86:\n        return this.parseBooleanLiteral(false);\n      case 10:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n      case 2:\n      case 1:\n        {\n          return this.parseArrayLike(this.state.type === 2 ? 4 : 3, false, true);\n        }\n      case 0:\n        {\n          return this.parseArrayLike(3, true, false, refExpressionErrors);\n        }\n      case 6:\n      case 7:\n        {\n          return this.parseObjectLike(this.state.type === 6 ? 9 : 8, false, true);\n        }\n      case 5:\n        {\n          return this.parseObjectLike(8, false, false, refExpressionErrors);\n        }\n      case 68:\n        return this.parseFunctionOrFunctionSent();\n      case 26:\n        decorators = this.parseDecorators();\n      case 80:\n        return this.parseClass(this.maybeTakeDecorators(decorators, this.startNode()), false);\n      case 77:\n        return this.parseNewOrNewTarget();\n      case 25:\n      case 24:\n        return this.parseTemplate(false);\n      case 15:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(Errors.UnsupportedBind, callee);\n          }\n        }\n      case 138:\n        {\n          this.raise(Errors.PrivateInExpectedIn, this.state.startLoc, {\n            identifierName: this.state.value\n          });\n          return this.parsePrivateName();\n        }\n      case 33:\n        {\n          return this.parseTopicReferenceThenEqualsSign(54, \"%\");\n        }\n      case 32:\n        {\n          return this.parseTopicReferenceThenEqualsSign(44, \"^\");\n        }\n      case 37:\n      case 38:\n        {\n          return this.parseTopicReference(\"hack\");\n        }\n      case 44:\n      case 54:\n      case 27:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n          if (pipeProposal) {\n            return this.parseTopicReference(pipeProposal);\n          }\n          this.unexpected();\n          break;\n        }\n      case 47:\n        {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          } else {\n            this.unexpected();\n          }\n          break;\n        }\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (this.isContextual(127) && this.lookaheadInLineCharCode() === 123) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            const {\n              type\n            } = this.state;\n            if (type === 68) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseAsyncFunctionExpression(this.startNodeAtNode(id));\n            } else if (tokenIsIdentifier(type)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (type === 90) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n          if (canBeArrow && this.match(19) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n          return id;\n        } else {\n          this.unexpected();\n        }\n    }\n  }\n  parseTopicReferenceThenEqualsSign(topicTokenType, topicTokenValue) {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n    if (pipeProposal) {\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      this.state.pos--;\n      this.state.end--;\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      this.unexpected();\n    }\n  }\n  parseTopicReference(pipeProposal) {\n    const node = this.startNode();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n    this.next();\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n  finishTopicReference(node, startLoc, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)) {\n      const nodeType = pipeProposal === \"smart\" ? \"PipelinePrimaryTopicReference\" : \"TopicReference\";\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(pipeProposal === \"smart\" ? Errors.PrimaryTopicNotAllowed : Errors.PipeTopicUnbound, startLoc);\n      }\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, startLoc, {\n        token: tokenLabelName(tokenType)\n      });\n    }\n  }\n  testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          return this.hasPlugin([\"pipelineOperator\", {\n            topicToken: tokenLabelName(tokenType)\n          }]);\n        }\n      case \"smart\":\n        return tokenType === 27;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, startLoc);\n    }\n  }\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, this.state.curPosition());\n    }\n    this.expect(19);\n    return this.parseArrowExpression(node, params, true);\n  }\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      this.prodParam.enter(2);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n    if (this.match(10) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(Errors.SuperNotAllowed, node);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(Errors.UnexpectedSuper, node);\n    }\n    if (!this.match(10) && !this.match(0) && !this.match(16)) {\n      this.raise(Errors.UnsupportedSuper, node);\n    }\n    return this.finishNode(node, \"Super\");\n  }\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(createPositionWithColumnOffset(this.state.startLoc, 1));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n    if (this.prodParam.hasYield && this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      if (this.match(103)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, node.property, {\n        target: meta.name,\n        onlyValidPropertyName: propertyName\n      });\n    }\n    return this.finishNode(node, \"MetaProperty\");\n  }\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n    if (this.isContextual(101)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, id);\n      }\n      this.sawUnambiguousESM = true;\n    } else if (this.isContextual(105) || this.isContextual(97)) {\n      const isSource = this.isContextual(105);\n      if (!isSource) this.unexpected();\n      this.expectPlugin(isSource ? \"sourcePhaseImports\" : \"deferredImportEvaluation\");\n      if (!this.options.createImportExpressions) {\n        throw this.raise(Errors.DynamicImportPhaseRequiresImportExpressions, this.state.startLoc, {\n          phase: this.state.value\n        });\n      }\n      this.next();\n      node.phase = isSource ? \"source\" : \"defer\";\n      return this.parseImportCall(node);\n    }\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n    while (!this.match(11)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12, refExpressionErrors.optionalParametersLoc === null ? null : refExpressionErrors.optionalParametersLoc);\n        if (this.match(11)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n      if (this.match(21)) {\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartLoc));\n        if (!this.checkCommaAfterRest(41)) {\n          break;\n        }\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(11);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startLoc);\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n    return this.wrapParenthesis(startLoc, val);\n  }\n  wrapParenthesis(startLoc, expression) {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startLoc.index);\n      this.takeSurroundingComments(expression, startLoc.index, this.state.lastTokEndLoc.index);\n      return expression;\n    }\n    const parenExpression = this.startNodeAt(startLoc);\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n  parseArrow(node) {\n    if (this.eat(19)) {\n      return node;\n    }\n  }\n  parseParenItem(node, startLoc) {\n    return node;\n  }\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n    if (this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass && !this.options.allowNewTargetOutsideFunction) {\n        this.raise(Errors.UnexpectedNewTarget, metaProp);\n      }\n      return metaProp;\n    }\n    return this.parseNew(node);\n  }\n  parseNew(node) {\n    this.parseNewCallee(node);\n    if (this.eat(10)) {\n      const args = this.parseExprList(11);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n    return this.finishNode(node, \"NewExpression\");\n  }\n  parseNewCallee(node) {\n    const isImport = this.match(83);\n    const callee = this.parseNoCallExpr();\n    node.callee = callee;\n    if (isImport && (callee.type === \"Import\" || callee.type === \"ImportExpression\")) {\n      this.raise(Errors.ImportCallNotNewExpression, callee);\n    }\n  }\n  parseTemplateElement(isTagged) {\n    const {\n      start,\n      startLoc,\n      end,\n      value\n    } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt(createPositionWithColumnOffset(startLoc, 1));\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, createPositionWithColumnOffset(this.state.firstInvalidTemplateEscapePos, 1));\n      }\n    }\n    const isTail = this.match(24);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset)\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(finishedNode, createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset));\n    return finishedNode;\n  }\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(node);\n          break;\n        }\n      }\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(Errors.InvalidRecordProperty, prop);\n      }\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n      node.properties.push(prop);\n    }\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n  addTrailingCommaExtraToNode(node) {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStartLoc.index);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(0) || this.match(55));\n  }\n  parsePropertyDefinition(refExpressionErrors) {\n    let decorators = [];\n    if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, this.state.startLoc);\n      }\n      while (this.match(26)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n    const prop = this.startNode();\n    let isAsync = false;\n    let isAccessor = false;\n    let startLoc;\n    if (this.match(21)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n    prop.method = false;\n    if (refExpressionErrors) {\n      startLoc = this.state.startLoc;\n    }\n    let isGenerator = this.eat(55);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(55);\n        this.parsePropertyName(prop);\n      }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(55)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, this.state.curPosition(), {\n            kind: keyName\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n    return this.parseObjPropValue(prop, startLoc, isGenerator, isAsync, false, isAccessor, refExpressionErrors);\n  }\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n  checkGetterSetterParams(method) {\n    var _params;\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    if (params.length !== paramCount) {\n      this.raise(method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity, method);\n    }\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(Errors.BadSetterRestParameter, method);\n    }\n  }\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      const finishedProp = this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n    if (isAsync || isGenerator || this.match(10)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n  parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n    if (this.eat(14)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(29)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, shorthandAssignLoc);\n        }\n        prop.value = this.parseMaybeDefault(startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n  parsePropertyName(prop, refExpressionErrors) {\n    if (this.eat(0)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(3);\n    } else {\n      const {\n        type,\n        value\n      } = this.state;\n      let key;\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case 134:\n            key = this.parseNumericLiteral(value);\n            break;\n          case 133:\n            key = this.parseStringLiteral(value);\n            break;\n          case 135:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case 136:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case 138:\n            {\n              const privateKeyLoc = this.state.startLoc;\n              if (refExpressionErrors != null) {\n                if (refExpressionErrors.privateKeyLoc === null) {\n                  refExpressionErrors.privateKeyLoc = privateKeyLoc;\n                }\n              } else {\n                this.raise(Errors.UnexpectedPrivateField, privateKeyLoc);\n              }\n              key = this.parsePrivateName();\n              break;\n            }\n          default:\n            this.unexpected();\n        }\n      }\n      prop.key = key;\n      if (type !== 138) {\n        prop.computed = false;\n      }\n    }\n    return prop.key;\n  }\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = isAsync;\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = isGenerator;\n    this.scope.enter(2 | 16 | (inClassScope ? 64 : 0) | (allowDirectSuper ? 32 : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, isConstructor);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return finishedNode;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n  parseArrowExpression(node, params, isAsync, trailingCommaLoc) {\n    this.scope.enter(2 | 4);\n    let flags = functionFlags(isAsync, false);\n    if (!this.match(5) && this.prodParam.hasIn) {\n      flags |= 8;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n  setArrowFunctionParameters(node, params, trailingCommaLoc) {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params;\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(5);\n    this.expressionScope.enter(newExpressionScope());\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | 4);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n        if (hasStrictModeDirective && nonSimple) {\n          this.raise(Errors.IllegalLanguageModeDirective, (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.loc.end : node);\n        }\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n        if (this.state.strict && node.id) {\n          this.checkIdentifier(node.id, 65, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n  isSimpleParameter(node) {\n    return node.type === \"Identifier\";\n  }\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = !allowDuplicates && new Set();\n    const formalParameters = {\n      type: \"FormalParameters\"\n    };\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: 5,\n        checkClashes,\n        strictModeChanged\n      });\n    }\n  }\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n    if (this.match(12)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, this.state.curPosition(), {\n          unexpected: \",\"\n        });\n      }\n      elt = null;\n    } else if (this.match(21)) {\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartLoc);\n    } else if (this.match(17)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, this.state.startLoc);\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n    return elt;\n  }\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(liberal);\n    return this.createIdentifier(node, name);\n  }\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n  parseIdentifierName(liberal) {\n    let name;\n    const {\n      startLoc,\n      type\n    } = this.state;\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      this.unexpected();\n    }\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n    if (liberal) {\n      if (tokenIsKeyword) {\n        this.replaceToken(132);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n    this.next();\n    return name;\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, startLoc, {\n        keyword: word\n      });\n      return;\n    }\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, startLoc, {\n        reservedWord: word\n      });\n      return;\n    } else if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, startLoc);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, startLoc);\n        return;\n      }\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, startLoc);\n        return;\n      }\n      this.expressionScope.recordAsyncArrowParametersError(startLoc);\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, startLoc);\n        return;\n      }\n    }\n  }\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n  parseAwait(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    this.expressionScope.recordParameterInitializerError(Errors.AwaitExpressionFormalParameter, node);\n    if (this.eat(55)) {\n      this.raise(Errors.ObsoleteAwaitStar, node);\n    }\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n  isAmbiguousAwait() {\n    if (this.hasPrecedingLineBreak()) return true;\n    const {\n      type\n    } = this.state;\n    return type === 53 || type === 10 || type === 0 || tokenIsTemplate(type) || type === 102 && !this.state.containsEsc || type === 137 || type === 56 || this.hasPlugin(\"v8intrinsic\") && type === 54;\n  }\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(Errors.YieldInParameter, node);\n    this.next();\n    let delegating = false;\n    let argument = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(55);\n      switch (this.state.type) {\n        case 13:\n        case 139:\n        case 8:\n        case 11:\n        case 3:\n        case 9:\n        case 14:\n        case 12:\n          if (!delegating) break;\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n  parseImportCall(node) {\n    this.next();\n    node.source = this.parseMaybeAssignAllowIn();\n    if (this.hasPlugin(\"importAttributes\") || this.hasPlugin(\"importAssertions\")) {\n      node.options = null;\n    }\n    if (this.eat(12)) {\n      this.expectImportAttributesPlugin();\n      if (!this.match(11)) {\n        node.options = this.parseMaybeAssignAllowIn();\n        this.eat(12);\n      }\n    }\n    this.expect(11);\n    return this.finishNode(node, \"ImportExpression\");\n  }\n  checkPipelineAtInfixOperator(left, leftStartLoc) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(Errors.PipelineHeadSequenceExpression, leftStartLoc);\n      }\n    }\n  }\n  parseSmartPipelineBodyInStyle(childExpr, startLoc) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt(startLoc);\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt(startLoc);\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n  checkSmartPipeTopicBodyEarlyErrors(startLoc) {\n    if (this.match(19)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, this.state.startLoc);\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, startLoc);\n    }\n  }\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n  withSmartMixTopicForbiddingContext(callback) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = 8 & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | 8);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = 8 & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~8);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n  parseFSharpPipelineBody(prec) {\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    if (!this.match(5)) {\n      this.unexpected(null, 5);\n    }\n    const program = this.startNodeAt(this.state.endLoc);\n    this.next();\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    try {\n      node.body = this.parseProgram(program, 8, \"module\");\n    } finally {\n      revertScopes();\n    }\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n  parsePropertyNamePrefixOperator(prop) {}\n}\nconst loopLabel = {\n    kind: 1\n  },\n  switchLabel = {\n    kind: 2\n  };\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\nfunction babel7CompatTokens(tokens, input) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const {\n      type\n    } = token;\n    if (typeof type === \"number\") {\n      {\n        if (type === 138) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(i, 1, new Token({\n            type: getExportedToken(27),\n            value: \"#\",\n            start: start,\n            end: hashEndPos,\n            startLoc: loc.start,\n            endLoc: hashEndLoc\n          }), new Token({\n            type: getExportedToken(132),\n            value: value,\n            start: hashEndPos,\n            end: end,\n            startLoc: hashEndLoc,\n            endLoc: loc.end\n          }));\n          i++;\n          continue;\n        }\n        if (tokenIsTemplate(type)) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === 96) {\n            startToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          } else {\n            startToken = new Token({\n              type: getExportedToken(8),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          }\n          let templateValue, templateElementEnd, templateElementEndLoc, endToken;\n          if (type === 24) {\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          } else {\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              type: getExportedToken(23),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          }\n          tokens.splice(i, 1, startToken, new Token({\n            type: getExportedToken(20),\n            value: templateValue,\n            start: backquoteEnd,\n            end: templateElementEnd,\n            startLoc: backquoteEndLoc,\n            endLoc: templateElementEndLoc\n          }), endToken);\n          i += 2;\n          continue;\n        }\n      }\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.comments;\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n    return this.finishNode(file, \"File\");\n  }\n  parseProgram(program, end = 139, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, at, {\n          localName\n        });\n      }\n    }\n    let finishedProgram;\n    if (end === 139) {\n      finishedProgram = this.finishNode(program, \"Program\");\n    } else {\n      finishedProgram = this.finishNodeAt(program, \"Program\", createPositionWithColumnOffset(this.state.startLoc, -1));\n    }\n    return finishedProgram;\n  }\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n  parseInterpreterDirective() {\n    if (!this.match(28)) {\n      return null;\n    }\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n  isLet() {\n    if (!this.isContextual(100)) {\n      return false;\n    }\n    return this.hasFollowingBindingAtom();\n  }\n  chStartsBindingIdentifier(ch, pos) {\n    if (isIdentifierStart(ch)) {\n      keywordRelationalOperator.lastIndex = pos;\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n      return true;\n    } else if (ch === 92) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  chStartsBindingPattern(ch) {\n    return ch === 91 || ch === 123;\n  }\n  hasFollowingBindingAtom() {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    return this.chStartsBindingPattern(nextCh) || this.chStartsBindingIdentifier(nextCh, next);\n  }\n  hasInLineFollowingBindingIdentifier() {\n    const next = this.nextTokenInLineStart();\n    const nextCh = this.codePointAtPos(next);\n    return this.chStartsBindingIdentifier(nextCh, next);\n  }\n  startsUsingForOf() {\n    const {\n      type,\n      containsEsc\n    } = this.lookahead();\n    if (type === 102 && !containsEsc) {\n      return false;\n    } else if (tokenIsIdentifier(type) && !this.hasFollowingLineBreak()) {\n      this.expectPlugin(\"explicitResourceManagement\");\n      return true;\n    }\n  }\n  startsAwaitUsing() {\n    let next = this.nextTokenInLineStart();\n    if (this.isUnparsedContextual(next, \"using\")) {\n      next = this.nextTokenInLineStartSince(next + 5);\n      const nextCh = this.codePointAtPos(next);\n      if (this.chStartsBindingIdentifier(nextCh, next)) {\n        this.expectPlugin(\"explicitResourceManagement\");\n        return true;\n      }\n    }\n    return false;\n  }\n  parseModuleItem() {\n    return this.parseStatementLike(1 | 2 | 4 | 8);\n  }\n  parseStatementListItem() {\n    return this.parseStatementLike(2 | 4 | (!this.options.annexB || this.state.strict ? 0 : 8));\n  }\n  parseStatementOrSloppyAnnexBFunctionDeclaration(allowLabeledFunction = false) {\n    let flags = 0;\n    if (this.options.annexB && !this.state.strict) {\n      flags |= 4;\n      if (allowLabeledFunction) {\n        flags |= 8;\n      }\n    }\n    return this.parseStatementLike(flags);\n  }\n  parseStatement() {\n    return this.parseStatementLike(0);\n  }\n  parseStatementLike(flags) {\n    let decorators = null;\n    if (this.match(26)) {\n      decorators = this.parseDecorators(true);\n    }\n    return this.parseStatementContent(flags, decorators);\n  }\n  parseStatementContent(flags, decorators) {\n    const starttype = this.state.type;\n    const node = this.startNode();\n    const allowDeclaration = !!(flags & 2);\n    const allowFunctionDeclaration = !!(flags & 4);\n    const topLevel = flags & 1;\n    switch (starttype) {\n      case 60:\n        return this.parseBreakContinueStatement(node, true);\n      case 63:\n        return this.parseBreakContinueStatement(node, false);\n      case 64:\n        return this.parseDebuggerStatement(node);\n      case 90:\n        return this.parseDoWhileStatement(node);\n      case 91:\n        return this.parseForStatement(node);\n      case 68:\n        if (this.lookaheadCharCode() === 46) break;\n        if (!allowFunctionDeclaration) {\n          this.raise(this.state.strict ? Errors.StrictFunction : this.options.annexB ? Errors.SloppyFunctionAnnexB : Errors.SloppyFunction, this.state.startLoc);\n        }\n        return this.parseFunctionStatement(node, false, !allowDeclaration && allowFunctionDeclaration);\n      case 80:\n        if (!allowDeclaration) this.unexpected();\n        return this.parseClass(this.maybeTakeDecorators(decorators, node), true);\n      case 69:\n        return this.parseIfStatement(node);\n      case 70:\n        return this.parseReturnStatement(node);\n      case 71:\n        return this.parseSwitchStatement(node);\n      case 72:\n        return this.parseThrowStatement(node);\n      case 73:\n        return this.parseTryStatement(node);\n      case 96:\n        if (!this.state.containsEsc && this.startsAwaitUsing()) {\n          if (!this.isAwaitAllowed()) {\n            this.raise(Errors.AwaitUsingNotInAsyncContext, node);\n          } else if (!allowDeclaration) {\n            this.raise(Errors.UnexpectedLexicalDeclaration, node);\n          }\n          this.next();\n          return this.parseVarStatement(node, \"await using\");\n        }\n        break;\n      case 107:\n        if (this.state.containsEsc || !this.hasInLineFollowingBindingIdentifier()) {\n          break;\n        }\n        this.expectPlugin(\"explicitResourceManagement\");\n        if (!this.scope.inModule && this.scope.inTopLevel) {\n          this.raise(Errors.UnexpectedUsingDeclaration, this.state.startLoc);\n        } else if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, this.state.startLoc);\n        }\n        return this.parseVarStatement(node, \"using\");\n      case 100:\n        {\n          if (this.state.containsEsc) {\n            break;\n          }\n          const next = this.nextTokenStart();\n          const nextCh = this.codePointAtPos(next);\n          if (nextCh !== 91) {\n            if (!allowDeclaration && this.hasFollowingLineBreak()) break;\n            if (!this.chStartsBindingIdentifier(nextCh, next) && nextCh !== 123) {\n              break;\n            }\n          }\n        }\n      case 75:\n        {\n          if (!allowDeclaration) {\n            this.raise(Errors.UnexpectedLexicalDeclaration, this.state.startLoc);\n          }\n        }\n      case 74:\n        {\n          const kind = this.state.value;\n          return this.parseVarStatement(node, kind);\n        }\n      case 92:\n        return this.parseWhileStatement(node);\n      case 76:\n        return this.parseWithStatement(node);\n      case 5:\n        return this.parseBlock();\n      case 13:\n        return this.parseEmptyStatement(node);\n      case 83:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n      case 82:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(Errors.UnexpectedImportExport, this.state.startLoc);\n          }\n          this.next();\n          let result;\n          if (starttype === 83) {\n            result = this.parseImport(node);\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node, decorators);\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n          this.assertModuleNodeAllowed(result);\n          return result;\n        }\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (!allowDeclaration) {\n              this.raise(Errors.AsyncFunctionInSingleStatementContext, this.state.startLoc);\n            }\n            this.next();\n            return this.parseFunctionStatement(node, true, !allowDeclaration && allowFunctionDeclaration);\n          }\n        }\n    }\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n    if (tokenIsIdentifier(starttype) && expr.type === \"Identifier\" && this.eat(14)) {\n      return this.parseLabeledStatement(node, maybeName, expr, flags);\n    } else {\n      return this.parseExpressionStatement(node, expr, decorators);\n    }\n  }\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, node);\n    }\n  }\n  decoratorsEnabledBeforeExport() {\n    if (this.hasPlugin(\"decorators-legacy\")) return true;\n    return this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== false;\n  }\n  maybeTakeDecorators(maybeDecorators, classNode, exportNode) {\n    if (maybeDecorators) {\n      if (classNode.decorators && classNode.decorators.length > 0) {\n        if (typeof this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== \"boolean\") {\n          this.raise(Errors.DecoratorsBeforeAfterExport, classNode.decorators[0]);\n        }\n        classNode.decorators.unshift(...maybeDecorators);\n      } else {\n        classNode.decorators = maybeDecorators;\n      }\n      this.resetStartLocationFromNode(classNode, maybeDecorators[0]);\n      if (exportNode) this.resetStartLocationFromNode(exportNode, classNode);\n    }\n    return classNode;\n  }\n  canHaveLeadingDecorator() {\n    return this.match(80);\n  }\n  parseDecorators(allowExport) {\n    const decorators = [];\n    do {\n      decorators.push(this.parseDecorator());\n    } while (this.match(26));\n    if (this.match(82)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n      if (!this.decoratorsEnabledBeforeExport()) {\n        this.raise(Errors.DecoratorExportClass, this.state.startLoc);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, this.state.startLoc);\n    }\n    return decorators;\n  }\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n    const node = this.startNode();\n    this.next();\n    if (this.hasPlugin(\"decorators\")) {\n      const startLoc = this.state.startLoc;\n      let expr;\n      if (this.match(10)) {\n        const startLoc = this.state.startLoc;\n        this.next();\n        expr = this.parseExpression();\n        this.expect(11);\n        expr = this.wrapParenthesis(startLoc, expr);\n        const paramsStartLoc = this.state.startLoc;\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        if (this.getPluginOption(\"decorators\", \"allowCallParenthesized\") === false && node.expression !== expr) {\n          this.raise(Errors.DecoratorArgumentsOutsideParentheses, paramsStartLoc);\n        }\n      } else {\n        expr = this.parseIdentifier(false);\n        while (this.eat(16)) {\n          const node = this.startNodeAt(startLoc);\n          node.object = expr;\n          if (this.match(138)) {\n            this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n            node.property = this.parsePrivateName();\n          } else {\n            node.property = this.parseIdentifier(true);\n          }\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n      }\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(10)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n    return expr;\n  }\n  parseBreakContinueStatement(node, isBreak) {\n    this.next();\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n    this.verifyBreakContinue(node, isBreak);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n  verifyBreakContinue(node, isBreak) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === 1)) {\n          break;\n        }\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, node, {\n        type\n      });\n    }\n  }\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n  parseHeaderExpression() {\n    this.expect(10);\n    const val = this.parseExpression();\n    this.expect(11);\n    return val;\n  }\n  parseDoWhileStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.state.labels.pop();\n    this.expect(92);\n    node.test = this.parseHeaderExpression();\n    this.eat(13);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = null;\n    if (this.isAwaitAllowed() && this.eatContextual(96)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(0);\n    this.expect(10);\n    if (this.match(13)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n    const startsWithLet = this.isContextual(100);\n    {\n      const startsWithAwaitUsing = this.isContextual(96) && this.startsAwaitUsing();\n      const starsWithUsingDeclaration = startsWithAwaitUsing || this.isContextual(107) && this.startsUsingForOf();\n      const isLetOrUsing = startsWithLet && this.hasFollowingBindingAtom() || starsWithUsingDeclaration;\n      if (this.match(74) || this.match(75) || isLetOrUsing) {\n        const initNode = this.startNode();\n        let kind;\n        if (startsWithAwaitUsing) {\n          kind = \"await using\";\n          if (!this.isAwaitAllowed()) {\n            this.raise(Errors.AwaitUsingNotInAsyncContext, this.state.startLoc);\n          }\n          this.next();\n        } else {\n          kind = this.state.value;\n        }\n        this.next();\n        this.parseVar(initNode, true, kind);\n        const init = this.finishNode(initNode, \"VariableDeclaration\");\n        const isForIn = this.match(58);\n        if (isForIn && starsWithUsingDeclaration) {\n          this.raise(Errors.ForInUsing, init);\n        }\n        if ((isForIn || this.isContextual(102)) && init.declarations.length === 1) {\n          return this.parseForIn(node, init, awaitAt);\n        }\n        if (awaitAt !== null) {\n          this.unexpected(awaitAt);\n        }\n        return this.parseFor(node, init);\n      }\n    }\n    const startsWithAsync = this.isContextual(95);\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(102);\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, init);\n      }\n      if (awaitAt === null && startsWithAsync && init.type === \"Identifier\") {\n        this.raise(Errors.ForOfAsync, init);\n      }\n    }\n    if (isForOf || this.match(58)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, {\n        in: {\n          type\n        }\n      });\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n  parseFunctionStatement(node, isAsync, isHangingDeclaration) {\n    this.next();\n    return this.parseFunction(node, 1 | (isHangingDeclaration ? 2 : 0) | (isAsync ? 8 : 0));\n  }\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatementOrSloppyAnnexBFunctionDeclaration();\n    node.alternate = this.eat(66) ? this.parseStatementOrSloppyAnnexBFunctionDeclaration() : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, this.state.startLoc);\n    }\n    this.next();\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(5);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(0);\n    let cur;\n    for (let sawDefault; !this.match(8);) {\n      if (this.match(61) || this.match(65)) {\n        const isCase = this.match(61);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, this.state.lastTokStartLoc);\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(14);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatementListItem());\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n  parseThrowStatement(node) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, this.state.lastTokEndLoc);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    this.scope.enter(this.options.annexB && param.type === \"Identifier\" ? 8 : 0);\n    this.checkLVal(param, {\n      in: {\n        type: \"CatchClause\"\n      },\n      binding: 9\n    });\n    return param;\n  }\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.match(62)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(10)) {\n        this.expect(10);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(11);\n      } else {\n        clause.param = null;\n        this.scope.enter(0);\n      }\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(67) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, node);\n    }\n    return this.finishNode(node, \"TryStatement\");\n  }\n  parseVarStatement(node, kind, allowMissingInitializer = false) {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, this.state.startLoc);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    return this.finishNode(node, \"WithStatement\");\n  }\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n  parseLabeledStatement(node, maybeName, expr, flags) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, expr, {\n          labelName: maybeName\n        });\n      }\n    }\n    const kind = tokenIsLoop(this.state.type) ? 1 : this.match(71) ? 2 : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = flags & 8 ? this.parseStatementOrSloppyAnnexBFunctionDeclaration(true) : this.parseStatement();\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(5);\n    if (createNewLexicalScope) {\n      this.scope.enter(0);\n    }\n    this.parseBlockBody(node, allowDirectives, false, 8, afterBlockParse);\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n    while (!this.match(end)) {\n      const stmt = topLevel ? this.parseModuleItem() : this.parseStatementListItem();\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n          continue;\n        }\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n    afterBlockParse == null || afterBlockParse.call(this, hasStrictModeDirective);\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n    this.next();\n  }\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(13) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(11) ? null : this.parseExpression();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(58);\n    this.next();\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || !this.options.annexB || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(Errors.ForInOfLoopInitializer, init, {\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\"\n      });\n    }\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, init, {\n        ancestor: {\n          type: \"ForStatement\"\n        }\n      });\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n  parseVar(node, isFor, kind, allowMissingInitializer = false) {\n    const declarations = node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(29) ? null : isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      if (decl.init === null && !allowMissingInitializer) {\n        if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(58) || this.isContextual(102)))) {\n          this.raise(Errors.DeclarationMissingInitializer, this.state.lastTokEndLoc, {\n            kind: \"destructuring\"\n          });\n        } else if (kind === \"const\" && !(this.match(58) || this.isContextual(102))) {\n          this.raise(Errors.DeclarationMissingInitializer, this.state.lastTokEndLoc, {\n            kind: \"const\"\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(12)) break;\n    }\n    return node;\n  }\n  parseVarId(decl, kind) {\n    const id = this.parseBindingAtom();\n    this.checkLVal(id, {\n      in: {\n        type: \"VariableDeclarator\"\n      },\n      binding: kind === \"var\" ? 5 : 8201\n    });\n    decl.id = id;\n  }\n  parseAsyncFunctionExpression(node) {\n    return this.parseFunction(node, 8);\n  }\n  parseFunction(node, flags = 0) {\n    const hangingDeclaration = flags & 2;\n    const isDeclaration = !!(flags & 1);\n    const requireId = isDeclaration && !(flags & 4);\n    const isAsync = !!(flags & 8);\n    this.initFunction(node, isAsync);\n    if (this.match(55)) {\n      if (hangingDeclaration) {\n        this.raise(Errors.GeneratorInSingleStatementContext, this.state.startLoc);\n      }\n      this.next();\n      node.generator = true;\n    }\n    if (isDeclaration) {\n      node.id = this.parseFunctionId(requireId);\n    }\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(2);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    if (!isDeclaration) {\n      node.id = this.parseFunctionId();\n    }\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isDeclaration ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n    if (isDeclaration && !hangingDeclaration) {\n      this.registerFunctionStatementId(node);\n    }\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n  parseFunctionId(requireId) {\n    return requireId || tokenIsIdentifier(this.state.type) ? this.parseIdentifier() : null;\n  }\n  parseFunctionParams(node, isConstructor) {\n    this.expect(10);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(11, 41, 2 | (isConstructor ? 4 : 0));\n    this.expressionScope.exit();\n  }\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, !this.options.annexB || this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? 5 : 8201 : 17, node.id.loc.start);\n  }\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n  isClassProperty() {\n    return this.match(29) || this.match(13) || this.match(8);\n  }\n  isClassMethod() {\n    return this.match(10);\n  }\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(5);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(8)) {\n        if (this.eat(13)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, this.state.lastTokEndLoc);\n          }\n          continue;\n        }\n        if (this.match(26)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n        const member = this.startNode();\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n        this.parseClassMember(classBody, member, state);\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(Errors.DecoratorConstructor, member);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, this.state.startLoc);\n    }\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(106);\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n      if (this.eat(5)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const accessorProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n    if (this.eat(55)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(138);\n      this.parseClassElementName(method);\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, publicMethod.key);\n      }\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n    const isContextual = tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(138);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n    this.parsePostMemberNameModifiers(publicMember);\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, key);\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, key);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(55);\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n      method.kind = \"method\";\n      const isPrivate = this.match(138);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, publicMethod.key);\n        }\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(55) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(138);\n      this.parseClassElementName(publicMethod);\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, publicMethod.key);\n        }\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n      this.checkGetterSetterParams(publicMethod);\n    } else if (isContextual && key.name === \"accessor\" && !this.isLineTerminator()) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n      const isPrivate = this.match(138);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n  parseClassElementName(member) {\n    const {\n      type,\n      value\n    } = this.state;\n    if ((type === 132 || type === 133) && member.static && value === \"prototype\") {\n      this.raise(Errors.StaticPrototype, this.state.startLoc);\n    }\n    if (type === 138) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, this.state.startLoc);\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n    return this.parsePropertyName(member);\n  }\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n    this.scope.enter(64 | 128 | 16);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(0);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, 8);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(Errors.DecoratorStaticBlock, member);\n    }\n  }\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(Errors.ConstructorClassField, prop.key);\n    }\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), 0, node.key.loc.start);\n  }\n  pushClassAccessorProperty(classBody, prop, isPrivate) {\n    if (!isPrivate && !prop.computed) {\n      const key = prop.key;\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        this.raise(Errors.ConstructorClassField, key);\n      }\n    }\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n    if (isPrivate) {\n      this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), 0, node.key.loc.start);\n    }\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? 6 : 2 : node.kind === \"set\" ? node.static ? 5 : 1 : 0;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n  declareClassPrivateMethodInScope(node, kind) {\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.loc.start);\n  }\n  parsePostMemberNameModifiers(methodOrProp) {}\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n  parseClassAccessorProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n  parseInitializer(node) {\n    this.scope.enter(64 | 16);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(0);\n    node.value = this.eat(29) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n  parseClassId(node, isStatement, optionalId, bindingType = 8331) {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, this.state.startLoc);\n      }\n    }\n  }\n  parseClassSuper(node) {\n    node.superClass = this.eat(81) ? this.parseExprSubscripts() : null;\n  }\n  parseExport(node, decorators) {\n    const maybeDefaultIdentifier = this.parseMaybeImportPhase(node, true);\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node, maybeDefaultIdentifier);\n    const parseAfterDefault = !hasDefault || this.eat(12);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(12));\n    const isFromRequired = hasDefault || hasStar;\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, node);\n      }\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) {\n      this.unexpected(null, 5);\n    }\n    if (hasNamespace && parseAfterNamespace) {\n      this.unexpected(null, 98);\n    }\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, node);\n      }\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      var _node2$declaration;\n      const node2 = node;\n      this.checkExport(node2, true, false, !!node2.source);\n      if (((_node2$declaration = node2.declaration) == null ? void 0 : _node2$declaration.type) === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, node2.declaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, node);\n      }\n      return this.finishNode(node2, \"ExportNamedDeclaration\");\n    }\n    if (this.eat(65)) {\n      const node2 = node;\n      const decl = this.parseExportDefaultExpression();\n      node2.declaration = decl;\n      if (decl.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, decl, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, node);\n      }\n      this.checkExport(node2, true, true);\n      return this.finishNode(node2, \"ExportDefaultDeclaration\");\n    }\n    this.unexpected(null, 5);\n  }\n  eatExportStar(node) {\n    return this.eat(55);\n  }\n  maybeParseExportDefaultSpecifier(node, maybeDefaultIdentifier) {\n    if (maybeDefaultIdentifier || this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\", maybeDefaultIdentifier == null ? void 0 : maybeDefaultIdentifier.loc.start);\n      const id = maybeDefaultIdentifier || this.parseIdentifier(true);\n      const specifier = this.startNodeAtNode(id);\n      specifier.exported = id;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(93)) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(5)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n  isAsyncFunction() {\n    if (!this.isContextual(95)) return false;\n    const next = this.nextTokenInLineStart();\n    return this.isUnparsedContextual(next, \"function\");\n  }\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    if (this.match(68)) {\n      this.next();\n      return this.parseFunction(expr, 1 | 4);\n    } else if (this.isAsyncFunction()) {\n      this.next();\n      this.next();\n      return this.parseFunction(expr, 1 | 4 | 8);\n    }\n    if (this.match(80)) {\n      return this.parseClass(expr, true, true);\n    }\n    if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true) {\n        this.raise(Errors.DecoratorBeforeExport, this.state.startLoc);\n      }\n      return this.parseClass(this.maybeTakeDecorators(this.parseDecorators(false), this.startNode()), true, true);\n    }\n    if (this.match(75) || this.match(74) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, this.state.startLoc);\n    }\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n  parseExportDeclaration(node) {\n    if (this.match(80)) {\n      const node = this.parseClass(this.startNode(), true, false);\n      return node;\n    }\n    return this.parseStatementListItem();\n  }\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if (type === 95 && !this.state.containsEsc || type === 100) {\n        return false;\n      }\n      if ((type === 130 || type === 129) && !this.state.containsEsc) {\n        const {\n          type: nextType\n        } = this.lookahead();\n        if (tokenIsIdentifier(nextType) && nextType !== 98 || nextType === 5) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(65)) {\n      return false;\n    }\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (this.input.charCodeAt(next) === 44 || tokenIsIdentifier(this.state.type) && hasFrom) {\n      return true;\n    }\n    if (this.match(65) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n    return false;\n  }\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(98)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      this.maybeParseImportAttributes(node);\n      this.checkJSONModuleImport(node);\n    } else if (expect) {\n      this.unexpected();\n    }\n    this.semicolon();\n  }\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n    if (type === 26) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true) {\n          this.raise(Errors.DecoratorBeforeExport, this.state.startLoc);\n        }\n        return true;\n      }\n    }\n    return type === 74 || type === 75 || type === 68 || type === 80 || this.isLet() || this.isAsyncFunction();\n  }\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      var _node$specifiers;\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n          const declaration = node.declaration;\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, declaration);\n          }\n        }\n      } else if ((_node$specifiers = node.specifiers) != null && _node$specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, specifier, {\n                localName: local.value,\n                exportName\n              });\n            } else {\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n  }\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n  checkDuplicateExports(node, exportName) {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, node);\n      } else {\n        this.raise(Errors.DuplicateExport, node, {\n          exportName\n        });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n  parseExportSpecifiers(isInTypeExport) {\n    const nodes = [];\n    let first = true;\n    this.expect(5);\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(130);\n      const isString = this.match(133);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(this.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly));\n    }\n    return nodes;\n  }\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (this.eatContextual(93)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode(node, \"ExportSpecifier\");\n  }\n  parseModuleExportName() {\n    if (this.match(133)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, result, {\n          surrogateCharCode: surrogate[0].charCodeAt(0)\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n  isJSONModuleImport(node) {\n    if (node.assertions != null) {\n      return node.assertions.some(({\n        key,\n        value\n      }) => {\n        return value.value === \"json\" && (key.type === \"Identifier\" ? key.name === \"type\" : key.value === \"type\");\n      });\n    }\n    return false;\n  }\n  checkImportReflection(node) {\n    const {\n      specifiers\n    } = node;\n    const singleBindingType = specifiers.length === 1 ? specifiers[0].type : null;\n    if (node.phase === \"source\") {\n      if (singleBindingType !== \"ImportDefaultSpecifier\") {\n        this.raise(Errors.SourcePhaseImportRequiresDefault, specifiers[0].loc.start);\n      }\n    } else if (node.phase === \"defer\") {\n      if (singleBindingType !== \"ImportNamespaceSpecifier\") {\n        this.raise(Errors.DeferImportRequiresNamespace, specifiers[0].loc.start);\n      }\n    } else if (node.module) {\n      var _node$assertions;\n      if (singleBindingType !== \"ImportDefaultSpecifier\") {\n        this.raise(Errors.ImportReflectionNotBinding, specifiers[0].loc.start);\n      }\n      if (((_node$assertions = node.assertions) == null ? void 0 : _node$assertions.length) > 0) {\n        this.raise(Errors.ImportReflectionHasAssertion, specifiers[0].loc.start);\n      }\n    }\n  }\n  checkJSONModuleImport(node) {\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      const {\n        specifiers\n      } = node;\n      if (specifiers != null) {\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\" ? imported.name !== \"default\" : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, nonDefaultNamedSpecifier.loc.start);\n        }\n      }\n    }\n  }\n  isPotentialImportPhase(isExport) {\n    if (isExport) return false;\n    return this.isContextual(105) || this.isContextual(97) || this.isContextual(127);\n  }\n  applyImportPhase(node, isExport, phase, loc) {\n    if (isExport) {\n      return;\n    }\n    if (phase === \"module\") {\n      this.expectPlugin(\"importReflection\", loc);\n      node.module = true;\n    } else if (this.hasPlugin(\"importReflection\")) {\n      node.module = false;\n    }\n    if (phase === \"source\") {\n      this.expectPlugin(\"sourcePhaseImports\", loc);\n      node.phase = \"source\";\n    } else if (phase === \"defer\") {\n      this.expectPlugin(\"deferredImportEvaluation\", loc);\n      node.phase = \"defer\";\n    } else if (this.hasPlugin(\"sourcePhaseImports\")) {\n      node.phase = null;\n    }\n  }\n  parseMaybeImportPhase(node, isExport) {\n    if (!this.isPotentialImportPhase(isExport)) {\n      this.applyImportPhase(node, isExport, null);\n      return null;\n    }\n    const phaseIdentifier = this.parseIdentifier(true);\n    const {\n      type\n    } = this.state;\n    const isImportPhase = tokenIsKeywordOrIdentifier(type) ? type !== 98 || this.lookaheadCharCode() === 102 : type !== 12;\n    if (isImportPhase) {\n      this.resetPreviousIdentifierLeadingComments(phaseIdentifier);\n      this.applyImportPhase(node, isExport, phaseIdentifier.name, phaseIdentifier.loc.start);\n      return null;\n    } else {\n      this.applyImportPhase(node, isExport, null);\n      return phaseIdentifier;\n    }\n  }\n  isPrecedingIdImportPhase(phase) {\n    const {\n      type\n    } = this.state;\n    return tokenIsIdentifier(type) ? type !== 98 || this.lookaheadCharCode() === 102 : type !== 12;\n  }\n  parseImport(node) {\n    if (this.match(133)) {\n      return this.parseImportSourceAndAttributes(node);\n    }\n    return this.parseImportSpecifiersAndAfter(node, this.parseMaybeImportPhase(node, false));\n  }\n  parseImportSpecifiersAndAfter(node, maybeDefaultIdentifier) {\n    node.specifiers = [];\n    const hasDefault = this.maybeParseDefaultImportSpecifier(node, maybeDefaultIdentifier);\n    const parseNext = !hasDefault || this.eat(12);\n    const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n    if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n    this.expectContextual(98);\n    return this.parseImportSourceAndAttributes(node);\n  }\n  parseImportSourceAndAttributes(node) {\n    var _node$specifiers2;\n    (_node$specifiers2 = node.specifiers) != null ? _node$specifiers2 : node.specifiers = [];\n    node.source = this.parseImportSource();\n    this.maybeParseImportAttributes(node);\n    this.checkImportReflection(node);\n    this.checkJSONModuleImport(node);\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n  parseImportSource() {\n    if (!this.match(133)) this.unexpected();\n    return this.parseExprAtom();\n  }\n  parseImportSpecifierLocal(node, specifier, type) {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n  finishImportSpecifier(specifier, type, bindingType = 8201) {\n    this.checkLVal(specifier.local, {\n      in: {\n        type\n      },\n      binding: bindingType\n    });\n    return this.finishNode(specifier, type);\n  }\n  parseImportAttributes() {\n    this.expect(5);\n    const attrs = [];\n    const attrNames = new Set();\n    do {\n      if (this.match(8)) {\n        break;\n      }\n      const node = this.startNode();\n      const keyName = this.state.value;\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, this.state.startLoc, {\n          key: keyName\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(133)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(14);\n      if (!this.match(133)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, this.state.startLoc);\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(12));\n    this.expect(8);\n    return attrs;\n  }\n  parseModuleAttributes() {\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, node.key);\n      }\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, node.key, {\n          key: node.key.name\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(14);\n      if (!this.match(133)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, this.state.startLoc);\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(12));\n    return attrs;\n  }\n  maybeParseImportAttributes(node) {\n    let attributes;\n    let useWith = false;\n    if (this.match(76)) {\n      if (this.hasPrecedingLineBreak() && this.lookaheadCharCode() === 40) {\n        return;\n      }\n      this.next();\n      {\n        if (this.hasPlugin(\"moduleAttributes\")) {\n          attributes = this.parseModuleAttributes();\n        } else {\n          this.expectImportAttributesPlugin();\n          attributes = this.parseImportAttributes();\n        }\n      }\n      useWith = true;\n    } else if (this.isContextual(94) && !this.hasPrecedingLineBreak()) {\n      if (this.hasPlugin(\"importAttributes\")) {\n        if (this.getPluginOption(\"importAttributes\", \"deprecatedAssertSyntax\") !== true) {\n          this.raise(Errors.ImportAttributesUseAssert, this.state.startLoc);\n        }\n        this.addExtra(node, \"deprecatedAssertSyntax\", true);\n      } else {\n        this.expectOnePlugin([\"importAttributes\", \"importAssertions\"]);\n      }\n      this.next();\n      attributes = this.parseImportAttributes();\n    } else if (this.hasPlugin(\"importAttributes\") || this.hasPlugin(\"importAssertions\")) {\n      attributes = [];\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) {\n        attributes = [];\n      } else return;\n    }\n    if (!useWith && this.hasPlugin(\"importAssertions\")) {\n      node.assertions = attributes;\n    } else {\n      node.attributes = attributes;\n    }\n  }\n  maybeParseDefaultImportSpecifier(node, maybeDefaultIdentifier) {\n    if (maybeDefaultIdentifier) {\n      const specifier = this.startNodeAtNode(maybeDefaultIdentifier);\n      specifier.local = maybeDefaultIdentifier;\n      node.specifiers.push(this.finishImportSpecifier(specifier, \"ImportDefaultSpecifier\"));\n      return true;\n    } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\");\n      return true;\n    }\n    return false;\n  }\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(55)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(93);\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\");\n      return true;\n    }\n    return false;\n  }\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(5);\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(14)) {\n          throw this.raise(Errors.DestructureNamedImport, this.state.startLoc);\n        }\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n      const specifier = this.startNode();\n      const importedIsString = this.match(133);\n      const isMaybeTypeOnly = this.isContextual(130);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(specifier, importedIsString, node.importKind === \"type\" || node.importKind === \"typeof\", isMaybeTypeOnly, undefined);\n      node.specifiers.push(importSpecifier);\n    }\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    if (this.eatContextual(93)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, specifier, {\n          importName: imported.value\n        });\n      }\n      this.checkReservedWord(imported.name, specifier.loc.start, true, true);\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\", bindingType);\n  }\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\nlet Parser$2 = class Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    file.comments.length = this.state.commentsLen;\n    return file;\n  }\n};\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\nfunction parse$9(input, options) {\n  var _options;\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\nfunction generateExportedTokenTypes(internalTokenTypes) {\n  const tokenTypes = {};\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\nconst tokTypes = generateExportedTokenTypes(tt);\nfunction getParser(options, input) {\n  let cls = Parser$2;\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n  return new cls(options, input);\n}\nconst parserClassCache = {};\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser$2;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\nvar parse_1$1 = lib.parse = parse$9;\nvar parseExpression_1 = lib.parseExpression = parseExpression;\nlib.tokTypes = tokTypes;\n\n// @ts-check\n/** @typedef { import('estree').BaseNode} BaseNode */\n\n/** @typedef {{\n\tskip: () => void;\n\tremove: () => void;\n\treplace: (node: BaseNode) => void;\n}} WalkerContext */\n\nclass WalkerBase {\n\tconstructor() {\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {BaseNode | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\t}\n\n\t/**\n\t *\n\t * @param {any} parent\n\t * @param {string} prop\n\t * @param {number} index\n\t * @param {BaseNode} node\n\t */\n\treplace(parent, prop, index, node) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop][index] = node;\n\t\t\t} else {\n\t\t\t\tparent[prop] = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {any} parent\n\t * @param {string} prop\n\t * @param {number} index\n\t */\n\tremove(parent, prop, index) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop].splice(index, 1);\n\t\t\t} else {\n\t\t\t\tdelete parent[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n\n// @ts-check\n\n/** @typedef { import('estree').BaseNode} BaseNode */\n/** @typedef { import('./walker.js').WalkerContext} WalkerContext */\n\n/** @typedef {(\n *    this: WalkerContext,\n *    node: BaseNode,\n *    parent: BaseNode,\n *    key: string,\n *    index: number\n * ) => void} SyncHandler */\n\nclass SyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {SyncHandler} enter\n\t * @param {SyncHandler} leave\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {SyncHandler} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {SyncHandler} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t *\n\t * @param {BaseNode} node\n\t * @param {BaseNode} parent\n\t * @param {string} [prop]\n\t * @param {number} [index]\n\t * @returns {BaseNode}\n\t */\n\tvisit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\tfor (const key in node) {\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\tif (!this.visit(value[i], node, key, i)) {\n\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n// @ts-check\n\n/** @typedef { import('estree').BaseNode} BaseNode */\n/** @typedef { import('./sync.js').SyncHandler} SyncHandler */\n/** @typedef { import('./async.js').AsyncHandler} AsyncHandler */\n\n/**\n *\n * @param {BaseNode} ast\n * @param {{\n *   enter?: SyncHandler\n *   leave?: SyncHandler\n * }} walker\n * @returns {BaseNode}\n */\nfunction walk$2(ast, { enter, leave }) {\n\tconst instance = new SyncWalker(enter, leave);\n\treturn instance.visit(ast, null);\n}\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = /* @__PURE__ */ Object.create(null)) {\n  const rootExp = root.type === \"Program\" ? root.body[0].type === \"ExpressionStatement\" && root.body[0].expression : root;\n  walk$2(root, {\n    enter(node, parent) {\n      parent && parentStack.push(parent);\n      if (parent && parent.type.startsWith(\"TS\") && !TS_NODE_TYPES.includes(parent.type)) {\n        return this.skip();\n      }\n      if (node.type === \"Identifier\") {\n        const isLocal = !!knownIds[node.name];\n        const isRefed = isReferencedIdentifier(node, parent, parentStack);\n        if (includeAll || isRefed && !isLocal) {\n          onIdentifier(node, parent, parentStack, isRefed, isLocal);\n        }\n      } else if (node.type === \"ObjectProperty\" && (parent == null ? void 0 : parent.type) === \"ObjectPattern\") {\n        node.inPattern = true;\n      } else if (isFunctionType(node)) {\n        if (node.scopeIds) {\n          node.scopeIds.forEach((id) => markKnownIds(id, knownIds));\n        } else {\n          walkFunctionParams(\n            node,\n            (id) => markScopeIdentifier(node, id, knownIds)\n          );\n        }\n      } else if (node.type === \"BlockStatement\") {\n        if (node.scopeIds) {\n          node.scopeIds.forEach((id) => markKnownIds(id, knownIds));\n        } else {\n          walkBlockDeclarations(\n            node,\n            (id) => markScopeIdentifier(node, id, knownIds)\n          );\n        }\n      }\n    },\n    leave(node, parent) {\n      parent && parentStack.pop();\n      if (node !== rootExp && node.scopeIds) {\n        for (const id of node.scopeIds) {\n          knownIds[id]--;\n          if (knownIds[id] === 0) {\n            delete knownIds[id];\n          }\n        }\n      }\n    }\n  });\n}\nfunction isReferencedIdentifier(id, parent, parentStack) {\n  if (!parent) {\n    return true;\n  }\n  if (id.name === \"arguments\") {\n    return false;\n  }\n  if (isReferenced(id, parent)) {\n    return true;\n  }\n  switch (parent.type) {\n    case \"AssignmentExpression\":\n    case \"AssignmentPattern\":\n      return true;\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return isInDestructureAssignment(parent, parentStack);\n  }\n  return false;\n}\nfunction isInDestructureAssignment(parent, parentStack) {\n  if (parent && (parent.type === \"ObjectProperty\" || parent.type === \"ArrayPattern\")) {\n    let i = parentStack.length;\n    while (i--) {\n      const p = parentStack[i];\n      if (p.type === \"AssignmentExpression\") {\n        return true;\n      } else if (p.type !== \"ObjectProperty\" && !p.type.endsWith(\"Pattern\")) {\n        break;\n      }\n    }\n  }\n  return false;\n}\nfunction isInNewExpression(parentStack) {\n  let i = parentStack.length;\n  while (i--) {\n    const p = parentStack[i];\n    if (p.type === \"NewExpression\") {\n      return true;\n    } else if (p.type !== \"MemberExpression\") {\n      break;\n    }\n  }\n  return false;\n}\nfunction walkFunctionParams(node, onIdent) {\n  for (const p of node.params) {\n    for (const id of extractIdentifiers$1(p)) {\n      onIdent(id);\n    }\n  }\n}\nfunction walkBlockDeclarations(block, onIdent) {\n  for (const stmt of block.body) {\n    if (stmt.type === \"VariableDeclaration\") {\n      if (stmt.declare)\n        continue;\n      for (const decl of stmt.declarations) {\n        for (const id of extractIdentifiers$1(decl.id)) {\n          onIdent(id);\n        }\n      }\n    } else if (stmt.type === \"FunctionDeclaration\" || stmt.type === \"ClassDeclaration\") {\n      if (stmt.declare || !stmt.id)\n        continue;\n      onIdent(stmt.id);\n    } else if (stmt.type === \"ForOfStatement\" || stmt.type === \"ForInStatement\" || stmt.type === \"ForStatement\") {\n      const variable = stmt.type === \"ForStatement\" ? stmt.init : stmt.left;\n      if (variable && variable.type === \"VariableDeclaration\") {\n        for (const decl of variable.declarations) {\n          for (const id of extractIdentifiers$1(decl.id)) {\n            onIdent(id);\n          }\n        }\n      }\n    }\n  }\n}\nfunction extractIdentifiers$1(param, nodes = []) {\n  switch (param.type) {\n    case \"Identifier\":\n      nodes.push(param);\n      break;\n    case \"MemberExpression\":\n      let object = param;\n      while (object.type === \"MemberExpression\") {\n        object = object.object;\n      }\n      nodes.push(object);\n      break;\n    case \"ObjectPattern\":\n      for (const prop of param.properties) {\n        if (prop.type === \"RestElement\") {\n          extractIdentifiers$1(prop.argument, nodes);\n        } else {\n          extractIdentifiers$1(prop.value, nodes);\n        }\n      }\n      break;\n    case \"ArrayPattern\":\n      param.elements.forEach((element) => {\n        if (element)\n          extractIdentifiers$1(element, nodes);\n      });\n      break;\n    case \"RestElement\":\n      extractIdentifiers$1(param.argument, nodes);\n      break;\n    case \"AssignmentPattern\":\n      extractIdentifiers$1(param.left, nodes);\n      break;\n  }\n  return nodes;\n}\nfunction markKnownIds(name, knownIds) {\n  if (name in knownIds) {\n    knownIds[name]++;\n  } else {\n    knownIds[name] = 1;\n  }\n}\nfunction markScopeIdentifier(node, child, knownIds) {\n  const { name } = child;\n  if (node.scopeIds && node.scopeIds.has(name)) {\n    return;\n  }\n  markKnownIds(name, knownIds);\n  (node.scopeIds || (node.scopeIds = /* @__PURE__ */ new Set())).add(name);\n}\nconst isFunctionType = (node) => {\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n};\nconst isStaticProperty = (node) => node && (node.type === \"ObjectProperty\" || node.type === \"ObjectMethod\") && !node.computed;\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\nfunction isReferenced(node, parent, grandparent) {\n  switch (parent.type) {\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n      if (parent.property === node) {\n        return !!parent.computed;\n      }\n      return parent.object === node;\n    case \"JSXMemberExpression\":\n      return parent.object === node;\n    case \"VariableDeclarator\":\n      return parent.init === node;\n    case \"ArrowFunctionExpression\":\n      return parent.body === node;\n    case \"PrivateName\":\n      return false;\n    case \"ClassMethod\":\n    case \"ClassPrivateMethod\":\n    case \"ObjectMethod\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return false;\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return !grandparent || grandparent.type !== \"ObjectPattern\";\n    case \"ClassProperty\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n    case \"ClassPrivateProperty\":\n      return parent.key !== node;\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.superClass === node;\n    case \"AssignmentExpression\":\n      return parent.right === node;\n    case \"AssignmentPattern\":\n      return parent.right === node;\n    case \"LabeledStatement\":\n      return false;\n    case \"CatchClause\":\n      return false;\n    case \"RestElement\":\n      return false;\n    case \"BreakStatement\":\n    case \"ContinueStatement\":\n      return false;\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      return false;\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n    case \"ExportSpecifier\":\n      if (grandparent == null ? void 0 : grandparent.source) {\n        return false;\n      }\n      return parent.local === node;\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n    case \"ImportAttribute\":\n      return false;\n    case \"JSXAttribute\":\n      return false;\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n    case \"MetaProperty\":\n      return false;\n    case \"ObjectTypeProperty\":\n      return parent.key !== node;\n    case \"TSEnumMember\":\n      return parent.id !== node;\n    case \"TSPropertySignature\":\n      if (parent.key === node) {\n        return !!parent.computed;\n      }\n      return true;\n  }\n  return true;\n}\nconst TS_NODE_TYPES = [\n  \"TSAsExpression\",\n  // foo as number\n  \"TSTypeAssertion\",\n  // (<number>foo)\n  \"TSNonNullExpression\",\n  // foo!\n  \"TSInstantiationExpression\",\n  // foo<string>\n  \"TSSatisfiesExpression\"\n  // foo satisfies T\n];\nfunction unwrapTSNode(node) {\n  if (TS_NODE_TYPES.includes(node.type)) {\n    return unwrapTSNode(node.expression);\n  } else {\n    return node;\n  }\n}\n\nconst isStaticExp = (p) => p.type === 4 && p.isStatic;\nfunction isCoreComponent(tag) {\n  switch (tag) {\n    case \"Teleport\":\n    case \"teleport\":\n      return TELEPORT;\n    case \"Suspense\":\n    case \"suspense\":\n      return SUSPENSE;\n    case \"KeepAlive\":\n    case \"keep-alive\":\n      return KEEP_ALIVE;\n    case \"BaseTransition\":\n    case \"base-transition\":\n      return BASE_TRANSITION;\n  }\n}\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\nconst isMemberExpressionBrowser = (path) => {\n  path = path.trim().replace(whitespaceRE, (s) => s.trim());\n  let state = 0 /* inMemberExp */;\n  let stateStack = [];\n  let currentOpenBracketCount = 0;\n  let currentOpenParensCount = 0;\n  let currentStringType = null;\n  for (let i = 0; i < path.length; i++) {\n    const char = path.charAt(i);\n    switch (state) {\n      case 0 /* inMemberExp */:\n        if (char === \"[\") {\n          stateStack.push(state);\n          state = 1 /* inBrackets */;\n          currentOpenBracketCount++;\n        } else if (char === \"(\") {\n          stateStack.push(state);\n          state = 2 /* inParens */;\n          currentOpenParensCount++;\n        } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\n          return false;\n        }\n        break;\n      case 1 /* inBrackets */:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3 /* inString */;\n          currentStringType = char;\n        } else if (char === `[`) {\n          currentOpenBracketCount++;\n        } else if (char === `]`) {\n          if (!--currentOpenBracketCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 2 /* inParens */:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3 /* inString */;\n          currentStringType = char;\n        } else if (char === `(`) {\n          currentOpenParensCount++;\n        } else if (char === `)`) {\n          if (i === path.length - 1) {\n            return false;\n          }\n          if (!--currentOpenParensCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 3 /* inString */:\n        if (char === currentStringType) {\n          state = stateStack.pop();\n          currentStringType = null;\n        }\n        break;\n    }\n  }\n  return !currentOpenBracketCount && !currentOpenParensCount;\n};\nconst isMemberExpressionNode = (path, context) => {\n  try {\n    let ret = parseExpression_1(path, {\n      plugins: context.expressionPlugins\n    });\n    ret = unwrapTSNode(ret);\n    return ret.type === \"MemberExpression\" || ret.type === \"OptionalMemberExpression\" || ret.type === \"Identifier\" && ret.name !== \"undefined\";\n  } catch (e) {\n    return false;\n  }\n};\nconst isMemberExpression = isMemberExpressionNode;\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\n  return advancePositionWithMutation(\n    {\n      offset: pos.offset,\n      line: pos.line,\n      column: pos.column\n    },\n    source,\n    numberOfCharacters\n  );\n}\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\n  let linesCount = 0;\n  let lastNewLinePos = -1;\n  for (let i = 0; i < numberOfCharacters; i++) {\n    if (source.charCodeAt(i) === 10) {\n      linesCount++;\n      lastNewLinePos = i;\n    }\n  }\n  pos.offset += numberOfCharacters;\n  pos.line += linesCount;\n  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;\n  return pos;\n}\nfunction assert(condition, msg) {\n  if (!condition) {\n    throw new Error(msg || `unexpected compiler condition`);\n  }\n}\nfunction findDir(node, name, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 7 && (allowEmpty || p.exp) && (isString$2(name) ? p.name === name : name.test(p.name))) {\n      return p;\n    }\n  }\n}\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (dynamicOnly)\n        continue;\n      if (p.name === name && (p.value || allowEmpty)) {\n        return p;\n      }\n    } else if (p.name === \"bind\" && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {\n      return p;\n    }\n  }\n}\nfunction isStaticArgOf(arg, name) {\n  return !!(arg && isStaticExp(arg) && arg.content === name);\n}\nfunction hasDynamicKeyVBind(node) {\n  return node.props.some(\n    (p) => p.type === 7 && p.name === \"bind\" && (!p.arg || // v-bind=\"obj\"\n    p.arg.type !== 4 || // v-bind:[_ctx.foo]\n    !p.arg.isStatic)\n    // v-bind:[foo]\n  );\n}\nfunction isText$1(node) {\n  return node.type === 5 || node.type === 2;\n}\nfunction isVSlot(p) {\n  return p.type === 7 && p.name === \"slot\";\n}\nfunction isTemplateNode(node) {\n  return node.type === 1 && node.tagType === 3;\n}\nfunction isSlotOutlet(node) {\n  return node.type === 1 && node.tagType === 2;\n}\nconst propsHelperSet = /* @__PURE__ */ new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getUnnormalizedProps(props, callPath = []) {\n  if (props && !isString$2(props) && props.type === 14) {\n    const callee = props.callee;\n    if (!isString$2(callee) && propsHelperSet.has(callee)) {\n      return getUnnormalizedProps(\n        props.arguments[0],\n        callPath.concat(props)\n      );\n    }\n  }\n  return [props, callPath];\n}\nfunction injectProp(node, prop, context) {\n  let propsWithInjection;\n  let props = node.type === 13 ? node.props : node.arguments[2];\n  let callPath = [];\n  let parentCall;\n  if (props && !isString$2(props) && props.type === 14) {\n    const ret = getUnnormalizedProps(props);\n    props = ret[0];\n    callPath = ret[1];\n    parentCall = callPath[callPath.length - 1];\n  }\n  if (props == null || isString$2(props)) {\n    propsWithInjection = createObjectExpression([prop]);\n  } else if (props.type === 14) {\n    const first = props.arguments[0];\n    if (!isString$2(first) && first.type === 15) {\n      if (!hasProp(prop, first)) {\n        first.properties.unshift(prop);\n      }\n    } else {\n      if (props.callee === TO_HANDLERS) {\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n          createObjectExpression([prop]),\n          props\n        ]);\n      } else {\n        props.arguments.unshift(createObjectExpression([prop]));\n      }\n    }\n    !propsWithInjection && (propsWithInjection = props);\n  } else if (props.type === 15) {\n    if (!hasProp(prop, props)) {\n      props.properties.unshift(prop);\n    }\n    propsWithInjection = props;\n  } else {\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n      createObjectExpression([prop]),\n      props\n    ]);\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n      parentCall = callPath[callPath.length - 2];\n    }\n  }\n  if (node.type === 13) {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.props = propsWithInjection;\n    }\n  } else {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.arguments[2] = propsWithInjection;\n    }\n  }\n}\nfunction hasProp(prop, props) {\n  let result = false;\n  if (prop.key.type === 4) {\n    const propKeyName = prop.key.content;\n    result = props.properties.some(\n      (p) => p.key.type === 4 && p.key.content === propKeyName\n    );\n  }\n  return result;\n}\nfunction toValidAssetId(name, type) {\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n    return searchValue === \"-\" ? \"_\" : name.charCodeAt(replaceValue).toString();\n  })}`;\n}\nfunction hasScopeRef(node, ids) {\n  if (!node || Object.keys(ids).length === 0) {\n    return false;\n  }\n  switch (node.type) {\n    case 1:\n      for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 7 && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\n          return true;\n        }\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 11:\n      if (hasScopeRef(node.source, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 9:\n      return node.branches.some((b) => hasScopeRef(b, ids));\n    case 10:\n      if (hasScopeRef(node.condition, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 4:\n      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];\n    case 8:\n      return node.children.some((c) => isObject$2(c) && hasScopeRef(c, ids));\n    case 5:\n    case 12:\n      return hasScopeRef(node.content, ids);\n    case 2:\n    case 3:\n      return false;\n    default:\n      return false;\n  }\n}\nfunction getMemoedVNodeCall(node) {\n  if (node.type === 14 && node.callee === WITH_MEMO) {\n    return node.arguments[1].returns;\n  } else {\n    return node;\n  }\n}\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n\nconst defaultParserOptions = {\n  parseMode: \"base\",\n  ns: 0,\n  delimiters: [`{{`, `}}`],\n  getNamespace: () => 0,\n  isVoidTag: NO,\n  isPreTag: NO,\n  isCustomElement: NO,\n  onError: defaultOnError,\n  onWarn: defaultOnWarn,\n  comments: true,\n  prefixIdentifiers: false\n};\nlet currentOptions = defaultParserOptions;\nlet currentRoot = null;\nlet currentInput = \"\";\nlet currentOpenTag = null;\nlet currentProp = null;\nlet currentAttrValue = \"\";\nlet currentAttrStartIndex = -1;\nlet currentAttrEndIndex = -1;\nlet inPre = 0;\nlet inVPre = false;\nlet currentVPreBoundary = null;\nconst stack = [];\nconst tokenizer$2 = new Tokenizer$1(stack, {\n  onerr: emitError,\n  ontext(start, end) {\n    onText(getSlice(start, end), start, end);\n  },\n  ontextentity(char, start, end) {\n    onText(char, start, end);\n  },\n  oninterpolation(start, end) {\n    if (inVPre) {\n      return onText(getSlice(start, end), start, end);\n    }\n    let innerStart = start + tokenizer$2.delimiterOpen.length;\n    let innerEnd = end - tokenizer$2.delimiterClose.length;\n    while (isWhitespace$1(currentInput.charCodeAt(innerStart))) {\n      innerStart++;\n    }\n    while (isWhitespace$1(currentInput.charCodeAt(innerEnd - 1))) {\n      innerEnd--;\n    }\n    let exp = getSlice(innerStart, innerEnd);\n    if (exp.includes(\"&\")) {\n      {\n        exp = decodeHTML(exp);\n      }\n    }\n    addNode({\n      type: 5,\n      content: createExp(exp, false, getLoc(innerStart, innerEnd)),\n      loc: getLoc(start, end)\n    });\n  },\n  onopentagname(start, end) {\n    const name = getSlice(start, end);\n    currentOpenTag = {\n      type: 1,\n      tag: name,\n      ns: currentOptions.getNamespace(name, stack[0], currentOptions.ns),\n      tagType: 0,\n      // will be refined on tag close\n      props: [],\n      children: [],\n      loc: getLoc(start - 1, end),\n      codegenNode: void 0\n    };\n  },\n  onopentagend(end) {\n    endOpenTag(end);\n  },\n  onclosetag(start, end) {\n    const name = getSlice(start, end);\n    if (!currentOptions.isVoidTag(name)) {\n      let found = false;\n      for (let i = 0; i < stack.length; i++) {\n        const e = stack[i];\n        if (e.tag.toLowerCase() === name.toLowerCase()) {\n          found = true;\n          if (i > 0) {\n            emitError(24, stack[0].loc.start.offset);\n          }\n          for (let j = 0; j <= i; j++) {\n            const el = stack.shift();\n            onCloseTag(el, end, j < i);\n          }\n          break;\n        }\n      }\n      if (!found) {\n        emitError(23, backTrack(start, 60));\n      }\n    }\n  },\n  onselfclosingtag(end) {\n    var _a;\n    const name = currentOpenTag.tag;\n    currentOpenTag.isSelfClosing = true;\n    endOpenTag(end);\n    if (((_a = stack[0]) == null ? void 0 : _a.tag) === name) {\n      onCloseTag(stack.shift(), end);\n    }\n  },\n  onattribname(start, end) {\n    currentProp = {\n      type: 6,\n      name: getSlice(start, end),\n      nameLoc: getLoc(start, end),\n      value: void 0,\n      loc: getLoc(start)\n    };\n  },\n  ondirname(start, end) {\n    const raw = getSlice(start, end);\n    const name = raw === \".\" || raw === \":\" ? \"bind\" : raw === \"@\" ? \"on\" : raw === \"#\" ? \"slot\" : raw.slice(2);\n    if (!inVPre && name === \"\") {\n      emitError(26, start);\n    }\n    if (inVPre || name === \"\") {\n      currentProp = {\n        type: 6,\n        name: raw,\n        nameLoc: getLoc(start, end),\n        value: void 0,\n        loc: getLoc(start)\n      };\n    } else {\n      currentProp = {\n        type: 7,\n        name,\n        rawName: raw,\n        exp: void 0,\n        arg: void 0,\n        modifiers: raw === \".\" ? [\"prop\"] : [],\n        loc: getLoc(start)\n      };\n      if (name === \"pre\") {\n        inVPre = tokenizer$2.inVPre = true;\n        currentVPreBoundary = currentOpenTag;\n        const props = currentOpenTag.props;\n        for (let i = 0; i < props.length; i++) {\n          if (props[i].type === 7) {\n            props[i] = dirToAttr(props[i]);\n          }\n        }\n      }\n    }\n  },\n  ondirarg(start, end) {\n    if (start === end)\n      return;\n    const arg = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += arg;\n      setLocEnd(currentProp.nameLoc, end);\n    } else {\n      const isStatic = arg[0] !== `[`;\n      currentProp.arg = createExp(\n        isStatic ? arg : arg.slice(1, -1),\n        isStatic,\n        getLoc(start, end),\n        isStatic ? 3 : 0\n      );\n    }\n  },\n  ondirmodifier(start, end) {\n    const mod = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += \".\" + mod;\n      setLocEnd(currentProp.nameLoc, end);\n    } else if (currentProp.name === \"slot\") {\n      const arg = currentProp.arg;\n      if (arg) {\n        arg.content += \".\" + mod;\n        setLocEnd(arg.loc, end);\n      }\n    } else {\n      currentProp.modifiers.push(mod);\n    }\n  },\n  onattribdata(start, end) {\n    currentAttrValue += getSlice(start, end);\n    if (currentAttrStartIndex < 0)\n      currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribentity(char, start, end) {\n    currentAttrValue += char;\n    if (currentAttrStartIndex < 0)\n      currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribnameend(end) {\n    const start = currentProp.loc.start.offset;\n    const name = getSlice(start, end);\n    if (currentProp.type === 7) {\n      currentProp.rawName = name;\n    }\n    if (currentOpenTag.props.some(\n      (p) => (p.type === 7 ? p.rawName : p.name) === name\n    )) {\n      emitError(2, start);\n    }\n  },\n  onattribend(quote, end) {\n    if (currentOpenTag && currentProp) {\n      setLocEnd(currentProp.loc, end);\n      if (quote !== 0) {\n        if (currentProp.type === 6) {\n          if (currentProp.name === \"class\") {\n            currentAttrValue = condense(currentAttrValue).trim();\n          }\n          if (quote === 1 && !currentAttrValue) {\n            emitError(13, end);\n          }\n          currentProp.value = {\n            type: 2,\n            content: currentAttrValue,\n            loc: quote === 1 ? getLoc(currentAttrStartIndex, currentAttrEndIndex) : getLoc(currentAttrStartIndex - 1, currentAttrEndIndex + 1)\n          };\n          if (tokenizer$2.inSFCRoot && currentOpenTag.tag === \"template\" && currentProp.name === \"lang\" && currentAttrValue && currentAttrValue !== \"html\") {\n            tokenizer$2.enterRCDATA(toCharCodes(`</template`), 0);\n          }\n        } else {\n          let expParseMode = 0 /* Normal */;\n          {\n            if (currentProp.name === \"for\") {\n              expParseMode = 3 /* Skip */;\n            } else if (currentProp.name === \"slot\") {\n              expParseMode = 1 /* Params */;\n            } else if (currentProp.name === \"on\" && currentAttrValue.includes(\";\")) {\n              expParseMode = 2 /* Statements */;\n            }\n          }\n          currentProp.exp = createExp(\n            currentAttrValue,\n            false,\n            getLoc(currentAttrStartIndex, currentAttrEndIndex),\n            0,\n            expParseMode\n          );\n          if (currentProp.name === \"for\") {\n            currentProp.forParseResult = parseForExpression(currentProp.exp);\n          }\n        }\n      }\n      if (currentProp.type !== 7 || currentProp.name !== \"pre\") {\n        currentOpenTag.props.push(currentProp);\n      }\n    }\n    currentAttrValue = \"\";\n    currentAttrStartIndex = currentAttrEndIndex = -1;\n  },\n  oncomment(start, end) {\n    if (currentOptions.comments) {\n      addNode({\n        type: 3,\n        content: getSlice(start, end),\n        loc: getLoc(start - 4, end + 3)\n      });\n    }\n  },\n  onend() {\n    const end = currentInput.length;\n    if (tokenizer$2.state !== 1) {\n      switch (tokenizer$2.state) {\n        case 5:\n        case 8:\n          emitError(5, end);\n          break;\n        case 3:\n        case 4:\n          emitError(\n            25,\n            tokenizer$2.sectionStart\n          );\n          break;\n        case 28:\n          if (tokenizer$2.currentSequence === Sequences.CdataEnd) {\n            emitError(6, end);\n          } else {\n            emitError(7, end);\n          }\n          break;\n        case 6:\n        case 7:\n        case 9:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 21:\n          emitError(9, end);\n          break;\n      }\n    }\n    for (let index = 0; index < stack.length; index++) {\n      onCloseTag(stack[index], end - 1);\n      emitError(24, stack[index].loc.start.offset);\n    }\n  },\n  oncdata(start, end) {\n    if (stack[0].ns !== 0) {\n      onText(getSlice(start, end), start, end);\n    } else {\n      emitError(1, start - 9);\n    }\n  },\n  onprocessinginstruction(start) {\n    if ((stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n      emitError(\n        21,\n        start - 1\n      );\n    }\n  }\n});\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nconst stripParensRE = /^\\(|\\)$/g;\nfunction parseForExpression(input) {\n  const loc = input.loc;\n  const exp = input.content;\n  const inMatch = exp.match(forAliasRE);\n  if (!inMatch)\n    return;\n  const [, LHS, RHS] = inMatch;\n  const createAliasExpression = (content, offset, asParam = false) => {\n    const start = loc.start.offset + offset;\n    const end = start + content.length;\n    return createExp(\n      content,\n      false,\n      getLoc(start, end),\n      0,\n      asParam ? 1 /* Params */ : 0 /* Normal */\n    );\n  };\n  const result = {\n    source: createAliasExpression(RHS.trim(), exp.indexOf(RHS, LHS.length)),\n    value: void 0,\n    key: void 0,\n    index: void 0,\n    finalized: false\n  };\n  let valueContent = LHS.trim().replace(stripParensRE, \"\").trim();\n  const trimmedOffset = LHS.indexOf(valueContent);\n  const iteratorMatch = valueContent.match(forIteratorRE);\n  if (iteratorMatch) {\n    valueContent = valueContent.replace(forIteratorRE, \"\").trim();\n    const keyContent = iteratorMatch[1].trim();\n    let keyOffset;\n    if (keyContent) {\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\n      result.key = createAliasExpression(keyContent, keyOffset, true);\n    }\n    if (iteratorMatch[2]) {\n      const indexContent = iteratorMatch[2].trim();\n      if (indexContent) {\n        result.index = createAliasExpression(\n          indexContent,\n          exp.indexOf(\n            indexContent,\n            result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length\n          ),\n          true\n        );\n      }\n    }\n  }\n  if (valueContent) {\n    result.value = createAliasExpression(valueContent, trimmedOffset, true);\n  }\n  return result;\n}\nfunction getSlice(start, end) {\n  return currentInput.slice(start, end);\n}\nfunction endOpenTag(end) {\n  if (tokenizer$2.inSFCRoot) {\n    currentOpenTag.innerLoc = getLoc(end + 1, end + 1);\n  }\n  addNode(currentOpenTag);\n  const { tag, ns } = currentOpenTag;\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre++;\n  }\n  if (currentOptions.isVoidTag(tag)) {\n    onCloseTag(currentOpenTag, end);\n  } else {\n    stack.unshift(currentOpenTag);\n    if (ns === 1 || ns === 2) {\n      tokenizer$2.inXML = true;\n    }\n  }\n  currentOpenTag = null;\n}\nfunction onText(content, start, end) {\n  const parent = stack[0] || currentRoot;\n  const lastNode = parent.children[parent.children.length - 1];\n  if ((lastNode == null ? void 0 : lastNode.type) === 2) {\n    lastNode.content += content;\n    setLocEnd(lastNode.loc, end);\n  } else {\n    parent.children.push({\n      type: 2,\n      content,\n      loc: getLoc(start, end)\n    });\n  }\n}\nfunction onCloseTag(el, end, isImplied = false) {\n  if (isImplied) {\n    setLocEnd(el.loc, backTrack(end, 60));\n  } else {\n    setLocEnd(el.loc, lookAhead(end, 62) + 1);\n  }\n  if (tokenizer$2.inSFCRoot) {\n    if (el.children.length) {\n      el.innerLoc.end = extend({}, el.children[el.children.length - 1].loc.end);\n    } else {\n      el.innerLoc.end = extend({}, el.innerLoc.start);\n    }\n    el.innerLoc.source = getSlice(\n      el.innerLoc.start.offset,\n      el.innerLoc.end.offset\n    );\n  }\n  const { tag, ns } = el;\n  if (!inVPre) {\n    if (tag === \"slot\") {\n      el.tagType = 2;\n    } else if (isFragmentTemplate(el)) {\n      el.tagType = 3;\n    } else if (isComponent(el)) {\n      el.tagType = 1;\n    }\n  }\n  if (!tokenizer$2.inRCDATA) {\n    el.children = condenseWhitespace(el.children, el.tag);\n  }\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre--;\n  }\n  if (currentVPreBoundary === el) {\n    inVPre = tokenizer$2.inVPre = false;\n    currentVPreBoundary = null;\n  }\n  if (tokenizer$2.inXML && (stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n    tokenizer$2.inXML = false;\n  }\n}\nfunction lookAhead(index, c) {\n  let i = index;\n  while (currentInput.charCodeAt(i) !== c && i < currentInput.length - 1)\n    i++;\n  return i;\n}\nfunction backTrack(index, c) {\n  let i = index;\n  while (currentInput.charCodeAt(i) !== c && i >= 0)\n    i--;\n  return i;\n}\nconst specialTemplateDir = /* @__PURE__ */ new Set([\"if\", \"else\", \"else-if\", \"for\", \"slot\"]);\nfunction isFragmentTemplate({ tag, props }) {\n  if (tag === \"template\") {\n    for (let i = 0; i < props.length; i++) {\n      if (props[i].type === 7 && specialTemplateDir.has(props[i].name)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction isComponent({ tag, props }) {\n  var _a;\n  if (currentOptions.isCustomElement(tag)) {\n    return false;\n  }\n  if (tag === \"component\" || isUpperCase(tag.charCodeAt(0)) || isCoreComponent(tag) || ((_a = currentOptions.isBuiltInComponent) == null ? void 0 : _a.call(currentOptions, tag)) || currentOptions.isNativeTag && !currentOptions.isNativeTag(tag)) {\n    return true;\n  }\n  for (let i = 0; i < props.length; i++) {\n    const p = props[i];\n    if (p.type === 6) {\n      if (p.name === \"is\" && p.value) {\n        if (p.value.content.startsWith(\"vue:\")) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\nfunction isUpperCase(c) {\n  return c > 64 && c < 91;\n}\nconst windowsNewlineRE = /\\r\\n/g;\nfunction condenseWhitespace(nodes, tag) {\n  var _a, _b;\n  const shouldCondense = currentOptions.whitespace !== \"preserve\";\n  let removedWhitespace = false;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (node.type === 2) {\n      if (!inPre) {\n        if (isAllWhitespace(node.content)) {\n          const prev = (_a = nodes[i - 1]) == null ? void 0 : _a.type;\n          const next = (_b = nodes[i + 1]) == null ? void 0 : _b.type;\n          if (!prev || !next || shouldCondense && (prev === 3 && (next === 3 || next === 1) || prev === 1 && (next === 3 || next === 1 && hasNewlineChar(node.content)))) {\n            removedWhitespace = true;\n            nodes[i] = null;\n          } else {\n            node.content = \" \";\n          }\n        } else if (shouldCondense) {\n          node.content = condense(node.content);\n        }\n      } else {\n        node.content = node.content.replace(windowsNewlineRE, \"\\n\");\n      }\n    }\n  }\n  if (inPre && tag && currentOptions.isPreTag(tag)) {\n    const first = nodes[0];\n    if (first && first.type === 2) {\n      first.content = first.content.replace(/^\\r?\\n/, \"\");\n    }\n  }\n  return removedWhitespace ? nodes.filter(Boolean) : nodes;\n}\nfunction isAllWhitespace(str) {\n  for (let i = 0; i < str.length; i++) {\n    if (!isWhitespace$1(str.charCodeAt(i))) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction hasNewlineChar(str) {\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c === 10 || c === 13) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction condense(str) {\n  let ret = \"\";\n  let prevCharIsWhitespace = false;\n  for (let i = 0; i < str.length; i++) {\n    if (isWhitespace$1(str.charCodeAt(i))) {\n      if (!prevCharIsWhitespace) {\n        ret += \" \";\n        prevCharIsWhitespace = true;\n      }\n    } else {\n      ret += str[i];\n      prevCharIsWhitespace = false;\n    }\n  }\n  return ret;\n}\nfunction addNode(node) {\n  (stack[0] || currentRoot).children.push(node);\n}\nfunction getLoc(start, end) {\n  return {\n    start: tokenizer$2.getPos(start),\n    // @ts-expect-error allow late attachment\n    end: end == null ? end : tokenizer$2.getPos(end),\n    // @ts-expect-error allow late attachment\n    source: end == null ? end : getSlice(start, end)\n  };\n}\nfunction setLocEnd(loc, end) {\n  loc.end = tokenizer$2.getPos(end);\n  loc.source = getSlice(loc.start.offset, end);\n}\nfunction dirToAttr(dir) {\n  const attr = {\n    type: 6,\n    name: dir.rawName,\n    nameLoc: getLoc(\n      dir.loc.start.offset,\n      dir.loc.start.offset + dir.rawName.length\n    ),\n    value: void 0,\n    loc: dir.loc\n  };\n  if (dir.exp) {\n    const loc = dir.exp.loc;\n    if (loc.end.offset < dir.loc.end.offset) {\n      loc.start.offset--;\n      loc.start.column--;\n      loc.end.offset++;\n      loc.end.column++;\n    }\n    attr.value = {\n      type: 2,\n      content: dir.exp.content,\n      loc\n    };\n  }\n  return attr;\n}\nfunction createExp(content, isStatic = false, loc, constType = 0, parseMode = 0 /* Normal */) {\n  const exp = createSimpleExpression(content, isStatic, loc, constType);\n  if (!isStatic && currentOptions.prefixIdentifiers && parseMode !== 3 /* Skip */ && content.trim()) {\n    if (isSimpleIdentifier(content)) {\n      exp.ast = null;\n      return exp;\n    }\n    try {\n      const plugins = currentOptions.expressionPlugins;\n      const options = {\n        plugins: plugins ? [...plugins, \"typescript\"] : [\"typescript\"]\n      };\n      if (parseMode === 2 /* Statements */) {\n        exp.ast = parse_1$1(` ${content} `, options).program;\n      } else if (parseMode === 1 /* Params */) {\n        exp.ast = parseExpression_1(`(${content})=>{}`, options);\n      } else {\n        exp.ast = parseExpression_1(`(${content})`, options);\n      }\n    } catch (e) {\n      exp.ast = false;\n      emitError(45, loc.start.offset, e.message);\n    }\n  }\n  return exp;\n}\nfunction emitError(code, index, message) {\n  currentOptions.onError(\n    createCompilerError(code, getLoc(index, index), void 0, message)\n  );\n}\nfunction reset() {\n  tokenizer$2.reset();\n  currentOpenTag = null;\n  currentProp = null;\n  currentAttrValue = \"\";\n  currentAttrStartIndex = -1;\n  currentAttrEndIndex = -1;\n  stack.length = 0;\n}\nfunction baseParse(input, options) {\n  reset();\n  currentInput = input;\n  currentOptions = extend({}, defaultParserOptions);\n  if (options) {\n    let key;\n    for (key in options) {\n      if (options[key] != null) {\n        currentOptions[key] = options[key];\n      }\n    }\n  }\n  {\n    if (currentOptions.decodeEntities) {\n      console.warn(\n        `[@vue/compiler-core] decodeEntities option is passed but will be ignored in non-browser builds.`\n      );\n    }\n  }\n  tokenizer$2.mode = currentOptions.parseMode === \"html\" ? 1 : currentOptions.parseMode === \"sfc\" ? 2 : 0;\n  tokenizer$2.inXML = currentOptions.ns === 1 || currentOptions.ns === 2;\n  const delimiters = options == null ? void 0 : options.delimiters;\n  if (delimiters) {\n    tokenizer$2.delimiterOpen = toCharCodes(delimiters[0]);\n    tokenizer$2.delimiterClose = toCharCodes(delimiters[1]);\n  }\n  const root = currentRoot = createRoot([], input);\n  tokenizer$2.parse(currentInput);\n  root.loc = getLoc(0, input.length);\n  root.children = condenseWhitespace(root.children);\n  currentRoot = null;\n  return root;\n}\n\nfunction hoistStatic(root, context) {\n  walk$1(\n    root,\n    context,\n    // Root node is unfortunately non-hoistable due to potential parent\n    // fallthrough attributes.\n    isSingleElementRoot(root, root.children[0])\n  );\n}\nfunction isSingleElementRoot(root, child) {\n  const { children } = root;\n  return children.length === 1 && child.type === 1 && !isSlotOutlet(child);\n}\nfunction walk$1(node, context, doNotHoistNode = false) {\n  const { children } = node;\n  const originalCount = children.length;\n  let hoistedCount = 0;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (child.type === 1 && child.tagType === 0) {\n      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);\n      if (constantType > 0) {\n        if (constantType >= 2) {\n          child.codegenNode.patchFlag = -1 + (` /* HOISTED */` );\n          child.codegenNode = context.hoist(child.codegenNode);\n          hoistedCount++;\n          continue;\n        }\n      } else {\n        const codegenNode = child.codegenNode;\n        if (codegenNode.type === 13) {\n          const flag = getPatchFlag(codegenNode);\n          if ((!flag || flag === 512 || flag === 1) && getGeneratedPropsConstantType(child, context) >= 2) {\n            const props = getNodeProps(child);\n            if (props) {\n              codegenNode.props = context.hoist(props);\n            }\n          }\n          if (codegenNode.dynamicProps) {\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\n          }\n        }\n      }\n    }\n    if (child.type === 1) {\n      const isComponent = child.tagType === 1;\n      if (isComponent) {\n        context.scopes.vSlot++;\n      }\n      walk$1(child, context);\n      if (isComponent) {\n        context.scopes.vSlot--;\n      }\n    } else if (child.type === 11) {\n      walk$1(child, context, child.children.length === 1);\n    } else if (child.type === 9) {\n      for (let i2 = 0; i2 < child.branches.length; i2++) {\n        walk$1(\n          child.branches[i2],\n          context,\n          child.branches[i2].children.length === 1\n        );\n      }\n    }\n  }\n  if (hoistedCount && context.transformHoist) {\n    context.transformHoist(children, context, node);\n  }\n  if (hoistedCount && hoistedCount === originalCount && node.type === 1 && node.tagType === 0 && node.codegenNode && node.codegenNode.type === 13 && isArray$3(node.codegenNode.children)) {\n    const hoisted = context.hoist(\n      createArrayExpression(node.codegenNode.children)\n    );\n    if (context.hmr) {\n      hoisted.content = `[...${hoisted.content}]`;\n    }\n    node.codegenNode.children = hoisted;\n  }\n}\nfunction getConstantType(node, context) {\n  const { constantCache } = context;\n  switch (node.type) {\n    case 1:\n      if (node.tagType !== 0) {\n        return 0;\n      }\n      const cached = constantCache.get(node);\n      if (cached !== void 0) {\n        return cached;\n      }\n      const codegenNode = node.codegenNode;\n      if (codegenNode.type !== 13) {\n        return 0;\n      }\n      if (codegenNode.isBlock && node.tag !== \"svg\" && node.tag !== \"foreignObject\") {\n        return 0;\n      }\n      const flag = getPatchFlag(codegenNode);\n      if (!flag) {\n        let returnType2 = 3;\n        const generatedPropsType = getGeneratedPropsConstantType(node, context);\n        if (generatedPropsType === 0) {\n          constantCache.set(node, 0);\n          return 0;\n        }\n        if (generatedPropsType < returnType2) {\n          returnType2 = generatedPropsType;\n        }\n        for (let i = 0; i < node.children.length; i++) {\n          const childType = getConstantType(node.children[i], context);\n          if (childType === 0) {\n            constantCache.set(node, 0);\n            return 0;\n          }\n          if (childType < returnType2) {\n            returnType2 = childType;\n          }\n        }\n        if (returnType2 > 1) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7 && p.name === \"bind\" && p.exp) {\n              const expType = getConstantType(p.exp, context);\n              if (expType === 0) {\n                constantCache.set(node, 0);\n                return 0;\n              }\n              if (expType < returnType2) {\n                returnType2 = expType;\n              }\n            }\n          }\n        }\n        if (codegenNode.isBlock) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7) {\n              constantCache.set(node, 0);\n              return 0;\n            }\n          }\n          context.removeHelper(OPEN_BLOCK);\n          context.removeHelper(\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent)\n          );\n          codegenNode.isBlock = false;\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\n        }\n        constantCache.set(node, returnType2);\n        return returnType2;\n      } else {\n        constantCache.set(node, 0);\n        return 0;\n      }\n    case 2:\n    case 3:\n      return 3;\n    case 9:\n    case 11:\n    case 10:\n      return 0;\n    case 5:\n    case 12:\n      return getConstantType(node.content, context);\n    case 4:\n      return node.constType;\n    case 8:\n      let returnType = 3;\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        if (isString$2(child) || isSymbol$1(child)) {\n          continue;\n        }\n        const childType = getConstantType(child, context);\n        if (childType === 0) {\n          return 0;\n        } else if (childType < returnType) {\n          returnType = childType;\n        }\n      }\n      return returnType;\n    default:\n      return 0;\n  }\n}\nconst allowHoistedHelperSet = /* @__PURE__ */ new Set([\n  NORMALIZE_CLASS,\n  NORMALIZE_STYLE,\n  NORMALIZE_PROPS,\n  GUARD_REACTIVE_PROPS\n]);\nfunction getConstantTypeOfHelperCall(value, context) {\n  if (value.type === 14 && !isString$2(value.callee) && allowHoistedHelperSet.has(value.callee)) {\n    const arg = value.arguments[0];\n    if (arg.type === 4) {\n      return getConstantType(arg, context);\n    } else if (arg.type === 14) {\n      return getConstantTypeOfHelperCall(arg, context);\n    }\n  }\n  return 0;\n}\nfunction getGeneratedPropsConstantType(node, context) {\n  let returnType = 3;\n  const props = getNodeProps(node);\n  if (props && props.type === 15) {\n    const { properties } = props;\n    for (let i = 0; i < properties.length; i++) {\n      const { key, value } = properties[i];\n      const keyType = getConstantType(key, context);\n      if (keyType === 0) {\n        return keyType;\n      }\n      if (keyType < returnType) {\n        returnType = keyType;\n      }\n      let valueType;\n      if (value.type === 4) {\n        valueType = getConstantType(value, context);\n      } else if (value.type === 14) {\n        valueType = getConstantTypeOfHelperCall(value, context);\n      } else {\n        valueType = 0;\n      }\n      if (valueType === 0) {\n        return valueType;\n      }\n      if (valueType < returnType) {\n        returnType = valueType;\n      }\n    }\n  }\n  return returnType;\n}\nfunction getNodeProps(node) {\n  const codegenNode = node.codegenNode;\n  if (codegenNode.type === 13) {\n    return codegenNode.props;\n  }\n}\nfunction getPatchFlag(node) {\n  const flag = node.patchFlag;\n  return flag ? parseInt(flag, 10) : void 0;\n}\n\nfunction createTransformContext(root, {\n  filename = \"\",\n  prefixIdentifiers = false,\n  hoistStatic: hoistStatic2 = false,\n  hmr = false,\n  cacheHandlers = false,\n  nodeTransforms = [],\n  directiveTransforms = {},\n  transformHoist = null,\n  isBuiltInComponent = NOOP,\n  isCustomElement = NOOP,\n  expressionPlugins = [],\n  scopeId = null,\n  slotted = true,\n  ssr = false,\n  inSSR = false,\n  ssrCssVars = ``,\n  bindingMetadata = EMPTY_OBJ,\n  inline = false,\n  isTS = false,\n  onError = defaultOnError,\n  onWarn = defaultOnWarn,\n  compatConfig\n}) {\n  const nameMatch = filename.replace(/\\?.*$/, \"\").match(/([^/\\\\]+)\\.\\w+$/);\n  const context = {\n    // options\n    filename,\n    selfName: nameMatch && capitalize$1(camelize(nameMatch[1])),\n    prefixIdentifiers,\n    hoistStatic: hoistStatic2,\n    hmr,\n    cacheHandlers,\n    nodeTransforms,\n    directiveTransforms,\n    transformHoist,\n    isBuiltInComponent,\n    isCustomElement,\n    expressionPlugins,\n    scopeId,\n    slotted,\n    ssr,\n    inSSR,\n    ssrCssVars,\n    bindingMetadata,\n    inline,\n    isTS,\n    onError,\n    onWarn,\n    compatConfig,\n    // state\n    root,\n    helpers: /* @__PURE__ */ new Map(),\n    components: /* @__PURE__ */ new Set(),\n    directives: /* @__PURE__ */ new Set(),\n    hoists: [],\n    imports: [],\n    constantCache: /* @__PURE__ */ new WeakMap(),\n    temps: 0,\n    cached: 0,\n    identifiers: /* @__PURE__ */ Object.create(null),\n    scopes: {\n      vFor: 0,\n      vSlot: 0,\n      vPre: 0,\n      vOnce: 0\n    },\n    parent: null,\n    currentNode: root,\n    childIndex: 0,\n    inVOnce: false,\n    // methods\n    helper(name) {\n      const count = context.helpers.get(name) || 0;\n      context.helpers.set(name, count + 1);\n      return name;\n    },\n    removeHelper(name) {\n      const count = context.helpers.get(name);\n      if (count) {\n        const currentCount = count - 1;\n        if (!currentCount) {\n          context.helpers.delete(name);\n        } else {\n          context.helpers.set(name, currentCount);\n        }\n      }\n    },\n    helperString(name) {\n      return `_${helperNameMap[context.helper(name)]}`;\n    },\n    replaceNode(node) {\n      {\n        if (!context.currentNode) {\n          throw new Error(`Node being replaced is already removed.`);\n        }\n        if (!context.parent) {\n          throw new Error(`Cannot replace root node.`);\n        }\n      }\n      context.parent.children[context.childIndex] = context.currentNode = node;\n    },\n    removeNode(node) {\n      if (!context.parent) {\n        throw new Error(`Cannot remove root node.`);\n      }\n      const list = context.parent.children;\n      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;\n      if (removalIndex < 0) {\n        throw new Error(`node being removed is not a child of current parent`);\n      }\n      if (!node || node === context.currentNode) {\n        context.currentNode = null;\n        context.onNodeRemoved();\n      } else {\n        if (context.childIndex > removalIndex) {\n          context.childIndex--;\n          context.onNodeRemoved();\n        }\n      }\n      context.parent.children.splice(removalIndex, 1);\n    },\n    onNodeRemoved: NOOP,\n    addIdentifiers(exp) {\n      {\n        if (isString$2(exp)) {\n          addId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(addId);\n        } else if (exp.type === 4) {\n          addId(exp.content);\n        }\n      }\n    },\n    removeIdentifiers(exp) {\n      {\n        if (isString$2(exp)) {\n          removeId(exp);\n        } else if (exp.identifiers) {\n          exp.identifiers.forEach(removeId);\n        } else if (exp.type === 4) {\n          removeId(exp.content);\n        }\n      }\n    },\n    hoist(exp) {\n      if (isString$2(exp))\n        exp = createSimpleExpression(exp);\n      context.hoists.push(exp);\n      const identifier = createSimpleExpression(\n        `_hoisted_${context.hoists.length}`,\n        false,\n        exp.loc,\n        2\n      );\n      identifier.hoisted = exp;\n      return identifier;\n    },\n    cache(exp, isVNode = false) {\n      return createCacheExpression(context.cached++, exp, isVNode);\n    }\n  };\n  function addId(id) {\n    const { identifiers } = context;\n    if (identifiers[id] === void 0) {\n      identifiers[id] = 0;\n    }\n    identifiers[id]++;\n  }\n  function removeId(id) {\n    context.identifiers[id]--;\n  }\n  return context;\n}\nfunction transform(root, options) {\n  const context = createTransformContext(root, options);\n  traverseNode(root, context);\n  if (options.hoistStatic) {\n    hoistStatic(root, context);\n  }\n  if (!options.ssr) {\n    createRootCodegen(root, context);\n  }\n  root.helpers = /* @__PURE__ */ new Set([...context.helpers.keys()]);\n  root.components = [...context.components];\n  root.directives = [...context.directives];\n  root.imports = context.imports;\n  root.hoists = context.hoists;\n  root.temps = context.temps;\n  root.cached = context.cached;\n  root.transformed = true;\n}\nfunction createRootCodegen(root, context) {\n  const { helper } = context;\n  const { children } = root;\n  if (children.length === 1) {\n    const child = children[0];\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      const codegenNode = child.codegenNode;\n      if (codegenNode.type === 13) {\n        convertToBlock(codegenNode, context);\n      }\n      root.codegenNode = codegenNode;\n    } else {\n      root.codegenNode = child;\n    }\n  } else if (children.length > 1) {\n    let patchFlag = 64;\n    let patchFlagText = PatchFlagNames[64];\n    if (children.filter((c) => c.type !== 3).length === 1) {\n      patchFlag |= 2048;\n      patchFlagText += `, ${PatchFlagNames[2048]}`;\n    }\n    root.codegenNode = createVNodeCall(\n      context,\n      helper(FRAGMENT),\n      void 0,\n      root.children,\n      patchFlag + (` /* ${patchFlagText} */` ),\n      void 0,\n      void 0,\n      true,\n      void 0,\n      false\n    );\n  } else ;\n}\nfunction traverseChildren(parent, context) {\n  let i = 0;\n  const nodeRemoved = () => {\n    i--;\n  };\n  for (; i < parent.children.length; i++) {\n    const child = parent.children[i];\n    if (isString$2(child))\n      continue;\n    context.parent = parent;\n    context.childIndex = i;\n    context.onNodeRemoved = nodeRemoved;\n    traverseNode(child, context);\n  }\n}\nfunction traverseNode(node, context) {\n  context.currentNode = node;\n  const { nodeTransforms } = context;\n  const exitFns = [];\n  for (let i2 = 0; i2 < nodeTransforms.length; i2++) {\n    const onExit = nodeTransforms[i2](node, context);\n    if (onExit) {\n      if (isArray$3(onExit)) {\n        exitFns.push(...onExit);\n      } else {\n        exitFns.push(onExit);\n      }\n    }\n    if (!context.currentNode) {\n      return;\n    } else {\n      node = context.currentNode;\n    }\n  }\n  switch (node.type) {\n    case 3:\n      if (!context.ssr) {\n        context.helper(CREATE_COMMENT);\n      }\n      break;\n    case 5:\n      if (!context.ssr) {\n        context.helper(TO_DISPLAY_STRING);\n      }\n      break;\n    case 9:\n      for (let i2 = 0; i2 < node.branches.length; i2++) {\n        traverseNode(node.branches[i2], context);\n      }\n      break;\n    case 10:\n    case 11:\n    case 1:\n    case 0:\n      traverseChildren(node, context);\n      break;\n  }\n  context.currentNode = node;\n  let i = exitFns.length;\n  while (i--) {\n    exitFns[i]();\n  }\n}\nfunction createStructuralDirectiveTransform(name, fn) {\n  const matches = isString$2(name) ? (n) => n === name : (n) => name.test(n);\n  return (node, context) => {\n    if (node.type === 1) {\n      const { props } = node;\n      if (node.tagType === 3 && props.some(isVSlot)) {\n        return;\n      }\n      const exitFns = [];\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        if (prop.type === 7 && matches(prop.name)) {\n          props.splice(i, 1);\n          i--;\n          const onExit = fn(node, prop, context);\n          if (onExit)\n            exitFns.push(onExit);\n        }\n      }\n      return exitFns;\n    }\n  };\n}\n\nvar sourceMap$2 = {};\n\nvar sourceMapGenerator$1 = {};\n\nvar base64Vlq$1 = {};\n\nvar base64$3 = {};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap$1 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nbase64$3.encode = function (number) {\n  if (0 <= number && number < intToCharMap$1.length) {\n    return intToCharMap$1[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nbase64$3.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64$2 = base64$3;\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT$1 = 5;\n\n// binary: 100000\nvar VLQ_BASE$1 = 1 << VLQ_BASE_SHIFT$1;\n\n// binary: 011111\nvar VLQ_BASE_MASK$1 = VLQ_BASE$1 - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT$1 = VLQ_BASE$1;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned$1(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned$1(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nbase64Vlq$1.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned$1(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK$1;\n    vlq >>>= VLQ_BASE_SHIFT$1;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT$1;\n    }\n    encoded += base64$2.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nbase64Vlq$1.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64$2.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT$1);\n    digit &= VLQ_BASE_MASK$1;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT$1;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned$1(result);\n  aOutParam.rest = aIndex;\n};\n\nvar util$c = {};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n(function (exports) {\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\t/**\n\t * This is a helper function for getting values from parameter/options\n\t * objects.\n\t *\n\t * @param args The object we are extracting values from\n\t * @param name The name of the property we are getting.\n\t * @param defaultValue An optional value to return if the property is missing\n\t * from the object. If this is not specified and the property is missing, an\n\t * error will be thrown.\n\t */\n\tfunction getArg(aArgs, aName, aDefaultValue) {\n\t  if (aName in aArgs) {\n\t    return aArgs[aName];\n\t  } else if (arguments.length === 3) {\n\t    return aDefaultValue;\n\t  } else {\n\t    throw new Error('\"' + aName + '\" is a required argument.');\n\t  }\n\t}\n\texports.getArg = getArg;\n\n\tvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\n\tvar dataUrlRegexp = /^data:.+\\,.+$/;\n\n\tfunction urlParse(aUrl) {\n\t  var match = aUrl.match(urlRegexp);\n\t  if (!match) {\n\t    return null;\n\t  }\n\t  return {\n\t    scheme: match[1],\n\t    auth: match[2],\n\t    host: match[3],\n\t    port: match[4],\n\t    path: match[5]\n\t  };\n\t}\n\texports.urlParse = urlParse;\n\n\tfunction urlGenerate(aParsedUrl) {\n\t  var url = '';\n\t  if (aParsedUrl.scheme) {\n\t    url += aParsedUrl.scheme + ':';\n\t  }\n\t  url += '//';\n\t  if (aParsedUrl.auth) {\n\t    url += aParsedUrl.auth + '@';\n\t  }\n\t  if (aParsedUrl.host) {\n\t    url += aParsedUrl.host;\n\t  }\n\t  if (aParsedUrl.port) {\n\t    url += \":\" + aParsedUrl.port;\n\t  }\n\t  if (aParsedUrl.path) {\n\t    url += aParsedUrl.path;\n\t  }\n\t  return url;\n\t}\n\texports.urlGenerate = urlGenerate;\n\n\tvar MAX_CACHED_INPUTS = 32;\n\n\t/**\n\t * Takes some function `f(input) -> result` and returns a memoized version of\n\t * `f`.\n\t *\n\t * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\n\t * memoization is a dumb-simple, linear least-recently-used cache.\n\t */\n\tfunction lruMemoize(f) {\n\t  var cache = [];\n\n\t  return function(input) {\n\t    for (var i = 0; i < cache.length; i++) {\n\t      if (cache[i].input === input) {\n\t        var temp = cache[0];\n\t        cache[0] = cache[i];\n\t        cache[i] = temp;\n\t        return cache[0].result;\n\t      }\n\t    }\n\n\t    var result = f(input);\n\n\t    cache.unshift({\n\t      input,\n\t      result,\n\t    });\n\n\t    if (cache.length > MAX_CACHED_INPUTS) {\n\t      cache.pop();\n\t    }\n\n\t    return result;\n\t  };\n\t}\n\n\t/**\n\t * Normalizes a path, or the path portion of a URL:\n\t *\n\t * - Replaces consecutive slashes with one slash.\n\t * - Removes unnecessary '.' parts.\n\t * - Removes unnecessary '<dir>/..' parts.\n\t *\n\t * Based on code in the Node.js 'path' core module.\n\t *\n\t * @param aPath The path or url to normalize.\n\t */\n\tvar normalize = lruMemoize(function normalize(aPath) {\n\t  var path = aPath;\n\t  var url = urlParse(aPath);\n\t  if (url) {\n\t    if (!url.path) {\n\t      return aPath;\n\t    }\n\t    path = url.path;\n\t  }\n\t  var isAbsolute = exports.isAbsolute(path);\n\t  // Split the path into parts between `/` characters. This is much faster than\n\t  // using `.split(/\\/+/g)`.\n\t  var parts = [];\n\t  var start = 0;\n\t  var i = 0;\n\t  while (true) {\n\t    start = i;\n\t    i = path.indexOf(\"/\", start);\n\t    if (i === -1) {\n\t      parts.push(path.slice(start));\n\t      break;\n\t    } else {\n\t      parts.push(path.slice(start, i));\n\t      while (i < path.length && path[i] === \"/\") {\n\t        i++;\n\t      }\n\t    }\n\t  }\n\n\t  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n\t    part = parts[i];\n\t    if (part === '.') {\n\t      parts.splice(i, 1);\n\t    } else if (part === '..') {\n\t      up++;\n\t    } else if (up > 0) {\n\t      if (part === '') {\n\t        // The first part is blank if the path is absolute. Trying to go\n\t        // above the root is a no-op. Therefore we can remove all '..' parts\n\t        // directly after the root.\n\t        parts.splice(i + 1, up);\n\t        up = 0;\n\t      } else {\n\t        parts.splice(i, 2);\n\t        up--;\n\t      }\n\t    }\n\t  }\n\t  path = parts.join('/');\n\n\t  if (path === '') {\n\t    path = isAbsolute ? '/' : '.';\n\t  }\n\n\t  if (url) {\n\t    url.path = path;\n\t    return urlGenerate(url);\n\t  }\n\t  return path;\n\t});\n\texports.normalize = normalize;\n\n\t/**\n\t * Joins two paths/URLs.\n\t *\n\t * @param aRoot The root path or URL.\n\t * @param aPath The path or URL to be joined with the root.\n\t *\n\t * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n\t *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n\t *   first.\n\t * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n\t *   is updated with the result and aRoot is returned. Otherwise the result\n\t *   is returned.\n\t *   - If aPath is absolute, the result is aPath.\n\t *   - Otherwise the two paths are joined with a slash.\n\t * - Joining for example 'http://' and 'www.example.com' is also supported.\n\t */\n\tfunction join(aRoot, aPath) {\n\t  if (aRoot === \"\") {\n\t    aRoot = \".\";\n\t  }\n\t  if (aPath === \"\") {\n\t    aPath = \".\";\n\t  }\n\t  var aPathUrl = urlParse(aPath);\n\t  var aRootUrl = urlParse(aRoot);\n\t  if (aRootUrl) {\n\t    aRoot = aRootUrl.path || '/';\n\t  }\n\n\t  // `join(foo, '//www.example.org')`\n\t  if (aPathUrl && !aPathUrl.scheme) {\n\t    if (aRootUrl) {\n\t      aPathUrl.scheme = aRootUrl.scheme;\n\t    }\n\t    return urlGenerate(aPathUrl);\n\t  }\n\n\t  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n\t    return aPath;\n\t  }\n\n\t  // `join('http://', 'www.example.com')`\n\t  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n\t    aRootUrl.host = aPath;\n\t    return urlGenerate(aRootUrl);\n\t  }\n\n\t  var joined = aPath.charAt(0) === '/'\n\t    ? aPath\n\t    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n\t  if (aRootUrl) {\n\t    aRootUrl.path = joined;\n\t    return urlGenerate(aRootUrl);\n\t  }\n\t  return joined;\n\t}\n\texports.join = join;\n\n\texports.isAbsolute = function (aPath) {\n\t  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n\t};\n\n\t/**\n\t * Make a path relative to a URL or another path.\n\t *\n\t * @param aRoot The root path or URL.\n\t * @param aPath The path or URL to be made relative to aRoot.\n\t */\n\tfunction relative(aRoot, aPath) {\n\t  if (aRoot === \"\") {\n\t    aRoot = \".\";\n\t  }\n\n\t  aRoot = aRoot.replace(/\\/$/, '');\n\n\t  // It is possible for the path to be above the root. In this case, simply\n\t  // checking whether the root is a prefix of the path won't work. Instead, we\n\t  // need to remove components from the root one by one, until either we find\n\t  // a prefix that fits, or we run out of components to remove.\n\t  var level = 0;\n\t  while (aPath.indexOf(aRoot + '/') !== 0) {\n\t    var index = aRoot.lastIndexOf(\"/\");\n\t    if (index < 0) {\n\t      return aPath;\n\t    }\n\n\t    // If the only part of the root that is left is the scheme (i.e. http://,\n\t    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n\t    // have exhausted all components, so the path is not relative to the root.\n\t    aRoot = aRoot.slice(0, index);\n\t    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n\t      return aPath;\n\t    }\n\n\t    ++level;\n\t  }\n\n\t  // Make sure we add a \"../\" for each component we removed from the root.\n\t  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n\t}\n\texports.relative = relative;\n\n\tvar supportsNullProto = (function () {\n\t  var obj = Object.create(null);\n\t  return !('__proto__' in obj);\n\t}());\n\n\tfunction identity (s) {\n\t  return s;\n\t}\n\n\t/**\n\t * Because behavior goes wacky when you set `__proto__` on objects, we\n\t * have to prefix all the strings in our set with an arbitrary character.\n\t *\n\t * See https://github.com/mozilla/source-map/pull/31 and\n\t * https://github.com/mozilla/source-map/issues/30\n\t *\n\t * @param String aStr\n\t */\n\tfunction toSetString(aStr) {\n\t  if (isProtoString(aStr)) {\n\t    return '$' + aStr;\n\t  }\n\n\t  return aStr;\n\t}\n\texports.toSetString = supportsNullProto ? identity : toSetString;\n\n\tfunction fromSetString(aStr) {\n\t  if (isProtoString(aStr)) {\n\t    return aStr.slice(1);\n\t  }\n\n\t  return aStr;\n\t}\n\texports.fromSetString = supportsNullProto ? identity : fromSetString;\n\n\tfunction isProtoString(s) {\n\t  if (!s) {\n\t    return false;\n\t  }\n\n\t  var length = s.length;\n\n\t  if (length < 9 /* \"__proto__\".length */) {\n\t    return false;\n\t  }\n\n\t  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n\t      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n\t      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n\t      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n\t      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n\t      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n\t      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n\t      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n\t      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n\t    return false;\n\t  }\n\n\t  for (var i = length - 10; i >= 0; i--) {\n\t    if (s.charCodeAt(i) !== 36 /* '$' */) {\n\t      return false;\n\t    }\n\t  }\n\n\t  return true;\n\t}\n\n\t/**\n\t * Comparator between two mappings where the original positions are compared.\n\t *\n\t * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n\t * mappings with the same original source/line/column, but different generated\n\t * line and column the same. Useful when searching for a mapping with a\n\t * stubbed out mapping.\n\t */\n\tfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n\t  var cmp = strcmp(mappingA.source, mappingB.source);\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t  if (cmp !== 0 || onlyCompareOriginal) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  return strcmp(mappingA.name, mappingB.name);\n\t}\n\texports.compareByOriginalPositions = compareByOriginalPositions;\n\n\tfunction compareByOriginalPositionsNoSource(mappingA, mappingB, onlyCompareOriginal) {\n\t  var cmp;\n\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t  if (cmp !== 0 || onlyCompareOriginal) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  return strcmp(mappingA.name, mappingB.name);\n\t}\n\texports.compareByOriginalPositionsNoSource = compareByOriginalPositionsNoSource;\n\n\t/**\n\t * Comparator between two mappings with deflated source and name indices where\n\t * the generated positions are compared.\n\t *\n\t * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n\t * mappings with the same generated line and column, but different\n\t * source/name/original line and column the same. Useful when searching for a\n\t * mapping with a stubbed out mapping.\n\t */\n\tfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n\t  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t  if (cmp !== 0 || onlyCompareGenerated) {\n\t    return cmp;\n\t  }\n\n\t  cmp = strcmp(mappingA.source, mappingB.source);\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  return strcmp(mappingA.name, mappingB.name);\n\t}\n\texports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\n\tfunction compareByGeneratedPositionsDeflatedNoLine(mappingA, mappingB, onlyCompareGenerated) {\n\t  var cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t  if (cmp !== 0 || onlyCompareGenerated) {\n\t    return cmp;\n\t  }\n\n\t  cmp = strcmp(mappingA.source, mappingB.source);\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  return strcmp(mappingA.name, mappingB.name);\n\t}\n\texports.compareByGeneratedPositionsDeflatedNoLine = compareByGeneratedPositionsDeflatedNoLine;\n\n\tfunction strcmp(aStr1, aStr2) {\n\t  if (aStr1 === aStr2) {\n\t    return 0;\n\t  }\n\n\t  if (aStr1 === null) {\n\t    return 1; // aStr2 !== null\n\t  }\n\n\t  if (aStr2 === null) {\n\t    return -1; // aStr1 !== null\n\t  }\n\n\t  if (aStr1 > aStr2) {\n\t    return 1;\n\t  }\n\n\t  return -1;\n\t}\n\n\t/**\n\t * Comparator between two mappings with inflated source and name strings where\n\t * the generated positions are compared.\n\t */\n\tfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n\t  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = strcmp(mappingA.source, mappingB.source);\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  return strcmp(mappingA.name, mappingB.name);\n\t}\n\texports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n\t/**\n\t * Strip any JSON XSSI avoidance prefix from the string (as documented\n\t * in the source maps specification), and then parse the string as\n\t * JSON.\n\t */\n\tfunction parseSourceMapInput(str) {\n\t  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n\t}\n\texports.parseSourceMapInput = parseSourceMapInput;\n\n\t/**\n\t * Compute the URL of a source given the the source root, the source's\n\t * URL, and the source map's URL.\n\t */\n\tfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n\t  sourceURL = sourceURL || '';\n\n\t  if (sourceRoot) {\n\t    // This follows what Chrome does.\n\t    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n\t      sourceRoot += '/';\n\t    }\n\t    // The spec says:\n\t    //   Line 4: An optional source root, useful for relocating source\n\t    //   files on a server or removing repeated values in the\n\t    //   “sources” entry.  This value is prepended to the individual\n\t    //   entries in the “source” field.\n\t    sourceURL = sourceRoot + sourceURL;\n\t  }\n\n\t  // Historically, SourceMapConsumer did not take the sourceMapURL as\n\t  // a parameter.  This mode is still somewhat supported, which is why\n\t  // this code block is conditional.  However, it's preferable to pass\n\t  // the source map URL to SourceMapConsumer, so that this function\n\t  // can implement the source URL resolution algorithm as outlined in\n\t  // the spec.  This block is basically the equivalent of:\n\t  //    new URL(sourceURL, sourceMapURL).toString()\n\t  // ... except it avoids using URL, which wasn't available in the\n\t  // older releases of node still supported by this library.\n\t  //\n\t  // The spec says:\n\t  //   If the sources are not absolute URLs after prepending of the\n\t  //   “sourceRoot”, the sources are resolved relative to the\n\t  //   SourceMap (like resolving script src in a html document).\n\t  if (sourceMapURL) {\n\t    var parsed = urlParse(sourceMapURL);\n\t    if (!parsed) {\n\t      throw new Error(\"sourceMapURL could not be parsed\");\n\t    }\n\t    if (parsed.path) {\n\t      // Strip the last path component, but keep the \"/\".\n\t      var index = parsed.path.lastIndexOf('/');\n\t      if (index >= 0) {\n\t        parsed.path = parsed.path.substring(0, index + 1);\n\t      }\n\t    }\n\t    sourceURL = join(urlGenerate(parsed), sourceURL);\n\t  }\n\n\t  return normalize(sourceURL);\n\t}\n\texports.computeSourceURL = computeSourceURL; \n} (util$c));\n\nvar arraySet$1 = {};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util$b = util$c;\nvar has$1 = Object.prototype.hasOwnProperty;\nvar hasNativeMap$1 = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet$5() {\n  this._array = [];\n  this._set = hasNativeMap$1 ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet$5.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet$5();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet$5.prototype.size = function ArraySet_size() {\n  return hasNativeMap$1 ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet$5.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap$1 ? aStr : util$b.toSetString(aStr);\n  var isDuplicate = hasNativeMap$1 ? this.has(aStr) : has$1.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap$1) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet$5.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap$1) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util$b.toSetString(aStr);\n    return has$1.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet$5.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap$1) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util$b.toSetString(aStr);\n    if (has$1.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet$5.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet$5.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\narraySet$1.ArraySet = ArraySet$5;\n\nvar mappingList$1 = {};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util$a = util$c;\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter$1(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util$a.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList$3() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList$3.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList$3.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter$1(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList$3.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util$a.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nmappingList$1.MappingList = MappingList$3;\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ$3 = base64Vlq$1;\nvar util$9 = util$c;\nvar ArraySet$4 = arraySet$1.ArraySet;\nvar MappingList$2 = mappingList$1.MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator$8(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util$9.getArg(aArgs, 'file', null);\n  this._sourceRoot = util$9.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util$9.getArg(aArgs, 'skipValidation', false);\n  this._ignoreInvalidMapping = util$9.getArg(aArgs, 'ignoreInvalidMapping', false);\n  this._sources = new ArraySet$4();\n  this._names = new ArraySet$4();\n  this._mappings = new MappingList$2();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator$8.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator$8.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer, generatorOps) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator$8(Object.assign(generatorOps || {}, {\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    }));\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util$9.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util$9.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator$8.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util$9.getArg(aArgs, 'generated');\n    var original = util$9.getArg(aArgs, 'original', null);\n    var source = util$9.getArg(aArgs, 'source', null);\n    var name = util$9.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      if (this._validateMapping(generated, original, source, name) === false) {\n        return;\n      }\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator$8.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util$9.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util$9.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util$9.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator$8.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util$9.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet$4();\n    var newNames = new ArraySet$4();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util$9.join(aSourceMapPath, mapping.source);\n          }\n          if (sourceRoot != null) {\n            mapping.source = util$9.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util$9.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util$9.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator$8.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n      var message = 'original.line and original.column are not numbers -- you probably meant to omit ' +\n      'the original mapping entirely and only map the generated position. If so, pass ' +\n      'null for the original mapping instead of an object with empty or null values.';\n\n      if (this._ignoreInvalidMapping) {\n        if (typeof console !== 'undefined' && console.warn) {\n          console.warn(message);\n        }\n        return false;\n      } else {\n        throw new Error(message);\n      }\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      var message = 'Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      });\n\n      if (this._ignoreInvalidMapping) {\n        if (typeof console !== 'undefined' && console.warn) {\n          console.warn(message);\n        }\n        return false;\n      } else {\n        throw new Error(message)\n      }\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator$8.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = '';\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util$9.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ$3.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ$3.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ$3.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ$3.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ$3.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator$8.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util$9.relative(aSourceRoot, source);\n      }\n      var key = util$9.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator$8.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator$8.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nsourceMapGenerator$1.SourceMapGenerator = SourceMapGenerator$8;\n\nvar sourceMapConsumer$1 = {};\n\nvar binarySearch$3 = {};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n(function (exports) {\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\texports.GREATEST_LOWER_BOUND = 1;\n\texports.LEAST_UPPER_BOUND = 2;\n\n\t/**\n\t * Recursive implementation of binary search.\n\t *\n\t * @param aLow Indices here and lower do not contain the needle.\n\t * @param aHigh Indices here and higher do not contain the needle.\n\t * @param aNeedle The element being searched for.\n\t * @param aHaystack The non-empty array being searched.\n\t * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n\t * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n\t *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t */\n\tfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n\t  // This function terminates when one of the following is true:\n\t  //\n\t  //   1. We find the exact element we are looking for.\n\t  //\n\t  //   2. We did not find the exact element, but we can return the index of\n\t  //      the next-closest element.\n\t  //\n\t  //   3. We did not find the exact element, and there is no next-closest\n\t  //      element than the one we are searching for, so we return -1.\n\t  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n\t  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n\t  if (cmp === 0) {\n\t    // Found the element we are looking for.\n\t    return mid;\n\t  }\n\t  else if (cmp > 0) {\n\t    // Our needle is greater than aHaystack[mid].\n\t    if (aHigh - mid > 1) {\n\t      // The element is in the upper half.\n\t      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n\t    }\n\n\t    // The exact needle element was not found in this haystack. Determine if\n\t    // we are in termination case (3) or (2) and return the appropriate thing.\n\t    if (aBias == exports.LEAST_UPPER_BOUND) {\n\t      return aHigh < aHaystack.length ? aHigh : -1;\n\t    } else {\n\t      return mid;\n\t    }\n\t  }\n\t  else {\n\t    // Our needle is less than aHaystack[mid].\n\t    if (mid - aLow > 1) {\n\t      // The element is in the lower half.\n\t      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n\t    }\n\n\t    // we are in termination case (3) or (2) and return the appropriate thing.\n\t    if (aBias == exports.LEAST_UPPER_BOUND) {\n\t      return mid;\n\t    } else {\n\t      return aLow < 0 ? -1 : aLow;\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * This is an implementation of binary search which will always try and return\n\t * the index of the closest element if there is no exact hit. This is because\n\t * mappings between original and generated line/col pairs are single points,\n\t * and there is an implicit region between each of them, so a miss just means\n\t * that you aren't on the very start of a region.\n\t *\n\t * @param aNeedle The element you are looking for.\n\t * @param aHaystack The array that is being searched.\n\t * @param aCompare A function which takes the needle and an element in the\n\t *     array and returns -1, 0, or 1 depending on whether the needle is less\n\t *     than, equal to, or greater than the element, respectively.\n\t * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n\t *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n\t */\n\texports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n\t  if (aHaystack.length === 0) {\n\t    return -1;\n\t  }\n\n\t  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n\t                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n\t  if (index < 0) {\n\t    return -1;\n\t  }\n\n\t  // We have found either the exact element, or the next-closest element than\n\t  // the one we are searching for. However, there may be more than one such\n\t  // element. Make sure we always return the smallest of these.\n\t  while (index - 1 >= 0) {\n\t    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n\t      break;\n\t    }\n\t    --index;\n\t  }\n\n\t  return index;\n\t}; \n} (binarySearch$3));\n\nvar quickSort$3 = {};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\nfunction SortTemplate(comparator) {\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot, false) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n  return doQuickSort;\n}\n\nfunction cloneSort(comparator) {\n  let template = SortTemplate.toString();\n  let templateFn = new Function(`return ${template}`)();\n  return templateFn(comparator);\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\n\nlet sortCache = new WeakMap();\nquickSort$3.quickSort = function (ary, comparator, start = 0) {\n  let doQuickSort = sortCache.get(comparator);\n  if (doQuickSort === void 0) {\n    doQuickSort = cloneSort(comparator);\n    sortCache.set(comparator, doQuickSort);\n  }\n  doQuickSort(ary, comparator, start, ary.length - 1);\n};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util$8 = util$c;\nvar binarySearch$2 = binarySearch$3;\nvar ArraySet$3 = arraySet$1.ArraySet;\nvar base64VLQ$2 = base64Vlq$1;\nvar quickSort$2 = quickSort$3.quickSort;\n\nfunction SourceMapConsumer$6(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util$8.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer$1(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer$1(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer$6.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer$1.fromSourceMap(aSourceMap, aSourceMapURL);\n};\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer$6.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer$6.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer$6.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer$6.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer$6.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer$6.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer$6.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer$6.GENERATED_ORDER = 1;\nSourceMapConsumer$6.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer$6.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer$6.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer$6.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer$6.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer$6.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer$6.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    var boundCallback = aCallback.bind(context);\n    var names = this._names;\n    var sources = this._sources;\n    var sourceMapURL = this._sourceMapURL;\n\n    for (var i = 0, n = mappings.length; i < n; i++) {\n      var mapping = mappings[i];\n      var source = mapping.source === null ? null : sources.at(mapping.source);\n      source = util$8.computeSourceURL(sourceRoot, source, sourceMapURL);\n      boundCallback({\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : names.at(mapping.name)\n      });\n    }\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer$6.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util$8.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util$8.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util$8.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util$8.compareByOriginalPositions,\n                                  binarySearch$2.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util$8.getArg(mapping, 'generatedLine', null),\n            column: util$8.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util$8.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util$8.getArg(mapping, 'generatedLine', null),\n            column: util$8.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util$8.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nsourceMapConsumer$1.SourceMapConsumer = SourceMapConsumer$6;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer$1(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util$8.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util$8.getArg(sourceMap, 'version');\n  var sources = util$8.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util$8.getArg(sourceMap, 'names', []);\n  var sourceRoot = util$8.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util$8.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util$8.getArg(sourceMap, 'mappings');\n  var file = util$8.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util$8.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util$8.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util$8.isAbsolute(sourceRoot) && util$8.isAbsolute(source)\n        ? util$8.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet$3.fromArray(names.map(String), true);\n  this._sources = ArraySet$3.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util$8.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer$1.prototype = Object.create(SourceMapConsumer$6.prototype);\nBasicSourceMapConsumer$1.prototype.consumer = SourceMapConsumer$6;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer$1.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util$8.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer$1.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer$1.prototype);\n\n    var names = smc._names = ArraySet$3.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet$3.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util$8.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping$1;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort$2(smc.__originalMappings, util$8.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer$1.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer$1.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping$1() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\n\nconst compareGenerated = util$8.compareByGeneratedPositionsDeflatedNoLine;\nfunction sortGenerated(array, start) {\n  let l = array.length;\n  let n = array.length - start;\n  if (n <= 1) {\n    return;\n  } else if (n == 2) {\n    let a = array[start];\n    let b = array[start + 1];\n    if (compareGenerated(a, b) > 0) {\n      array[start] = b;\n      array[start + 1] = a;\n    }\n  } else if (n < 20) {\n    for (let i = start; i < l; i++) {\n      for (let j = i; j > start; j--) {\n        let a = array[j - 1];\n        let b = array[j];\n        if (compareGenerated(a, b) <= 0) {\n          break;\n        }\n        array[j - 1] = b;\n        array[j] = a;\n      }\n    }\n  } else {\n    quickSort$2(array, compareGenerated, start);\n  }\n}\nBasicSourceMapConsumer$1.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, segment, end, value;\n\n    let subarrayStart = 0;\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n\n        sortGenerated(generatedMappings, subarrayStart);\n        subarrayStart = generatedMappings.length;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping$1();\n        mapping.generatedLine = generatedLine;\n\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        aStr.slice(index, end);\n\n        segment = [];\n        while (index < end) {\n          base64VLQ$2.decode(aStr, index, temp);\n          value = temp.value;\n          index = temp.rest;\n          segment.push(value);\n        }\n\n        if (segment.length === 2) {\n          throw new Error('Found a source, but no line and column');\n        }\n\n        if (segment.length === 3) {\n          throw new Error('Found a source and line, but no column');\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          let currentSource = mapping.source;\n          while (originalMappings.length <= currentSource) {\n            originalMappings.push(null);\n          }\n          if (originalMappings[currentSource] === null) {\n            originalMappings[currentSource] = [];\n          }\n          originalMappings[currentSource].push(mapping);\n        }\n      }\n    }\n\n    sortGenerated(generatedMappings, subarrayStart);\n    this.__generatedMappings = generatedMappings;\n\n    for (var i = 0; i < originalMappings.length; i++) {\n      if (originalMappings[i] != null) {\n        quickSort$2(originalMappings[i], util$8.compareByOriginalPositionsNoSource);\n      }\n    }\n    this.__originalMappings = [].concat(...originalMappings);\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer$1.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch$2.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer$1.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer$1.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util$8.getArg(aArgs, 'line'),\n      generatedColumn: util$8.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util$8.compareByGeneratedPositionsDeflated,\n      util$8.getArg(aArgs, 'bias', SourceMapConsumer$6.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util$8.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util$8.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util$8.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util$8.getArg(mapping, 'originalLine', null),\n          column: util$8.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer$1.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer$1.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util$8.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util$8.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer$1.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util$8.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util$8.getArg(aArgs, 'line'),\n      originalColumn: util$8.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util$8.compareByOriginalPositions,\n      util$8.getArg(aArgs, 'bias', SourceMapConsumer$6.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util$8.getArg(mapping, 'generatedLine', null),\n          column: util$8.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util$8.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nsourceMapConsumer$1.BasicSourceMapConsumer = BasicSourceMapConsumer$1;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer$1(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util$8.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util$8.getArg(sourceMap, 'version');\n  var sections = util$8.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet$3();\n  this._names = new ArraySet$3();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util$8.getArg(s, 'offset');\n    var offsetLine = util$8.getArg(offset, 'line');\n    var offsetColumn = util$8.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer$6(util$8.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer$1.prototype = Object.create(SourceMapConsumer$6.prototype);\nIndexedSourceMapConsumer$1.prototype.constructor = SourceMapConsumer$6;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer$1.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer$1.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer$1.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util$8.getArg(aArgs, 'line'),\n      generatedColumn: util$8.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch$2.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer$1.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer$1.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content || content === '') {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer$1.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util$8.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer$1.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util$8.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort$2(this.__generatedMappings, util$8.compareByGeneratedPositionsDeflated);\n    quickSort$2(this.__originalMappings, util$8.compareByOriginalPositions);\n  };\n\nsourceMapConsumer$1.IndexedSourceMapConsumer = IndexedSourceMapConsumer$1;\n\nvar sourceNode$1 = {};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator$7 = sourceMapGenerator$1.SourceMapGenerator;\nvar util$7 = util$c;\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE$1 = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE$1 = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode$1 = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode$1(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode$1] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode$1.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode$1();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE$1);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util$7.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util$7.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode$1(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode$1.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode$1] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode$1.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode$1] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode$1.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode$1]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode$1.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode$1.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode$1]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode$1.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util$7.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode$1.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode$1]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util$7.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode$1.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode$1.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator$7(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE$1) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nsourceNode$1.SourceNode = SourceNode$1;\n\n/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator$6 = sourceMap$2.SourceMapGenerator = sourceMapGenerator$1.SourceMapGenerator;\nvar SourceMapConsumer$5 = sourceMap$2.SourceMapConsumer = sourceMapConsumer$1.SourceMapConsumer;\nsourceMap$2.SourceNode = sourceNode$1.SourceNode;\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\nfunction createCodegenContext(ast, {\n  mode = \"function\",\n  prefixIdentifiers = mode === \"module\",\n  sourceMap = false,\n  filename = `template.vue.html`,\n  scopeId = null,\n  optimizeImports = false,\n  runtimeGlobalName = `Vue`,\n  runtimeModuleName = `vue`,\n  ssrRuntimeModuleName = \"vue/server-renderer\",\n  ssr = false,\n  isTS = false,\n  inSSR = false\n}) {\n  const context = {\n    mode,\n    prefixIdentifiers,\n    sourceMap,\n    filename,\n    scopeId,\n    optimizeImports,\n    runtimeGlobalName,\n    runtimeModuleName,\n    ssrRuntimeModuleName,\n    ssr,\n    isTS,\n    inSSR,\n    source: ast.source,\n    code: ``,\n    column: 1,\n    line: 1,\n    offset: 0,\n    indentLevel: 0,\n    pure: false,\n    map: void 0,\n    helper(key) {\n      return `_${helperNameMap[key]}`;\n    },\n    push(code, newlineIndex = -2 /* None */, node) {\n      context.code += code;\n      if (context.map) {\n        if (node) {\n          let name;\n          if (node.type === 4 && !node.isStatic) {\n            const content = node.content.replace(/^_ctx\\./, \"\");\n            if (content !== node.content && isSimpleIdentifier(content)) {\n              name = content;\n            }\n          }\n          addMapping(node.loc.start, name);\n        }\n        if (newlineIndex === -3 /* Unknown */) {\n          advancePositionWithMutation(context, code);\n        } else {\n          context.offset += code.length;\n          if (newlineIndex === -2 /* None */) {\n            context.column += code.length;\n          } else {\n            if (newlineIndex === -1 /* End */) {\n              newlineIndex = code.length - 1;\n            }\n            context.line++;\n            context.column = code.length - newlineIndex;\n          }\n        }\n        if (node && node.loc !== locStub) {\n          addMapping(node.loc.end);\n        }\n      }\n    },\n    indent() {\n      newline(++context.indentLevel);\n    },\n    deindent(withoutNewLine = false) {\n      if (withoutNewLine) {\n        --context.indentLevel;\n      } else {\n        newline(--context.indentLevel);\n      }\n    },\n    newline() {\n      newline(context.indentLevel);\n    }\n  };\n  function newline(n) {\n    context.push(\"\\n\" + `  `.repeat(n), 0 /* Start */);\n  }\n  function addMapping(loc, name = null) {\n    const { _names, _mappings } = context.map;\n    if (name !== null && !_names.has(name))\n      _names.add(name);\n    _mappings.add({\n      originalLine: loc.line,\n      originalColumn: loc.column - 1,\n      // source-map column is 0 based\n      generatedLine: context.line,\n      generatedColumn: context.column - 1,\n      source: filename,\n      name\n    });\n  }\n  if (sourceMap) {\n    context.map = new SourceMapGenerator$6();\n    context.map.setSourceContent(filename, context.source);\n    context.map._sources.add(filename);\n  }\n  return context;\n}\nfunction generate(ast, options = {}) {\n  const context = createCodegenContext(ast, options);\n  if (options.onContextCreated)\n    options.onContextCreated(context);\n  const {\n    mode,\n    push,\n    prefixIdentifiers,\n    indent,\n    deindent,\n    newline,\n    scopeId,\n    ssr\n  } = context;\n  const helpers = Array.from(ast.helpers);\n  const hasHelpers = helpers.length > 0;\n  const useWithBlock = !prefixIdentifiers && mode !== \"module\";\n  const genScopeId = scopeId != null && mode === \"module\";\n  const isSetupInlined = !!options.inline;\n  const preambleContext = isSetupInlined ? createCodegenContext(ast, options) : context;\n  if (mode === \"module\") {\n    genModulePreamble(ast, preambleContext, genScopeId, isSetupInlined);\n  } else {\n    genFunctionPreamble(ast, preambleContext);\n  }\n  const functionName = ssr ? `ssrRender` : `render`;\n  const args = ssr ? [\"_ctx\", \"_push\", \"_parent\", \"_attrs\"] : [\"_ctx\", \"_cache\"];\n  if (options.bindingMetadata && !options.inline) {\n    args.push(\"$props\", \"$setup\", \"$data\", \"$options\");\n  }\n  const signature = options.isTS ? args.map((arg) => `${arg}: any`).join(\",\") : args.join(\", \");\n  if (isSetupInlined) {\n    push(`(${signature}) => {`);\n  } else {\n    push(`function ${functionName}(${signature}) {`);\n  }\n  indent();\n  if (useWithBlock) {\n    push(`with (_ctx) {`);\n    indent();\n    if (hasHelpers) {\n      push(\n        `const { ${helpers.map(aliasHelper).join(\", \")} } = _Vue\n`,\n        -1 /* End */\n      );\n      newline();\n    }\n  }\n  if (ast.components.length) {\n    genAssets(ast.components, \"component\", context);\n    if (ast.directives.length || ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.directives.length) {\n    genAssets(ast.directives, \"directive\", context);\n    if (ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.temps > 0) {\n    push(`let `);\n    for (let i = 0; i < ast.temps; i++) {\n      push(`${i > 0 ? `, ` : ``}_temp${i}`);\n    }\n  }\n  if (ast.components.length || ast.directives.length || ast.temps) {\n    push(`\n`, 0 /* Start */);\n    newline();\n  }\n  if (!ssr) {\n    push(`return `);\n  }\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context);\n  } else {\n    push(`null`);\n  }\n  if (useWithBlock) {\n    deindent();\n    push(`}`);\n  }\n  deindent();\n  push(`}`);\n  return {\n    ast,\n    code: context.code,\n    preamble: isSetupInlined ? preambleContext.code : ``,\n    map: context.map ? context.map.toJSON() : void 0\n  };\n}\nfunction genFunctionPreamble(ast, context) {\n  const {\n    ssr,\n    prefixIdentifiers,\n    push,\n    newline,\n    runtimeModuleName,\n    runtimeGlobalName,\n    ssrRuntimeModuleName\n  } = context;\n  const VueBinding = ssr ? `require(${JSON.stringify(runtimeModuleName)})` : runtimeGlobalName;\n  const helpers = Array.from(ast.helpers);\n  if (helpers.length > 0) {\n    if (prefixIdentifiers) {\n      push(\n        `const { ${helpers.map(aliasHelper).join(\", \")} } = ${VueBinding}\n`,\n        -1 /* End */\n      );\n    } else {\n      push(`const _Vue = ${VueBinding}\n`, -1 /* End */);\n      if (ast.hoists.length) {\n        const staticHelpers = [\n          CREATE_VNODE,\n          CREATE_ELEMENT_VNODE,\n          CREATE_COMMENT,\n          CREATE_TEXT,\n          CREATE_STATIC\n        ].filter((helper) => helpers.includes(helper)).map(aliasHelper).join(\", \");\n        push(`const { ${staticHelpers} } = _Vue\n`, -1 /* End */);\n      }\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `const { ${ast.ssrHelpers.map(aliasHelper).join(\", \")} } = require(\"${ssrRuntimeModuleName}\")\n`,\n      -1 /* End */\n    );\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  push(`return `);\n}\nfunction genModulePreamble(ast, context, genScopeId, inline) {\n  const {\n    push,\n    newline,\n    optimizeImports,\n    runtimeModuleName,\n    ssrRuntimeModuleName\n  } = context;\n  if (genScopeId && ast.hoists.length) {\n    ast.helpers.add(PUSH_SCOPE_ID);\n    ast.helpers.add(POP_SCOPE_ID);\n  }\n  if (ast.helpers.size) {\n    const helpers = Array.from(ast.helpers);\n    if (optimizeImports) {\n      push(\n        `import { ${helpers.map((s) => helperNameMap[s]).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`,\n        -1 /* End */\n      );\n      push(\n        `\n// Binding optimization for webpack code-split\nconst ${helpers.map((s) => `_${helperNameMap[s]} = ${helperNameMap[s]}`).join(\", \")}\n`,\n        -1 /* End */\n      );\n    } else {\n      push(\n        `import { ${helpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from ${JSON.stringify(runtimeModuleName)}\n`,\n        -1 /* End */\n      );\n    }\n  }\n  if (ast.ssrHelpers && ast.ssrHelpers.length) {\n    push(\n      `import { ${ast.ssrHelpers.map((s) => `${helperNameMap[s]} as _${helperNameMap[s]}`).join(\", \")} } from \"${ssrRuntimeModuleName}\"\n`,\n      -1 /* End */\n    );\n  }\n  if (ast.imports.length) {\n    genImports(ast.imports, context);\n    newline();\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  if (!inline) {\n    push(`export `);\n  }\n}\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\n  const resolver = helper(\n    type === \"component\" ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE\n  );\n  for (let i = 0; i < assets.length; i++) {\n    let id = assets[i];\n    const maybeSelfReference = id.endsWith(\"__self\");\n    if (maybeSelfReference) {\n      id = id.slice(0, -6);\n    }\n    push(\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`\n    );\n    if (i < assets.length - 1) {\n      newline();\n    }\n  }\n}\nfunction genHoists(hoists, context) {\n  if (!hoists.length) {\n    return;\n  }\n  context.pure = true;\n  const { push, newline, helper, scopeId, mode } = context;\n  const genScopeId = scopeId != null && mode !== \"function\";\n  newline();\n  if (genScopeId) {\n    push(\n      `const _withScopeId = n => (${helper(\n        PUSH_SCOPE_ID\n      )}(\"${scopeId}\"),n=n(),${helper(POP_SCOPE_ID)}(),n)`\n    );\n    newline();\n  }\n  for (let i = 0; i < hoists.length; i++) {\n    const exp = hoists[i];\n    if (exp) {\n      const needScopeIdWrapper = genScopeId && exp.type === 13;\n      push(\n        `const _hoisted_${i + 1} = ${needScopeIdWrapper ? `${PURE_ANNOTATION} _withScopeId(() => ` : ``}`\n      );\n      genNode(exp, context);\n      if (needScopeIdWrapper) {\n        push(`)`);\n      }\n      newline();\n    }\n  }\n  context.pure = false;\n}\nfunction genImports(importsOptions, context) {\n  if (!importsOptions.length) {\n    return;\n  }\n  importsOptions.forEach((imports) => {\n    context.push(`import `);\n    genNode(imports.exp, context);\n    context.push(` from '${imports.path}'`);\n    context.newline();\n  });\n}\nfunction isText(n) {\n  return isString$2(n) || n.type === 4 || n.type === 2 || n.type === 5 || n.type === 8;\n}\nfunction genNodeListAsArray(nodes, context) {\n  const multilines = nodes.length > 3 || nodes.some((n) => isArray$3(n) || !isText(n));\n  context.push(`[`);\n  multilines && context.indent();\n  genNodeList(nodes, context, multilines);\n  multilines && context.deindent();\n  context.push(`]`);\n}\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\n  const { push, newline } = context;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (isString$2(node)) {\n      push(node, -3 /* Unknown */);\n    } else if (isArray$3(node)) {\n      genNodeListAsArray(node, context);\n    } else {\n      genNode(node, context);\n    }\n    if (i < nodes.length - 1) {\n      if (multilines) {\n        comma && push(\",\");\n        newline();\n      } else {\n        comma && push(\", \");\n      }\n    }\n  }\n}\nfunction genNode(node, context) {\n  if (isString$2(node)) {\n    context.push(node, -3 /* Unknown */);\n    return;\n  }\n  if (isSymbol$1(node)) {\n    context.push(context.helper(node));\n    return;\n  }\n  switch (node.type) {\n    case 1:\n    case 9:\n    case 11:\n      assert(\n        node.codegenNode != null,\n        `Codegen node is missing for element/if/for node. Apply appropriate transforms first.`\n      );\n      genNode(node.codegenNode, context);\n      break;\n    case 2:\n      genText(node, context);\n      break;\n    case 4:\n      genExpression(node, context);\n      break;\n    case 5:\n      genInterpolation(node, context);\n      break;\n    case 12:\n      genNode(node.codegenNode, context);\n      break;\n    case 8:\n      genCompoundExpression(node, context);\n      break;\n    case 3:\n      genComment(node, context);\n      break;\n    case 13:\n      genVNodeCall(node, context);\n      break;\n    case 14:\n      genCallExpression(node, context);\n      break;\n    case 15:\n      genObjectExpression(node, context);\n      break;\n    case 17:\n      genArrayExpression(node, context);\n      break;\n    case 18:\n      genFunctionExpression(node, context);\n      break;\n    case 19:\n      genConditionalExpression(node, context);\n      break;\n    case 20:\n      genCacheExpression(node, context);\n      break;\n    case 21:\n      genNodeList(node.body, context, true, false);\n      break;\n    case 22:\n      genTemplateLiteral(node, context);\n      break;\n    case 23:\n      genIfStatement(node, context);\n      break;\n    case 24:\n      genAssignmentExpression(node, context);\n      break;\n    case 25:\n      genSequenceExpression(node, context);\n      break;\n    case 26:\n      genReturnStatement(node, context);\n      break;\n    case 10:\n      break;\n    default:\n      {\n        assert(false, `unhandled codegen node type: ${node.type}`);\n        const exhaustiveCheck = node;\n        return exhaustiveCheck;\n      }\n  }\n}\nfunction genText(node, context) {\n  context.push(JSON.stringify(node.content), -3 /* Unknown */, node);\n}\nfunction genExpression(node, context) {\n  const { content, isStatic } = node;\n  context.push(\n    isStatic ? JSON.stringify(content) : content,\n    -3 /* Unknown */,\n    node\n  );\n}\nfunction genInterpolation(node, context) {\n  const { push, helper, pure } = context;\n  if (pure)\n    push(PURE_ANNOTATION);\n  push(`${helper(TO_DISPLAY_STRING)}(`);\n  genNode(node.content, context);\n  push(`)`);\n}\nfunction genCompoundExpression(node, context) {\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i];\n    if (isString$2(child)) {\n      context.push(child, -3 /* Unknown */);\n    } else {\n      genNode(child, context);\n    }\n  }\n}\nfunction genExpressionAsPropertyKey(node, context) {\n  const { push } = context;\n  if (node.type === 8) {\n    push(`[`);\n    genCompoundExpression(node, context);\n    push(`]`);\n  } else if (node.isStatic) {\n    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);\n    push(text, -2 /* None */, node);\n  } else {\n    push(`[${node.content}]`, -3 /* Unknown */, node);\n  }\n}\nfunction genComment(node, context) {\n  const { push, helper, pure } = context;\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(\n    `${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`,\n    -3 /* Unknown */,\n    node\n  );\n}\nfunction genVNodeCall(node, context) {\n  const { push, helper, pure } = context;\n  const {\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent\n  } = node;\n  if (directives) {\n    push(helper(WITH_DIRECTIVES) + `(`);\n  }\n  if (isBlock) {\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\n  }\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent) : getVNodeHelper(context.inSSR, isComponent);\n  push(helper(callHelper) + `(`, -2 /* None */, node);\n  genNodeList(\n    genNullableArgs([tag, props, children, patchFlag, dynamicProps]),\n    context\n  );\n  push(`)`);\n  if (isBlock) {\n    push(`)`);\n  }\n  if (directives) {\n    push(`, `);\n    genNode(directives, context);\n    push(`)`);\n  }\n}\nfunction genNullableArgs(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i] != null)\n      break;\n  }\n  return args.slice(0, i + 1).map((arg) => arg || `null`);\n}\nfunction genCallExpression(node, context) {\n  const { push, helper, pure } = context;\n  const callee = isString$2(node.callee) ? node.callee : helper(node.callee);\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(callee + `(`, -2 /* None */, node);\n  genNodeList(node.arguments, context);\n  push(`)`);\n}\nfunction genObjectExpression(node, context) {\n  const { push, indent, deindent, newline } = context;\n  const { properties } = node;\n  if (!properties.length) {\n    push(`{}`, -2 /* None */, node);\n    return;\n  }\n  const multilines = properties.length > 1 || properties.some((p) => p.value.type !== 4);\n  push(multilines ? `{` : `{ `);\n  multilines && indent();\n  for (let i = 0; i < properties.length; i++) {\n    const { key, value } = properties[i];\n    genExpressionAsPropertyKey(key, context);\n    push(`: `);\n    genNode(value, context);\n    if (i < properties.length - 1) {\n      push(`,`);\n      newline();\n    }\n  }\n  multilines && deindent();\n  push(multilines ? `}` : ` }`);\n}\nfunction genArrayExpression(node, context) {\n  genNodeListAsArray(node.elements, context);\n}\nfunction genFunctionExpression(node, context) {\n  const { push, indent, deindent } = context;\n  const { params, returns, body, newline, isSlot } = node;\n  if (isSlot) {\n    push(`_${helperNameMap[WITH_CTX]}(`);\n  }\n  push(`(`, -2 /* None */, node);\n  if (isArray$3(params)) {\n    genNodeList(params, context);\n  } else if (params) {\n    genNode(params, context);\n  }\n  push(`) => `);\n  if (newline || body) {\n    push(`{`);\n    indent();\n  }\n  if (returns) {\n    if (newline) {\n      push(`return `);\n    }\n    if (isArray$3(returns)) {\n      genNodeListAsArray(returns, context);\n    } else {\n      genNode(returns, context);\n    }\n  } else if (body) {\n    genNode(body, context);\n  }\n  if (newline || body) {\n    deindent();\n    push(`}`);\n  }\n  if (isSlot) {\n    push(`)`);\n  }\n}\nfunction genConditionalExpression(node, context) {\n  const { test, consequent, alternate, newline: needNewline } = node;\n  const { push, indent, deindent, newline } = context;\n  if (test.type === 4) {\n    const needsParens = !isSimpleIdentifier(test.content);\n    needsParens && push(`(`);\n    genExpression(test, context);\n    needsParens && push(`)`);\n  } else {\n    push(`(`);\n    genNode(test, context);\n    push(`)`);\n  }\n  needNewline && indent();\n  context.indentLevel++;\n  needNewline || push(` `);\n  push(`? `);\n  genNode(consequent, context);\n  context.indentLevel--;\n  needNewline && newline();\n  needNewline || push(` `);\n  push(`: `);\n  const isNested = alternate.type === 19;\n  if (!isNested) {\n    context.indentLevel++;\n  }\n  genNode(alternate, context);\n  if (!isNested) {\n    context.indentLevel--;\n  }\n  needNewline && deindent(\n    true\n    /* without newline */\n  );\n}\nfunction genCacheExpression(node, context) {\n  const { push, helper, indent, deindent, newline } = context;\n  push(`_cache[${node.index}] || (`);\n  if (node.isVNode) {\n    indent();\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\n    newline();\n  }\n  push(`_cache[${node.index}] = `);\n  genNode(node.value, context);\n  if (node.isVNode) {\n    push(`,`);\n    newline();\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`);\n    newline();\n    push(`_cache[${node.index}]`);\n    deindent();\n  }\n  push(`)`);\n}\nfunction genTemplateLiteral(node, context) {\n  const { push, indent, deindent } = context;\n  push(\"`\");\n  const l = node.elements.length;\n  const multilines = l > 3;\n  for (let i = 0; i < l; i++) {\n    const e = node.elements[i];\n    if (isString$2(e)) {\n      push(e.replace(/(`|\\$|\\\\)/g, \"\\\\$1\"), -3 /* Unknown */);\n    } else {\n      push(\"${\");\n      if (multilines)\n        indent();\n      genNode(e, context);\n      if (multilines)\n        deindent();\n      push(\"}\");\n    }\n  }\n  push(\"`\");\n}\nfunction genIfStatement(node, context) {\n  const { push, indent, deindent } = context;\n  const { test, consequent, alternate } = node;\n  push(`if (`);\n  genNode(test, context);\n  push(`) {`);\n  indent();\n  genNode(consequent, context);\n  deindent();\n  push(`}`);\n  if (alternate) {\n    push(` else `);\n    if (alternate.type === 23) {\n      genIfStatement(alternate, context);\n    } else {\n      push(`{`);\n      indent();\n      genNode(alternate, context);\n      deindent();\n      push(`}`);\n    }\n  }\n}\nfunction genAssignmentExpression(node, context) {\n  genNode(node.left, context);\n  context.push(` = `);\n  genNode(node.right, context);\n}\nfunction genSequenceExpression(node, context) {\n  context.push(`(`);\n  genNodeList(node.expressions, context);\n  context.push(`)`);\n}\nfunction genReturnStatement({ returns }, context) {\n  context.push(`return `);\n  if (isArray$3(returns)) {\n    genNodeListAsArray(returns, context);\n  } else {\n    genNode(returns, context);\n  }\n}\n\nconst isLiteralWhitelisted = /* @__PURE__ */ makeMap(\"true,false,null,this\");\nconst constantBailRE = /\\w\\s*\\(|\\.[^\\d]/;\nconst transformExpression = (node, context) => {\n  if (node.type === 5) {\n    node.content = processExpression(\n      node.content,\n      context\n    );\n  } else if (node.type === 1) {\n    for (let i = 0; i < node.props.length; i++) {\n      const dir = node.props[i];\n      if (dir.type === 7 && dir.name !== \"for\") {\n        const exp = dir.exp;\n        const arg = dir.arg;\n        if (exp && exp.type === 4 && !(dir.name === \"on\" && arg)) {\n          dir.exp = processExpression(\n            exp,\n            context,\n            // slot args must be processed as function params\n            dir.name === \"slot\"\n          );\n        }\n        if (arg && arg.type === 4 && !arg.isStatic) {\n          dir.arg = processExpression(arg, context);\n        }\n      }\n    }\n  }\n};\nfunction processExpression(node, context, asParams = false, asRawStatements = false, localVars = Object.create(context.identifiers)) {\n  if (!context.prefixIdentifiers || !node.content.trim()) {\n    return node;\n  }\n  const { inline, bindingMetadata } = context;\n  const rewriteIdentifier = (raw, parent, id) => {\n    const type = hasOwn(bindingMetadata, raw) && bindingMetadata[raw];\n    if (inline) {\n      const isAssignmentLVal = parent && parent.type === \"AssignmentExpression\" && parent.left === id;\n      const isUpdateArg = parent && parent.type === \"UpdateExpression\" && parent.argument === id;\n      const isDestructureAssignment = parent && isInDestructureAssignment(parent, parentStack);\n      const isNewExpression = parent && isInNewExpression(parentStack);\n      const wrapWithUnref = (raw2) => {\n        const wrapped = `${context.helperString(UNREF)}(${raw2})`;\n        return isNewExpression ? `(${wrapped})` : wrapped;\n      };\n      if (isConst(type) || type === \"setup-reactive-const\" || localVars[raw]) {\n        return raw;\n      } else if (type === \"setup-ref\") {\n        return `${raw}.value`;\n      } else if (type === \"setup-maybe-ref\") {\n        return isAssignmentLVal || isUpdateArg || isDestructureAssignment ? `${raw}.value` : wrapWithUnref(raw);\n      } else if (type === \"setup-let\") {\n        if (isAssignmentLVal) {\n          const { right: rVal, operator } = parent;\n          const rExp = rawExp.slice(rVal.start - 1, rVal.end - 1);\n          const rExpString = stringifyExpression(\n            processExpression(\n              createSimpleExpression(rExp, false),\n              context,\n              false,\n              false,\n              knownIds\n            )\n          );\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${raw}.value ${operator} ${rExpString} : ${raw}`;\n        } else if (isUpdateArg) {\n          id.start = parent.start;\n          id.end = parent.end;\n          const { prefix: isPrefix, operator } = parent;\n          const prefix = isPrefix ? operator : ``;\n          const postfix = isPrefix ? `` : operator;\n          return `${context.helperString(IS_REF)}(${raw})${context.isTS ? ` //@ts-ignore\n` : ``} ? ${prefix}${raw}.value${postfix} : ${prefix}${raw}${postfix}`;\n        } else if (isDestructureAssignment) {\n          return raw;\n        } else {\n          return wrapWithUnref(raw);\n        }\n      } else if (type === \"props\") {\n        return genPropsAccessExp(raw);\n      } else if (type === \"props-aliased\") {\n        return genPropsAccessExp(bindingMetadata.__propsAliases[raw]);\n      }\n    } else {\n      if (type && type.startsWith(\"setup\") || type === \"literal-const\") {\n        return `$setup.${raw}`;\n      } else if (type === \"props-aliased\") {\n        return `$props['${bindingMetadata.__propsAliases[raw]}']`;\n      } else if (type) {\n        return `$${type}.${raw}`;\n      }\n    }\n    return `_ctx.${raw}`;\n  };\n  const rawExp = node.content;\n  const bailConstant = constantBailRE.test(rawExp);\n  let ast = node.ast;\n  if (ast === false) {\n    return node;\n  }\n  if (ast === null || !ast && isSimpleIdentifier(rawExp)) {\n    const isScopeVarReference = context.identifiers[rawExp];\n    const isAllowedGlobal = isGloballyAllowed(rawExp);\n    const isLiteral = isLiteralWhitelisted(rawExp);\n    if (!asParams && !isScopeVarReference && !isLiteral && (!isAllowedGlobal || bindingMetadata[rawExp])) {\n      if (isConst(bindingMetadata[rawExp])) {\n        node.constType = 1;\n      }\n      node.content = rewriteIdentifier(rawExp);\n    } else if (!isScopeVarReference) {\n      if (isLiteral) {\n        node.constType = 3;\n      } else {\n        node.constType = 2;\n      }\n    }\n    return node;\n  }\n  if (!ast) {\n    const source = asRawStatements ? ` ${rawExp} ` : `(${rawExp})${asParams ? `=>{}` : ``}`;\n    try {\n      ast = parse_1$1(source, {\n        plugins: context.expressionPlugins\n      }).program;\n    } catch (e) {\n      context.onError(\n        createCompilerError(\n          45,\n          node.loc,\n          void 0,\n          e.message\n        )\n      );\n      return node;\n    }\n  }\n  const ids = [];\n  const parentStack = [];\n  const knownIds = Object.create(context.identifiers);\n  walkIdentifiers(\n    ast,\n    (node2, parent, _, isReferenced, isLocal) => {\n      if (isStaticPropertyKey(node2, parent)) {\n        return;\n      }\n      const needPrefix = isReferenced && canPrefix(node2);\n      if (needPrefix && !isLocal) {\n        if (isStaticProperty(parent) && parent.shorthand) {\n          node2.prefix = `${node2.name}: `;\n        }\n        node2.name = rewriteIdentifier(node2.name, parent, node2);\n        ids.push(node2);\n      } else {\n        if (!(needPrefix && isLocal) && !bailConstant) {\n          node2.isConstant = true;\n        }\n        ids.push(node2);\n      }\n    },\n    true,\n    // invoke on ALL identifiers\n    parentStack,\n    knownIds\n  );\n  const children = [];\n  ids.sort((a, b) => a.start - b.start);\n  ids.forEach((id, i) => {\n    const start = id.start - 1;\n    const end = id.end - 1;\n    const last = ids[i - 1];\n    const leadingText = rawExp.slice(last ? last.end - 1 : 0, start);\n    if (leadingText.length || id.prefix) {\n      children.push(leadingText + (id.prefix || ``));\n    }\n    const source = rawExp.slice(start, end);\n    children.push(\n      createSimpleExpression(\n        id.name,\n        false,\n        {\n          start: advancePositionWithClone(node.loc.start, source, start),\n          end: advancePositionWithClone(node.loc.start, source, end),\n          source\n        },\n        id.isConstant ? 3 : 0\n      )\n    );\n    if (i === ids.length - 1 && end < rawExp.length) {\n      children.push(rawExp.slice(end));\n    }\n  });\n  let ret;\n  if (children.length) {\n    ret = createCompoundExpression(children, node.loc);\n    ret.ast = ast;\n  } else {\n    ret = node;\n    ret.constType = bailConstant ? 0 : 3;\n  }\n  ret.identifiers = Object.keys(knownIds);\n  return ret;\n}\nfunction canPrefix(id) {\n  if (isGloballyAllowed(id.name)) {\n    return false;\n  }\n  if (id.name === \"require\") {\n    return false;\n  }\n  return true;\n}\nfunction stringifyExpression(exp) {\n  if (isString$2(exp)) {\n    return exp;\n  } else if (exp.type === 4) {\n    return exp.content;\n  } else {\n    return exp.children.map(stringifyExpression).join(\"\");\n  }\n}\nfunction isConst(type) {\n  return type === \"setup-const\" || type === \"literal-const\";\n}\n\nconst transformIf = createStructuralDirectiveTransform(\n  /^(if|else|else-if)$/,\n  (node, dir, context) => {\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n      const siblings = context.parent.children;\n      let i = siblings.indexOf(ifNode);\n      let key = 0;\n      while (i-- >= 0) {\n        const sibling = siblings[i];\n        if (sibling && sibling.type === 9) {\n          key += sibling.branches.length;\n        }\n      }\n      return () => {\n        if (isRoot) {\n          ifNode.codegenNode = createCodegenNodeForBranch(\n            branch,\n            key,\n            context\n          );\n        } else {\n          const parentCondition = getParentCondition(ifNode.codegenNode);\n          parentCondition.alternate = createCodegenNodeForBranch(\n            branch,\n            key + ifNode.branches.length - 1,\n            context\n          );\n        }\n      };\n    });\n  }\n);\nfunction processIf(node, dir, context, processCodegen) {\n  if (dir.name !== \"else\" && (!dir.exp || !dir.exp.content.trim())) {\n    const loc = dir.exp ? dir.exp.loc : node.loc;\n    context.onError(\n      createCompilerError(28, dir.loc)\n    );\n    dir.exp = createSimpleExpression(`true`, false, loc);\n  }\n  if (context.prefixIdentifiers && dir.exp) {\n    dir.exp = processExpression(dir.exp, context);\n  }\n  if (dir.name === \"if\") {\n    const branch = createIfBranch(node, dir);\n    const ifNode = {\n      type: 9,\n      loc: node.loc,\n      branches: [branch]\n    };\n    context.replaceNode(ifNode);\n    if (processCodegen) {\n      return processCodegen(ifNode, branch, true);\n    }\n  } else {\n    const siblings = context.parent.children;\n    const comments = [];\n    let i = siblings.indexOf(node);\n    while (i-- >= -1) {\n      const sibling = siblings[i];\n      if (sibling && sibling.type === 3) {\n        context.removeNode(sibling);\n        comments.unshift(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 2 && !sibling.content.trim().length) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 9) {\n        if (dir.name === \"else-if\" && sibling.branches[sibling.branches.length - 1].condition === void 0) {\n          context.onError(\n            createCompilerError(30, node.loc)\n          );\n        }\n        context.removeNode();\n        const branch = createIfBranch(node, dir);\n        if (comments.length && // #3619 ignore comments if the v-if is direct child of <transition>\n        !(context.parent && context.parent.type === 1 && (context.parent.tag === \"transition\" || context.parent.tag === \"Transition\"))) {\n          branch.children = [...comments, ...branch.children];\n        }\n        {\n          const key = branch.userKey;\n          if (key) {\n            sibling.branches.forEach(({ userKey }) => {\n              if (isSameKey(userKey, key)) {\n                context.onError(\n                  createCompilerError(\n                    29,\n                    branch.userKey.loc\n                  )\n                );\n              }\n            });\n          }\n        }\n        sibling.branches.push(branch);\n        const onExit = processCodegen && processCodegen(sibling, branch, false);\n        traverseNode(branch, context);\n        if (onExit)\n          onExit();\n        context.currentNode = null;\n      } else {\n        context.onError(\n          createCompilerError(30, node.loc)\n        );\n      }\n      break;\n    }\n  }\n}\nfunction createIfBranch(node, dir) {\n  const isTemplateIf = node.tagType === 3;\n  return {\n    type: 10,\n    loc: node.loc,\n    condition: dir.name === \"else\" ? void 0 : dir.exp,\n    children: isTemplateIf && !findDir(node, \"for\") ? node.children : [node],\n    userKey: findProp(node, `key`),\n    isTemplateIf\n  };\n}\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\n  if (branch.condition) {\n    return createConditionalExpression(\n      branch.condition,\n      createChildrenCodegenNode(branch, keyIndex, context),\n      // make sure to pass in asBlock: true so that the comment node call\n      // closes the current block.\n      createCallExpression(context.helper(CREATE_COMMENT), [\n        '\"v-if\"' ,\n        \"true\"\n      ])\n    );\n  } else {\n    return createChildrenCodegenNode(branch, keyIndex, context);\n  }\n}\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\n  const { helper } = context;\n  const keyProperty = createObjectProperty(\n    `key`,\n    createSimpleExpression(\n      `${keyIndex}`,\n      false,\n      locStub,\n      2\n    )\n  );\n  const { children } = branch;\n  const firstChild = children[0];\n  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1;\n  if (needFragmentWrapper) {\n    if (children.length === 1 && firstChild.type === 11) {\n      const vnodeCall = firstChild.codegenNode;\n      injectProp(vnodeCall, keyProperty, context);\n      return vnodeCall;\n    } else {\n      let patchFlag = 64;\n      let patchFlagText = PatchFlagNames[64];\n      if (!branch.isTemplateIf && children.filter((c) => c.type !== 3).length === 1) {\n        patchFlag |= 2048;\n        patchFlagText += `, ${PatchFlagNames[2048]}`;\n      }\n      return createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        createObjectExpression([keyProperty]),\n        children,\n        patchFlag + (` /* ${patchFlagText} */` ),\n        void 0,\n        void 0,\n        true,\n        false,\n        false,\n        branch.loc\n      );\n    }\n  } else {\n    const ret = firstChild.codegenNode;\n    const vnodeCall = getMemoedVNodeCall(ret);\n    if (vnodeCall.type === 13) {\n      convertToBlock(vnodeCall, context);\n    }\n    injectProp(vnodeCall, keyProperty, context);\n    return ret;\n  }\n}\nfunction isSameKey(a, b) {\n  if (!a || a.type !== b.type) {\n    return false;\n  }\n  if (a.type === 6) {\n    if (a.value.content !== b.value.content) {\n      return false;\n    }\n  } else {\n    const exp = a.exp;\n    const branchExp = b.exp;\n    if (exp.type !== branchExp.type) {\n      return false;\n    }\n    if (exp.type !== 4 || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getParentCondition(node) {\n  while (true) {\n    if (node.type === 19) {\n      if (node.alternate.type === 19) {\n        node = node.alternate;\n      } else {\n        return node;\n      }\n    } else if (node.type === 20) {\n      node = node.value;\n    }\n  }\n}\n\nconst transformFor = createStructuralDirectiveTransform(\n  \"for\",\n  (node, dir, context) => {\n    const { helper, removeHelper } = context;\n    return processFor(node, dir, context, (forNode) => {\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\n        forNode.source\n      ]);\n      const isTemplate = isTemplateNode(node);\n      const memo = findDir(node, \"memo\");\n      const keyProp = findProp(node, `key`);\n      const keyExp = keyProp && (keyProp.type === 6 ? createSimpleExpression(keyProp.value.content, true) : keyProp.exp);\n      const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\n      if (isTemplate) {\n        if (memo) {\n          memo.exp = processExpression(\n            memo.exp,\n            context\n          );\n        }\n        if (keyProperty && keyProp.type !== 6) {\n          keyProperty.value = processExpression(\n            keyProperty.value,\n            context\n          );\n        }\n      }\n      const isStableFragment = forNode.source.type === 4 && forNode.source.constType > 0;\n      const fragmentFlag = isStableFragment ? 64 : keyProp ? 128 : 256;\n      forNode.codegenNode = createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        void 0,\n        renderExp,\n        fragmentFlag + (` /* ${PatchFlagNames[fragmentFlag]} */` ),\n        void 0,\n        void 0,\n        true,\n        !isStableFragment,\n        false,\n        node.loc\n      );\n      return () => {\n        let childBlock;\n        const { children } = forNode;\n        if (isTemplate) {\n          node.children.some((c) => {\n            if (c.type === 1) {\n              const key = findProp(c, \"key\");\n              if (key) {\n                context.onError(\n                  createCompilerError(\n                    33,\n                    key.loc\n                  )\n                );\n                return true;\n              }\n            }\n          });\n        }\n        const needFragmentWrapper = children.length !== 1 || children[0].type !== 1;\n        const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] : null;\n        if (slotOutlet) {\n          childBlock = slotOutlet.codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n        } else if (needFragmentWrapper) {\n          childBlock = createVNodeCall(\n            context,\n            helper(FRAGMENT),\n            keyProperty ? createObjectExpression([keyProperty]) : void 0,\n            node.children,\n            64 + (` /* ${PatchFlagNames[64]} */` ),\n            void 0,\n            void 0,\n            true,\n            void 0,\n            false\n          );\n        } else {\n          childBlock = children[0].codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n          if (childBlock.isBlock !== !isStableFragment) {\n            if (childBlock.isBlock) {\n              removeHelper(OPEN_BLOCK);\n              removeHelper(\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent)\n              );\n            } else {\n              removeHelper(\n                getVNodeHelper(context.inSSR, childBlock.isComponent)\n              );\n            }\n          }\n          childBlock.isBlock = !isStableFragment;\n          if (childBlock.isBlock) {\n            helper(OPEN_BLOCK);\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n          } else {\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n          }\n        }\n        if (memo) {\n          const loop = createFunctionExpression(\n            createForLoopParams(forNode.parseResult, [\n              createSimpleExpression(`_cached`)\n            ])\n          );\n          loop.body = createBlockStatement([\n            createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\n            createCompoundExpression([\n              `if (_cached`,\n              ...keyExp ? [` && _cached.key === `, keyExp] : [],\n              ` && ${context.helperString(\n                IS_MEMO_SAME\n              )}(_cached, _memo)) return _cached`\n            ]),\n            createCompoundExpression([`const _item = `, childBlock]),\n            createSimpleExpression(`_item.memo = _memo`),\n            createSimpleExpression(`return _item`)\n          ]);\n          renderExp.arguments.push(\n            loop,\n            createSimpleExpression(`_cache`),\n            createSimpleExpression(String(context.cached++))\n          );\n        } else {\n          renderExp.arguments.push(\n            createFunctionExpression(\n              createForLoopParams(forNode.parseResult),\n              childBlock,\n              true\n            )\n          );\n        }\n      };\n    });\n  }\n);\nfunction processFor(node, dir, context, processCodegen) {\n  if (!dir.exp) {\n    context.onError(\n      createCompilerError(31, dir.loc)\n    );\n    return;\n  }\n  const parseResult = dir.forParseResult;\n  if (!parseResult) {\n    context.onError(\n      createCompilerError(32, dir.loc)\n    );\n    return;\n  }\n  finalizeForParseResult(parseResult, context);\n  const { addIdentifiers, removeIdentifiers, scopes } = context;\n  const { source, value, key, index } = parseResult;\n  const forNode = {\n    type: 11,\n    loc: dir.loc,\n    source,\n    valueAlias: value,\n    keyAlias: key,\n    objectIndexAlias: index,\n    parseResult,\n    children: isTemplateNode(node) ? node.children : [node]\n  };\n  context.replaceNode(forNode);\n  scopes.vFor++;\n  if (context.prefixIdentifiers) {\n    value && addIdentifiers(value);\n    key && addIdentifiers(key);\n    index && addIdentifiers(index);\n  }\n  const onExit = processCodegen && processCodegen(forNode);\n  return () => {\n    scopes.vFor--;\n    if (context.prefixIdentifiers) {\n      value && removeIdentifiers(value);\n      key && removeIdentifiers(key);\n      index && removeIdentifiers(index);\n    }\n    if (onExit)\n      onExit();\n  };\n}\nfunction finalizeForParseResult(result, context) {\n  if (result.finalized)\n    return;\n  if (context.prefixIdentifiers) {\n    result.source = processExpression(\n      result.source,\n      context\n    );\n    if (result.key) {\n      result.key = processExpression(\n        result.key,\n        context,\n        true\n      );\n    }\n    if (result.index) {\n      result.index = processExpression(\n        result.index,\n        context,\n        true\n      );\n    }\n    if (result.value) {\n      result.value = processExpression(\n        result.value,\n        context,\n        true\n      );\n    }\n  }\n  result.finalized = true;\n}\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\n  return createParamsList([value, key, index, ...memoArgs]);\n}\nfunction createParamsList(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i])\n      break;\n  }\n  return args.slice(0, i + 1).map((arg, i2) => arg || createSimpleExpression(`_`.repeat(i2 + 1), false));\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\nconst trackSlotScopes = (node, context) => {\n  if (node.type === 1 && (node.tagType === 1 || node.tagType === 3)) {\n    const vSlot = findDir(node, \"slot\");\n    if (vSlot) {\n      const slotProps = vSlot.exp;\n      if (context.prefixIdentifiers) {\n        slotProps && context.addIdentifiers(slotProps);\n      }\n      context.scopes.vSlot++;\n      return () => {\n        if (context.prefixIdentifiers) {\n          slotProps && context.removeIdentifiers(slotProps);\n        }\n        context.scopes.vSlot--;\n      };\n    }\n  }\n};\nconst trackVForSlotScopes = (node, context) => {\n  let vFor;\n  if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, \"for\"))) {\n    const result = vFor.forParseResult;\n    if (result) {\n      finalizeForParseResult(result, context);\n      const { value, key, index } = result;\n      const { addIdentifiers, removeIdentifiers } = context;\n      value && addIdentifiers(value);\n      key && addIdentifiers(key);\n      index && addIdentifiers(index);\n      return () => {\n        value && removeIdentifiers(value);\n        key && removeIdentifiers(key);\n        index && removeIdentifiers(index);\n      };\n    }\n  }\n};\nconst buildClientSlotFn = (props, _vForExp, children, loc) => createFunctionExpression(\n  props,\n  children,\n  false,\n  true,\n  children.length ? children[0].loc : loc\n);\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\n  context.helper(WITH_CTX);\n  const { children, loc } = node;\n  const slotsProperties = [];\n  const dynamicSlots = [];\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\n  if (!context.ssr && context.prefixIdentifiers) {\n    hasDynamicSlots = hasScopeRef(node, context.identifiers);\n  }\n  const onComponentSlot = findDir(node, \"slot\", true);\n  if (onComponentSlot) {\n    const { arg, exp } = onComponentSlot;\n    if (arg && !isStaticExp(arg)) {\n      hasDynamicSlots = true;\n    }\n    slotsProperties.push(\n      createObjectProperty(\n        arg || createSimpleExpression(\"default\", true),\n        buildSlotFn(exp, void 0, children, loc)\n      )\n    );\n  }\n  let hasTemplateSlots = false;\n  let hasNamedDefaultSlot = false;\n  const implicitDefaultChildren = [];\n  const seenSlotNames = /* @__PURE__ */ new Set();\n  let conditionalBranchIndex = 0;\n  for (let i = 0; i < children.length; i++) {\n    const slotElement = children[i];\n    let slotDir;\n    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, \"slot\", true))) {\n      if (slotElement.type !== 3) {\n        implicitDefaultChildren.push(slotElement);\n      }\n      continue;\n    }\n    if (onComponentSlot) {\n      context.onError(\n        createCompilerError(37, slotDir.loc)\n      );\n      break;\n    }\n    hasTemplateSlots = true;\n    const { children: slotChildren, loc: slotLoc } = slotElement;\n    const {\n      arg: slotName = createSimpleExpression(`default`, true),\n      exp: slotProps,\n      loc: dirLoc\n    } = slotDir;\n    let staticSlotName;\n    if (isStaticExp(slotName)) {\n      staticSlotName = slotName ? slotName.content : `default`;\n    } else {\n      hasDynamicSlots = true;\n    }\n    const vFor = findDir(slotElement, \"for\");\n    const slotFunction = buildSlotFn(slotProps, vFor, slotChildren, slotLoc);\n    let vIf;\n    let vElse;\n    if (vIf = findDir(slotElement, \"if\")) {\n      hasDynamicSlots = true;\n      dynamicSlots.push(\n        createConditionalExpression(\n          vIf.exp,\n          buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++),\n          defaultFallback\n        )\n      );\n    } else if (vElse = findDir(\n      slotElement,\n      /^else(-if)?$/,\n      true\n      /* allowEmpty */\n    )) {\n      let j = i;\n      let prev;\n      while (j--) {\n        prev = children[j];\n        if (prev.type !== 3) {\n          break;\n        }\n      }\n      if (prev && isTemplateNode(prev) && findDir(prev, \"if\")) {\n        children.splice(i, 1);\n        i--;\n        let conditional = dynamicSlots[dynamicSlots.length - 1];\n        while (conditional.alternate.type === 19) {\n          conditional = conditional.alternate;\n        }\n        conditional.alternate = vElse.exp ? createConditionalExpression(\n          vElse.exp,\n          buildDynamicSlot(\n            slotName,\n            slotFunction,\n            conditionalBranchIndex++\n          ),\n          defaultFallback\n        ) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\n      } else {\n        context.onError(\n          createCompilerError(30, vElse.loc)\n        );\n      }\n    } else if (vFor) {\n      hasDynamicSlots = true;\n      const parseResult = vFor.forParseResult;\n      if (parseResult) {\n        finalizeForParseResult(parseResult, context);\n        dynamicSlots.push(\n          createCallExpression(context.helper(RENDER_LIST), [\n            parseResult.source,\n            createFunctionExpression(\n              createForLoopParams(parseResult),\n              buildDynamicSlot(slotName, slotFunction),\n              true\n            )\n          ])\n        );\n      } else {\n        context.onError(\n          createCompilerError(\n            32,\n            vFor.loc\n          )\n        );\n      }\n    } else {\n      if (staticSlotName) {\n        if (seenSlotNames.has(staticSlotName)) {\n          context.onError(\n            createCompilerError(\n              38,\n              dirLoc\n            )\n          );\n          continue;\n        }\n        seenSlotNames.add(staticSlotName);\n        if (staticSlotName === \"default\") {\n          hasNamedDefaultSlot = true;\n        }\n      }\n      slotsProperties.push(createObjectProperty(slotName, slotFunction));\n    }\n  }\n  if (!onComponentSlot) {\n    const buildDefaultSlotProperty = (props, children2) => {\n      const fn = buildSlotFn(props, void 0, children2, loc);\n      return createObjectProperty(`default`, fn);\n    };\n    if (!hasTemplateSlots) {\n      slotsProperties.push(buildDefaultSlotProperty(void 0, children));\n    } else if (implicitDefaultChildren.length && // #3766\n    // with whitespace: 'preserve', whitespaces between slots will end up in\n    // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n    implicitDefaultChildren.some((node2) => isNonWhitespaceContent(node2))) {\n      if (hasNamedDefaultSlot) {\n        context.onError(\n          createCompilerError(\n            39,\n            implicitDefaultChildren[0].loc\n          )\n        );\n      } else {\n        slotsProperties.push(\n          buildDefaultSlotProperty(void 0, implicitDefaultChildren)\n        );\n      }\n    }\n  }\n  const slotFlag = hasDynamicSlots ? 2 : hasForwardedSlots(node.children) ? 3 : 1;\n  let slots = createObjectExpression(\n    slotsProperties.concat(\n      createObjectProperty(\n        `_`,\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\n        // 1 = compiled and static = can skip normalization AND diff as optimized\n        createSimpleExpression(\n          slotFlag + (` /* ${slotFlagsText[slotFlag]} */` ),\n          false\n        )\n      )\n    ),\n    loc\n  );\n  if (dynamicSlots.length) {\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\n      slots,\n      createArrayExpression(dynamicSlots)\n    ]);\n  }\n  return {\n    slots,\n    hasDynamicSlots\n  };\n}\nfunction buildDynamicSlot(name, fn, index) {\n  const props = [\n    createObjectProperty(`name`, name),\n    createObjectProperty(`fn`, fn)\n  ];\n  if (index != null) {\n    props.push(\n      createObjectProperty(`key`, createSimpleExpression(String(index), true))\n    );\n  }\n  return createObjectExpression(props);\n}\nfunction hasForwardedSlots(children) {\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    switch (child.type) {\n      case 1:\n        if (child.tagType === 2 || hasForwardedSlots(child.children)) {\n          return true;\n        }\n        break;\n      case 9:\n        if (hasForwardedSlots(child.branches))\n          return true;\n        break;\n      case 10:\n      case 11:\n        if (hasForwardedSlots(child.children))\n          return true;\n        break;\n    }\n  }\n  return false;\n}\nfunction isNonWhitespaceContent(node) {\n  if (node.type !== 2 && node.type !== 12)\n    return true;\n  return node.type === 2 ? !!node.content.trim() : isNonWhitespaceContent(node.content);\n}\n\nconst directiveImportMap = /* @__PURE__ */ new WeakMap();\nconst transformElement = (node, context) => {\n  return function postTransformElement() {\n    node = context.currentNode;\n    if (!(node.type === 1 && (node.tagType === 0 || node.tagType === 1))) {\n      return;\n    }\n    const { tag, props } = node;\n    const isComponent = node.tagType === 1;\n    let vnodeTag = isComponent ? resolveComponentType(node, context) : `\"${tag}\"`;\n    const isDynamicComponent = isObject$2(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\n    let vnodeProps;\n    let vnodeChildren;\n    let vnodePatchFlag;\n    let patchFlag = 0;\n    let vnodeDynamicProps;\n    let dynamicPropNames;\n    let vnodeDirectives;\n    let shouldUseBlock = (\n      // dynamic component may resolve to plain elements\n      isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent && // <svg> and <foreignObject> must be forced into blocks so that block\n      // updates inside get proper isSVG flag at runtime. (#639, #643)\n      // This is technically web-specific, but splitting the logic out of core\n      // leads to too much unnecessary complexity.\n      (tag === \"svg\" || tag === \"foreignObject\")\n    );\n    if (props.length > 0) {\n      const propsBuildResult = buildProps(\n        node,\n        context,\n        void 0,\n        isComponent,\n        isDynamicComponent\n      );\n      vnodeProps = propsBuildResult.props;\n      patchFlag = propsBuildResult.patchFlag;\n      dynamicPropNames = propsBuildResult.dynamicPropNames;\n      const directives = propsBuildResult.directives;\n      vnodeDirectives = directives && directives.length ? createArrayExpression(\n        directives.map((dir) => buildDirectiveArgs(dir, context))\n      ) : void 0;\n      if (propsBuildResult.shouldUseBlock) {\n        shouldUseBlock = true;\n      }\n    }\n    if (node.children.length > 0) {\n      if (vnodeTag === KEEP_ALIVE) {\n        shouldUseBlock = true;\n        patchFlag |= 1024;\n        if (node.children.length > 1) {\n          context.onError(\n            createCompilerError(46, {\n              start: node.children[0].loc.start,\n              end: node.children[node.children.length - 1].loc.end,\n              source: \"\"\n            })\n          );\n        }\n      }\n      const shouldBuildAsSlots = isComponent && // Teleport is not a real component and has dedicated runtime handling\n      vnodeTag !== TELEPORT && // explained above.\n      vnodeTag !== KEEP_ALIVE;\n      if (shouldBuildAsSlots) {\n        const { slots, hasDynamicSlots } = buildSlots(node, context);\n        vnodeChildren = slots;\n        if (hasDynamicSlots) {\n          patchFlag |= 1024;\n        }\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n        const child = node.children[0];\n        const type = child.type;\n        const hasDynamicTextChild = type === 5 || type === 8;\n        if (hasDynamicTextChild && getConstantType(child, context) === 0) {\n          patchFlag |= 1;\n        }\n        if (hasDynamicTextChild || type === 2) {\n          vnodeChildren = child;\n        } else {\n          vnodeChildren = node.children;\n        }\n      } else {\n        vnodeChildren = node.children;\n      }\n    }\n    if (patchFlag !== 0) {\n      {\n        if (patchFlag < 0) {\n          vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\n        } else {\n          const flagNames = Object.keys(PatchFlagNames).map(Number).filter((n) => n > 0 && patchFlag & n).map((n) => PatchFlagNames[n]).join(`, `);\n          vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\n        }\n      }\n      if (dynamicPropNames && dynamicPropNames.length) {\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\n      }\n    }\n    node.codegenNode = createVNodeCall(\n      context,\n      vnodeTag,\n      vnodeProps,\n      vnodeChildren,\n      vnodePatchFlag,\n      vnodeDynamicProps,\n      vnodeDirectives,\n      !!shouldUseBlock,\n      false,\n      isComponent,\n      node.loc\n    );\n  };\n};\nfunction resolveComponentType(node, context, ssr = false) {\n  let { tag } = node;\n  const isExplicitDynamic = isComponentTag(tag);\n  const isProp = findProp(\n    node,\n    \"is\",\n    false,\n    true\n    /* allow empty */\n  );\n  if (isProp) {\n    if (isExplicitDynamic || false) {\n      let exp;\n      if (isProp.type === 6) {\n        exp = isProp.value && createSimpleExpression(isProp.value.content, true);\n      } else {\n        exp = isProp.exp;\n        if (!exp) {\n          exp = createSimpleExpression(`is`, false, isProp.loc);\n          {\n            exp = isProp.exp = processExpression(exp, context);\n          }\n        }\n      }\n      if (exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n          exp\n        ]);\n      }\n    } else if (isProp.type === 6 && isProp.value.content.startsWith(\"vue:\")) {\n      tag = isProp.value.content.slice(4);\n    }\n  }\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\n  if (builtIn) {\n    if (!ssr)\n      context.helper(builtIn);\n    return builtIn;\n  }\n  {\n    const fromSetup = resolveSetupReference(tag, context);\n    if (fromSetup) {\n      return fromSetup;\n    }\n    const dotIndex = tag.indexOf(\".\");\n    if (dotIndex > 0) {\n      const ns = resolveSetupReference(tag.slice(0, dotIndex), context);\n      if (ns) {\n        return ns + tag.slice(dotIndex);\n      }\n    }\n  }\n  if (context.selfName && capitalize$1(camelize(tag)) === context.selfName) {\n    context.helper(RESOLVE_COMPONENT);\n    context.components.add(tag + `__self`);\n    return toValidAssetId(tag, `component`);\n  }\n  context.helper(RESOLVE_COMPONENT);\n  context.components.add(tag);\n  return toValidAssetId(tag, `component`);\n}\nfunction resolveSetupReference(name, context) {\n  const bindings = context.bindingMetadata;\n  if (!bindings || bindings.__isScriptSetup === false) {\n    return;\n  }\n  const camelName = camelize(name);\n  const PascalName = capitalize$1(camelName);\n  const checkType = (type) => {\n    if (bindings[name] === type) {\n      return name;\n    }\n    if (bindings[camelName] === type) {\n      return camelName;\n    }\n    if (bindings[PascalName] === type) {\n      return PascalName;\n    }\n  };\n  const fromConst = checkType(\"setup-const\") || checkType(\"setup-reactive-const\") || checkType(\"literal-const\");\n  if (fromConst) {\n    return context.inline ? (\n      // in inline mode, const setup bindings (e.g. imports) can be used as-is\n      fromConst\n    ) : `$setup[${JSON.stringify(fromConst)}]`;\n  }\n  const fromMaybeRef = checkType(\"setup-let\") || checkType(\"setup-ref\") || checkType(\"setup-maybe-ref\");\n  if (fromMaybeRef) {\n    return context.inline ? (\n      // setup scope bindings that may be refs need to be unrefed\n      `${context.helperString(UNREF)}(${fromMaybeRef})`\n    ) : `$setup[${JSON.stringify(fromMaybeRef)}]`;\n  }\n  const fromProps = checkType(\"props\");\n  if (fromProps) {\n    return `${context.helperString(UNREF)}(${context.inline ? \"__props\" : \"$props\"}[${JSON.stringify(fromProps)}])`;\n  }\n}\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\n  const { tag, loc: elementLoc, children } = node;\n  let properties = [];\n  const mergeArgs = [];\n  const runtimeDirectives = [];\n  const hasChildren = children.length > 0;\n  let shouldUseBlock = false;\n  let patchFlag = 0;\n  let hasRef = false;\n  let hasClassBinding = false;\n  let hasStyleBinding = false;\n  let hasHydrationEventBinding = false;\n  let hasDynamicKeys = false;\n  let hasVnodeHook = false;\n  const dynamicPropNames = [];\n  const pushMergeArg = (arg) => {\n    if (properties.length) {\n      mergeArgs.push(\n        createObjectExpression(dedupeProperties(properties), elementLoc)\n      );\n      properties = [];\n    }\n    if (arg)\n      mergeArgs.push(arg);\n  };\n  const analyzePatchFlag = ({ key, value }) => {\n    if (isStaticExp(key)) {\n      const name = key.content;\n      const isEventHandler = isOn(name);\n      if (isEventHandler && (!isComponent || isDynamicComponent) && // omit the flag for click handlers because hydration gives click\n      // dedicated fast path.\n      name.toLowerCase() !== \"onclick\" && // omit v-model handlers\n      name !== \"onUpdate:modelValue\" && // omit onVnodeXXX hooks\n      !isReservedProp(name)) {\n        hasHydrationEventBinding = true;\n      }\n      if (isEventHandler && isReservedProp(name)) {\n        hasVnodeHook = true;\n      }\n      if (isEventHandler && value.type === 14) {\n        value = value.arguments[0];\n      }\n      if (value.type === 20 || (value.type === 4 || value.type === 8) && getConstantType(value, context) > 0) {\n        return;\n      }\n      if (name === \"ref\") {\n        hasRef = true;\n      } else if (name === \"class\") {\n        hasClassBinding = true;\n      } else if (name === \"style\") {\n        hasStyleBinding = true;\n      } else if (name !== \"key\" && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n      if (isComponent && (name === \"class\" || name === \"style\") && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n    } else {\n      hasDynamicKeys = true;\n    }\n  };\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    if (prop.type === 6) {\n      const { loc, name, nameLoc, value } = prop;\n      let isStatic = true;\n      if (name === \"ref\") {\n        hasRef = true;\n        if (context.scopes.vFor > 0) {\n          properties.push(\n            createObjectProperty(\n              createSimpleExpression(\"ref_for\", true),\n              createSimpleExpression(\"true\")\n            )\n          );\n        }\n        if (value && context.inline) {\n          const binding = context.bindingMetadata[value.content];\n          if (binding === \"setup-let\" || binding === \"setup-ref\" || binding === \"setup-maybe-ref\") {\n            isStatic = false;\n            properties.push(\n              createObjectProperty(\n                createSimpleExpression(\"ref_key\", true),\n                createSimpleExpression(value.content, true, value.loc)\n              )\n            );\n          }\n        }\n      }\n      if (name === \"is\" && (isComponentTag(tag) || value && value.content.startsWith(\"vue:\") || false)) {\n        continue;\n      }\n      properties.push(\n        createObjectProperty(\n          createSimpleExpression(name, true, nameLoc),\n          createSimpleExpression(\n            value ? value.content : \"\",\n            isStatic,\n            value ? value.loc : loc\n          )\n        )\n      );\n    } else {\n      const { name, arg, exp, loc, modifiers } = prop;\n      const isVBind = name === \"bind\";\n      const isVOn = name === \"on\";\n      if (name === \"slot\") {\n        if (!isComponent) {\n          context.onError(\n            createCompilerError(40, loc)\n          );\n        }\n        continue;\n      }\n      if (name === \"once\" || name === \"memo\") {\n        continue;\n      }\n      if (name === \"is\" || isVBind && isStaticArgOf(arg, \"is\") && (isComponentTag(tag) || false)) {\n        continue;\n      }\n      if (isVOn && ssr) {\n        continue;\n      }\n      if (\n        // #938: elements with dynamic keys should be forced into blocks\n        isVBind && isStaticArgOf(arg, \"key\") || // inline before-update hooks need to force block so that it is invoked\n        // before children\n        isVOn && hasChildren && isStaticArgOf(arg, \"vue:before-update\")\n      ) {\n        shouldUseBlock = true;\n      }\n      if (isVBind && isStaticArgOf(arg, \"ref\") && context.scopes.vFor > 0) {\n        properties.push(\n          createObjectProperty(\n            createSimpleExpression(\"ref_for\", true),\n            createSimpleExpression(\"true\")\n          )\n        );\n      }\n      if (!arg && (isVBind || isVOn)) {\n        hasDynamicKeys = true;\n        if (exp) {\n          if (isVBind) {\n            pushMergeArg();\n            mergeArgs.push(exp);\n          } else {\n            pushMergeArg({\n              type: 14,\n              loc,\n              callee: context.helper(TO_HANDLERS),\n              arguments: isComponent ? [exp] : [exp, `true`]\n            });\n          }\n        } else {\n          context.onError(\n            createCompilerError(\n              isVBind ? 34 : 35,\n              loc\n            )\n          );\n        }\n        continue;\n      }\n      if (isVBind && modifiers.includes(\"prop\")) {\n        patchFlag |= 32;\n      }\n      const directiveTransform = context.directiveTransforms[name];\n      if (directiveTransform) {\n        const { props: props2, needRuntime } = directiveTransform(prop, node, context);\n        !ssr && props2.forEach(analyzePatchFlag);\n        if (isVOn && arg && !isStaticExp(arg)) {\n          pushMergeArg(createObjectExpression(props2, elementLoc));\n        } else {\n          properties.push(...props2);\n        }\n        if (needRuntime) {\n          runtimeDirectives.push(prop);\n          if (isSymbol$1(needRuntime)) {\n            directiveImportMap.set(prop, needRuntime);\n          }\n        }\n      } else if (!isBuiltInDirective(name)) {\n        runtimeDirectives.push(prop);\n        if (hasChildren) {\n          shouldUseBlock = true;\n        }\n      }\n    }\n  }\n  let propsExpression = void 0;\n  if (mergeArgs.length) {\n    pushMergeArg();\n    if (mergeArgs.length > 1) {\n      propsExpression = createCallExpression(\n        context.helper(MERGE_PROPS),\n        mergeArgs,\n        elementLoc\n      );\n    } else {\n      propsExpression = mergeArgs[0];\n    }\n  } else if (properties.length) {\n    propsExpression = createObjectExpression(\n      dedupeProperties(properties),\n      elementLoc\n    );\n  }\n  if (hasDynamicKeys) {\n    patchFlag |= 16;\n  } else {\n    if (hasClassBinding && !isComponent) {\n      patchFlag |= 2;\n    }\n    if (hasStyleBinding && !isComponent) {\n      patchFlag |= 4;\n    }\n    if (dynamicPropNames.length) {\n      patchFlag |= 8;\n    }\n    if (hasHydrationEventBinding) {\n      patchFlag |= 32;\n    }\n  }\n  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\n    patchFlag |= 512;\n  }\n  if (!context.inSSR && propsExpression) {\n    switch (propsExpression.type) {\n      case 15:\n        let classKeyIndex = -1;\n        let styleKeyIndex = -1;\n        let hasDynamicKey = false;\n        for (let i = 0; i < propsExpression.properties.length; i++) {\n          const key = propsExpression.properties[i].key;\n          if (isStaticExp(key)) {\n            if (key.content === \"class\") {\n              classKeyIndex = i;\n            } else if (key.content === \"style\") {\n              styleKeyIndex = i;\n            }\n          } else if (!key.isHandlerKey) {\n            hasDynamicKey = true;\n          }\n        }\n        const classProp = propsExpression.properties[classKeyIndex];\n        const styleProp = propsExpression.properties[styleKeyIndex];\n        if (!hasDynamicKey) {\n          if (classProp && !isStaticExp(classProp.value)) {\n            classProp.value = createCallExpression(\n              context.helper(NORMALIZE_CLASS),\n              [classProp.value]\n            );\n          }\n          if (styleProp && // the static style is compiled into an object,\n          // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n          (hasStyleBinding || styleProp.value.type === 4 && styleProp.value.content.trim()[0] === `[` || // v-bind:style and style both exist,\n          // v-bind:style with static literal object\n          styleProp.value.type === 17)) {\n            styleProp.value = createCallExpression(\n              context.helper(NORMALIZE_STYLE),\n              [styleProp.value]\n            );\n          }\n        } else {\n          propsExpression = createCallExpression(\n            context.helper(NORMALIZE_PROPS),\n            [propsExpression]\n          );\n        }\n        break;\n      case 14:\n        break;\n      default:\n        propsExpression = createCallExpression(\n          context.helper(NORMALIZE_PROPS),\n          [\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\n              propsExpression\n            ])\n          ]\n        );\n        break;\n    }\n  }\n  return {\n    props: propsExpression,\n    directives: runtimeDirectives,\n    patchFlag,\n    dynamicPropNames,\n    shouldUseBlock\n  };\n}\nfunction dedupeProperties(properties) {\n  const knownProps = /* @__PURE__ */ new Map();\n  const deduped = [];\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i];\n    if (prop.key.type === 8 || !prop.key.isStatic) {\n      deduped.push(prop);\n      continue;\n    }\n    const name = prop.key.content;\n    const existing = knownProps.get(name);\n    if (existing) {\n      if (name === \"style\" || name === \"class\" || isOn(name)) {\n        mergeAsArray(existing, prop);\n      }\n    } else {\n      knownProps.set(name, prop);\n      deduped.push(prop);\n    }\n  }\n  return deduped;\n}\nfunction mergeAsArray(existing, incoming) {\n  if (existing.value.type === 17) {\n    existing.value.elements.push(incoming.value);\n  } else {\n    existing.value = createArrayExpression(\n      [existing.value, incoming.value],\n      existing.loc\n    );\n  }\n}\nfunction buildDirectiveArgs(dir, context) {\n  const dirArgs = [];\n  const runtime = directiveImportMap.get(dir);\n  if (runtime) {\n    dirArgs.push(context.helperString(runtime));\n  } else {\n    const fromSetup = resolveSetupReference(\"v-\" + dir.name, context);\n    if (fromSetup) {\n      dirArgs.push(fromSetup);\n    } else {\n      context.helper(RESOLVE_DIRECTIVE);\n      context.directives.add(dir.name);\n      dirArgs.push(toValidAssetId(dir.name, `directive`));\n    }\n  }\n  const { loc } = dir;\n  if (dir.exp)\n    dirArgs.push(dir.exp);\n  if (dir.arg) {\n    if (!dir.exp) {\n      dirArgs.push(`void 0`);\n    }\n    dirArgs.push(dir.arg);\n  }\n  if (Object.keys(dir.modifiers).length) {\n    if (!dir.arg) {\n      if (!dir.exp) {\n        dirArgs.push(`void 0`);\n      }\n      dirArgs.push(`void 0`);\n    }\n    const trueExpression = createSimpleExpression(`true`, false, loc);\n    dirArgs.push(\n      createObjectExpression(\n        dir.modifiers.map(\n          (modifier) => createObjectProperty(modifier, trueExpression)\n        ),\n        loc\n      )\n    );\n  }\n  return createArrayExpression(dirArgs, dir.loc);\n}\nfunction stringifyDynamicPropNames(props) {\n  let propsNamesString = `[`;\n  for (let i = 0, l = props.length; i < l; i++) {\n    propsNamesString += JSON.stringify(props[i]);\n    if (i < l - 1)\n      propsNamesString += \", \";\n  }\n  return propsNamesString + `]`;\n}\nfunction isComponentTag(tag) {\n  return tag === \"component\" || tag === \"Component\";\n}\n\nconst transformSlotOutlet = (node, context) => {\n  if (isSlotOutlet(node)) {\n    const { children, loc } = node;\n    const { slotName, slotProps } = processSlotOutlet(node, context);\n    const slotArgs = [\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\n      slotName,\n      \"{}\",\n      \"undefined\",\n      \"true\"\n    ];\n    let expectedLen = 2;\n    if (slotProps) {\n      slotArgs[2] = slotProps;\n      expectedLen = 3;\n    }\n    if (children.length) {\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc);\n      expectedLen = 4;\n    }\n    if (context.scopeId && !context.slotted) {\n      expectedLen = 5;\n    }\n    slotArgs.splice(expectedLen);\n    node.codegenNode = createCallExpression(\n      context.helper(RENDER_SLOT),\n      slotArgs,\n      loc\n    );\n  }\n};\nfunction processSlotOutlet(node, context) {\n  let slotName = `\"default\"`;\n  let slotProps = void 0;\n  const nonNameProps = [];\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (p.value) {\n        if (p.name === \"name\") {\n          slotName = JSON.stringify(p.value.content);\n        } else {\n          p.name = camelize(p.name);\n          nonNameProps.push(p);\n        }\n      }\n    } else {\n      if (p.name === \"bind\" && isStaticArgOf(p.arg, \"name\")) {\n        if (p.exp) {\n          slotName = p.exp;\n        } else if (p.arg && p.arg.type === 4) {\n          const name = camelize(p.arg.content);\n          slotName = p.exp = createSimpleExpression(name, false, p.arg.loc);\n          {\n            slotName = p.exp = processExpression(p.exp, context);\n          }\n        }\n      } else {\n        if (p.name === \"bind\" && p.arg && isStaticExp(p.arg)) {\n          p.arg.content = camelize(p.arg.content);\n        }\n        nonNameProps.push(p);\n      }\n    }\n  }\n  if (nonNameProps.length > 0) {\n    const { props, directives } = buildProps(\n      node,\n      context,\n      nonNameProps,\n      false,\n      false\n    );\n    slotProps = props;\n    if (directives.length) {\n      context.onError(\n        createCompilerError(\n          36,\n          directives[0].loc\n        )\n      );\n    }\n  }\n  return {\n    slotName,\n    slotProps\n  };\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\nconst transformOn$1 = (dir, node, context, augmentor) => {\n  const { loc, modifiers, arg } = dir;\n  if (!dir.exp && !modifiers.length) {\n    context.onError(createCompilerError(35, loc));\n  }\n  let eventName;\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      let rawName = arg.content;\n      if (rawName.startsWith(\"vnode\")) {\n        context.onError(createCompilerError(51, arg.loc));\n      }\n      if (rawName.startsWith(\"vue:\")) {\n        rawName = `vnode-${rawName.slice(4)}`;\n      }\n      const eventString = node.tagType !== 0 || rawName.startsWith(\"vnode\") || !/[A-Z]/.test(rawName) ? (\n        // for non-element and vnode lifecycle event listeners, auto convert\n        // it to camelCase. See issue #2249\n        toHandlerKey(camelize(rawName))\n      ) : (\n        // preserve case for plain element listeners that have uppercase\n        // letters, as these may be custom elements' custom events\n        `on:${rawName}`\n      );\n      eventName = createSimpleExpression(eventString, true, arg.loc);\n    } else {\n      eventName = createCompoundExpression([\n        `${context.helperString(TO_HANDLER_KEY)}(`,\n        arg,\n        `)`\n      ]);\n    }\n  } else {\n    eventName = arg;\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\n    eventName.children.push(`)`);\n  }\n  let exp = dir.exp;\n  if (exp && !exp.content.trim()) {\n    exp = void 0;\n  }\n  let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\n  if (exp) {\n    const isMemberExp = isMemberExpression(exp.content, context);\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\n    const hasMultipleStatements = exp.content.includes(`;`);\n    if (context.prefixIdentifiers) {\n      isInlineStatement && context.addIdentifiers(`$event`);\n      exp = dir.exp = processExpression(\n        exp,\n        context,\n        false,\n        hasMultipleStatements\n      );\n      isInlineStatement && context.removeIdentifiers(`$event`);\n      shouldCache = context.cacheHandlers && // unnecessary to cache inside v-once\n      !context.inVOnce && // runtime constants don't need to be cached\n      // (this is analyzed by compileScript in SFC <script setup>)\n      !(exp.type === 4 && exp.constType > 0) && // #1541 bail if this is a member exp handler passed to a component -\n      // we need to use the original function to preserve arity,\n      // e.g. <transition> relies on checking cb.length to determine\n      // transition end handling. Inline function is ok since its arity\n      // is preserved even when cached.\n      !(isMemberExp && node.tagType === 1) && // bail if the function references closure variables (v-for, v-slot)\n      // it must be passed fresh to avoid stale values.\n      !hasScopeRef(exp, context.identifiers);\n      if (shouldCache && isMemberExp) {\n        if (exp.type === 4) {\n          exp.content = `${exp.content} && ${exp.content}(...args)`;\n        } else {\n          exp.children = [...exp.children, ` && `, ...exp.children, `(...args)`];\n        }\n      }\n    }\n    if (isInlineStatement || shouldCache && isMemberExp) {\n      exp = createCompoundExpression([\n        `${isInlineStatement ? context.isTS ? `($event: any)` : `$event` : `${context.isTS ? `\n//@ts-ignore\n` : ``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\n        exp,\n        hasMultipleStatements ? `}` : `)`\n      ]);\n    }\n  }\n  let ret = {\n    props: [\n      createObjectProperty(\n        eventName,\n        exp || createSimpleExpression(`() => {}`, false, loc)\n      )\n    ]\n  };\n  if (augmentor) {\n    ret = augmentor(ret);\n  }\n  if (shouldCache) {\n    ret.props[0].value = context.cache(ret.props[0].value);\n  }\n  ret.props.forEach((p) => p.key.isHandlerKey = true);\n  return ret;\n};\n\nconst transformBind = (dir, _node, context) => {\n  const { modifiers, loc } = dir;\n  const arg = dir.arg;\n  let { exp } = dir;\n  if (exp && exp.type === 4 && !exp.content.trim()) {\n    {\n      context.onError(\n        createCompilerError(34, loc)\n      );\n      return {\n        props: [\n          createObjectProperty(arg, createSimpleExpression(\"\", true, loc))\n        ]\n      };\n    }\n  }\n  if (!exp) {\n    if (arg.type !== 4 || !arg.isStatic) {\n      context.onError(\n        createCompilerError(\n          52,\n          arg.loc\n        )\n      );\n      return {\n        props: [\n          createObjectProperty(arg, createSimpleExpression(\"\", true, loc))\n        ]\n      };\n    }\n    const propName = camelize(arg.content);\n    exp = dir.exp = createSimpleExpression(propName, false, arg.loc);\n    {\n      exp = dir.exp = processExpression(exp, context);\n    }\n  }\n  if (arg.type !== 4) {\n    arg.children.unshift(`(`);\n    arg.children.push(`) || \"\"`);\n  } else if (!arg.isStatic) {\n    arg.content = `${arg.content} || \"\"`;\n  }\n  if (modifiers.includes(\"camel\")) {\n    if (arg.type === 4) {\n      if (arg.isStatic) {\n        arg.content = camelize(arg.content);\n      } else {\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\n      }\n    } else {\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\n      arg.children.push(`)`);\n    }\n  }\n  if (!context.inSSR) {\n    if (modifiers.includes(\"prop\")) {\n      injectPrefix(arg, \".\");\n    }\n    if (modifiers.includes(\"attr\")) {\n      injectPrefix(arg, \"^\");\n    }\n  }\n  return {\n    props: [createObjectProperty(arg, exp)]\n  };\n};\nconst injectPrefix = (arg, prefix) => {\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      arg.content = prefix + arg.content;\n    } else {\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``;\n    }\n  } else {\n    arg.children.unshift(`'${prefix}' + (`);\n    arg.children.push(`)`);\n  }\n};\n\nconst transformText = (node, context) => {\n  if (node.type === 0 || node.type === 1 || node.type === 11 || node.type === 10) {\n    return () => {\n      const children = node.children;\n      let currentContainer = void 0;\n      let hasText = false;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child)) {\n          hasText = true;\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j];\n            if (isText$1(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = createCompoundExpression(\n                  [child],\n                  child.loc\n                );\n              }\n              currentContainer.children.push(` + `, next);\n              children.splice(j, 1);\n              j--;\n            } else {\n              currentContainer = void 0;\n              break;\n            }\n          }\n        }\n      }\n      if (!hasText || // if this is a plain element with a single text child, leave it\n      // as-is since the runtime has dedicated fast path for this by directly\n      // setting textContent of the element.\n      // for component root it's always normalized anyway.\n      children.length === 1 && (node.type === 0 || node.type === 1 && node.tagType === 0 && // #3756\n      // custom directives can potentially add DOM elements arbitrarily,\n      // we need to avoid setting textContent of the element at runtime\n      // to avoid accidentally overwriting the DOM elements added\n      // by the user through custom directives.\n      !node.props.find(\n        (p) => p.type === 7 && !context.directiveTransforms[p.name]\n      ) && // in compat mode, <template> tags with no special directives\n      // will be rendered as a fragment so its children must be\n      // converted into vnodes.\n      true)) {\n        return;\n      }\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child) || child.type === 8) {\n          const callArgs = [];\n          if (child.type !== 2 || child.content !== \" \") {\n            callArgs.push(child);\n          }\n          if (!context.ssr && getConstantType(child, context) === 0) {\n            callArgs.push(\n              1 + (` /* ${PatchFlagNames[1]} */` )\n            );\n          }\n          children[i] = {\n            type: 12,\n            content: child,\n            loc: child.loc,\n            codegenNode: createCallExpression(\n              context.helper(CREATE_TEXT),\n              callArgs\n            )\n          };\n        }\n      }\n    };\n  }\n};\n\nconst seen$1 = /* @__PURE__ */ new WeakSet();\nconst transformOnce = (node, context) => {\n  if (node.type === 1 && findDir(node, \"once\", true)) {\n    if (seen$1.has(node) || context.inVOnce || context.inSSR) {\n      return;\n    }\n    seen$1.add(node);\n    context.inVOnce = true;\n    context.helper(SET_BLOCK_TRACKING);\n    return () => {\n      context.inVOnce = false;\n      const cur = context.currentNode;\n      if (cur.codegenNode) {\n        cur.codegenNode = context.cache(\n          cur.codegenNode,\n          true\n          /* isVNode */\n        );\n      }\n    };\n  }\n};\n\nconst transformModel$1 = (dir, node, context) => {\n  const { exp, arg } = dir;\n  if (!exp) {\n    context.onError(\n      createCompilerError(41, dir.loc)\n    );\n    return createTransformProps();\n  }\n  const rawExp = exp.loc.source;\n  const expString = exp.type === 4 ? exp.content : rawExp;\n  const bindingType = context.bindingMetadata[rawExp];\n  if (bindingType === \"props\" || bindingType === \"props-aliased\") {\n    context.onError(createCompilerError(44, exp.loc));\n    return createTransformProps();\n  }\n  const maybeRef = context.inline && (bindingType === \"setup-let\" || bindingType === \"setup-ref\" || bindingType === \"setup-maybe-ref\");\n  if (!expString.trim() || !isMemberExpression(expString, context) && !maybeRef) {\n    context.onError(\n      createCompilerError(42, exp.loc)\n    );\n    return createTransformProps();\n  }\n  if (context.prefixIdentifiers && isSimpleIdentifier(expString) && context.identifiers[expString]) {\n    context.onError(\n      createCompilerError(43, exp.loc)\n    );\n    return createTransformProps();\n  }\n  const propName = arg ? arg : createSimpleExpression(\"modelValue\", true);\n  const eventName = arg ? isStaticExp(arg) ? `onUpdate:${camelize(arg.content)}` : createCompoundExpression(['\"onUpdate:\" + ', arg]) : `onUpdate:modelValue`;\n  let assignmentExp;\n  const eventArg = context.isTS ? `($event: any)` : `$event`;\n  if (maybeRef) {\n    if (bindingType === \"setup-ref\") {\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => ((`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event)`\n      ]);\n    } else {\n      const altAssignment = bindingType === \"setup-let\" ? `${rawExp} = $event` : `null`;\n      assignmentExp = createCompoundExpression([\n        `${eventArg} => (${context.helperString(IS_REF)}(${rawExp}) ? (`,\n        createSimpleExpression(rawExp, false, exp.loc),\n        `).value = $event : ${altAssignment})`\n      ]);\n    }\n  } else {\n    assignmentExp = createCompoundExpression([\n      `${eventArg} => ((`,\n      exp,\n      `) = $event)`\n    ]);\n  }\n  const props = [\n    // modelValue: foo\n    createObjectProperty(propName, dir.exp),\n    // \"onUpdate:modelValue\": $event => (foo = $event)\n    createObjectProperty(eventName, assignmentExp)\n  ];\n  if (context.prefixIdentifiers && !context.inVOnce && context.cacheHandlers && !hasScopeRef(exp, context.identifiers)) {\n    props[1].value = context.cache(props[1].value);\n  }\n  if (dir.modifiers.length && node.tagType === 1) {\n    const modifiers = dir.modifiers.map((m) => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);\n    const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + \"Modifiers\"']) : `modelModifiers`;\n    props.push(\n      createObjectProperty(\n        modifiersKey,\n        createSimpleExpression(\n          `{ ${modifiers} }`,\n          false,\n          dir.loc,\n          2\n        )\n      )\n    );\n  }\n  return createTransformProps(props);\n};\nfunction createTransformProps(props = []) {\n  return { props };\n}\n\nconst seen = /* @__PURE__ */ new WeakSet();\nconst transformMemo = (node, context) => {\n  if (node.type === 1) {\n    const dir = findDir(node, \"memo\");\n    if (!dir || seen.has(node)) {\n      return;\n    }\n    seen.add(node);\n    return () => {\n      const codegenNode = node.codegenNode || context.currentNode.codegenNode;\n      if (codegenNode && codegenNode.type === 13) {\n        if (node.tagType !== 1) {\n          convertToBlock(codegenNode, context);\n        }\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\n          dir.exp,\n          createFunctionExpression(void 0, codegenNode),\n          `_cache`,\n          String(context.cached++)\n        ]);\n      }\n    };\n  }\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\n  return [\n    [\n      transformOnce,\n      transformIf,\n      transformMemo,\n      transformFor,\n      ...[],\n      ...prefixIdentifiers ? [\n        // order is important\n        trackVForSlotScopes,\n        transformExpression\n      ] : [],\n      transformSlotOutlet,\n      transformElement,\n      trackSlotScopes,\n      transformText\n    ],\n    {\n      on: transformOn$1,\n      bind: transformBind,\n      model: transformModel$1\n    }\n  ];\n}\nfunction baseCompile(source, options = {}) {\n  const onError = options.onError || defaultOnError;\n  const isModuleMode = options.mode === \"module\";\n  const prefixIdentifiers = options.prefixIdentifiers === true || isModuleMode;\n  if (!prefixIdentifiers && options.cacheHandlers) {\n    onError(createCompilerError(49));\n  }\n  if (options.scopeId && !isModuleMode) {\n    onError(createCompilerError(50));\n  }\n  const resolvedOptions = extend({}, options, {\n    prefixIdentifiers\n  });\n  const ast = isString$2(source) ? baseParse(source, resolvedOptions) : source;\n  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset(prefixIdentifiers);\n  if (options.isTS) {\n    const { expressionPlugins } = options;\n    if (!expressionPlugins || !expressionPlugins.includes(\"typescript\")) {\n      options.expressionPlugins = [...expressionPlugins || [], \"typescript\"];\n    }\n  }\n  transform(\n    ast,\n    extend({}, resolvedOptions, {\n      nodeTransforms: [\n        ...nodeTransforms,\n        ...options.nodeTransforms || []\n        // user transforms\n      ],\n      directiveTransforms: extend(\n        {},\n        directiveTransforms,\n        options.directiveTransforms || {}\n        // user transforms\n      )\n    })\n  );\n  return generate(ast, resolvedOptions);\n}\n\nconst BindingTypes = {\n  \"DATA\": \"data\",\n  \"PROPS\": \"props\",\n  \"PROPS_ALIASED\": \"props-aliased\",\n  \"SETUP_LET\": \"setup-let\",\n  \"SETUP_CONST\": \"setup-const\",\n  \"SETUP_REACTIVE_CONST\": \"setup-reactive-const\",\n  \"SETUP_MAYBE_REF\": \"setup-maybe-ref\",\n  \"SETUP_REF\": \"setup-ref\",\n  \"OPTIONS\": \"options\",\n  \"LITERAL_CONST\": \"literal-const\"\n};\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nconst V_MODEL_RADIO = Symbol(`vModelRadio` );\nconst V_MODEL_CHECKBOX = Symbol(`vModelCheckbox` );\nconst V_MODEL_TEXT = Symbol(`vModelText` );\nconst V_MODEL_SELECT = Symbol(`vModelSelect` );\nconst V_MODEL_DYNAMIC = Symbol(`vModelDynamic` );\nconst V_ON_WITH_MODIFIERS = Symbol(`vOnModifiersGuard` );\nconst V_ON_WITH_KEYS = Symbol(`vOnKeysGuard` );\nconst V_SHOW = Symbol(`vShow` );\nconst TRANSITION = Symbol(`Transition` );\nconst TRANSITION_GROUP = Symbol(`TransitionGroup` );\nregisterRuntimeHelpers({\n  [V_MODEL_RADIO]: `vModelRadio`,\n  [V_MODEL_CHECKBOX]: `vModelCheckbox`,\n  [V_MODEL_TEXT]: `vModelText`,\n  [V_MODEL_SELECT]: `vModelSelect`,\n  [V_MODEL_DYNAMIC]: `vModelDynamic`,\n  [V_ON_WITH_MODIFIERS]: `withModifiers`,\n  [V_ON_WITH_KEYS]: `withKeys`,\n  [V_SHOW]: `vShow`,\n  [TRANSITION]: `Transition`,\n  [TRANSITION_GROUP]: `TransitionGroup`\n});\n\nconst parserOptions = {\n  parseMode: \"html\",\n  isVoidTag,\n  isNativeTag: (tag) => isHTMLTag(tag) || isSVGTag(tag) || isMathMLTag(tag),\n  isPreTag: (tag) => tag === \"pre\",\n  decodeEntities: void 0,\n  isBuiltInComponent: (tag) => {\n    if (tag === \"Transition\" || tag === \"transition\") {\n      return TRANSITION;\n    } else if (tag === \"TransitionGroup\" || tag === \"transition-group\") {\n      return TRANSITION_GROUP;\n    }\n  },\n  // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\n  getNamespace(tag, parent, rootNamespace) {\n    let ns = parent ? parent.ns : rootNamespace;\n    if (parent && ns === 2) {\n      if (parent.tag === \"annotation-xml\") {\n        if (tag === \"svg\") {\n          return 1;\n        }\n        if (parent.props.some(\n          (a) => a.type === 6 && a.name === \"encoding\" && a.value != null && (a.value.content === \"text/html\" || a.value.content === \"application/xhtml+xml\")\n        )) {\n          ns = 0;\n        }\n      } else if (/^m(?:[ions]|text)$/.test(parent.tag) && tag !== \"mglyph\" && tag !== \"malignmark\") {\n        ns = 0;\n      }\n    } else if (parent && ns === 1) {\n      if (parent.tag === \"foreignObject\" || parent.tag === \"desc\" || parent.tag === \"title\") {\n        ns = 0;\n      }\n    }\n    if (ns === 0) {\n      if (tag === \"svg\") {\n        return 1;\n      }\n      if (tag === \"math\") {\n        return 2;\n      }\n    }\n    return ns;\n  }\n};\n\nconst transformStyle = (node) => {\n  if (node.type === 1) {\n    node.props.forEach((p, i) => {\n      if (p.type === 6 && p.name === \"style\" && p.value) {\n        node.props[i] = {\n          type: 7,\n          name: `bind`,\n          arg: createSimpleExpression(`style`, true, p.loc),\n          exp: parseInlineCSS(p.value.content, p.loc),\n          modifiers: [],\n          loc: p.loc\n        };\n      }\n    });\n  }\n};\nconst parseInlineCSS = (cssText, loc) => {\n  const normalized = parseStringStyle(cssText);\n  return createSimpleExpression(\n    JSON.stringify(normalized),\n    false,\n    loc,\n    3\n  );\n};\n\nfunction createDOMCompilerError(code, loc) {\n  return createCompilerError(\n    code,\n    loc,\n    DOMErrorMessages \n  );\n}\nconst DOMErrorCodes = {\n  \"X_V_HTML_NO_EXPRESSION\": 53,\n  \"53\": \"X_V_HTML_NO_EXPRESSION\",\n  \"X_V_HTML_WITH_CHILDREN\": 54,\n  \"54\": \"X_V_HTML_WITH_CHILDREN\",\n  \"X_V_TEXT_NO_EXPRESSION\": 55,\n  \"55\": \"X_V_TEXT_NO_EXPRESSION\",\n  \"X_V_TEXT_WITH_CHILDREN\": 56,\n  \"56\": \"X_V_TEXT_WITH_CHILDREN\",\n  \"X_V_MODEL_ON_INVALID_ELEMENT\": 57,\n  \"57\": \"X_V_MODEL_ON_INVALID_ELEMENT\",\n  \"X_V_MODEL_ARG_ON_ELEMENT\": 58,\n  \"58\": \"X_V_MODEL_ARG_ON_ELEMENT\",\n  \"X_V_MODEL_ON_FILE_INPUT_ELEMENT\": 59,\n  \"59\": \"X_V_MODEL_ON_FILE_INPUT_ELEMENT\",\n  \"X_V_MODEL_UNNECESSARY_VALUE\": 60,\n  \"60\": \"X_V_MODEL_UNNECESSARY_VALUE\",\n  \"X_V_SHOW_NO_EXPRESSION\": 61,\n  \"61\": \"X_V_SHOW_NO_EXPRESSION\",\n  \"X_TRANSITION_INVALID_CHILDREN\": 62,\n  \"62\": \"X_TRANSITION_INVALID_CHILDREN\",\n  \"X_IGNORED_SIDE_EFFECT_TAG\": 63,\n  \"63\": \"X_IGNORED_SIDE_EFFECT_TAG\",\n  \"__EXTEND_POINT__\": 64,\n  \"64\": \"__EXTEND_POINT__\"\n};\nconst DOMErrorMessages = {\n  [53]: `v-html is missing expression.`,\n  [54]: `v-html will override element children.`,\n  [55]: `v-text is missing expression.`,\n  [56]: `v-text will override element children.`,\n  [57]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\n  [58]: `v-model argument is not supported on plain elements.`,\n  [59]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\n  [60]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\n  [61]: `v-show is missing expression.`,\n  [62]: `<Transition> expects exactly one child element or component.`,\n  [63]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\n};\n\nconst transformVHtml = (dir, node, context) => {\n  const { exp, loc } = dir;\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(53, loc)\n    );\n  }\n  if (node.children.length) {\n    context.onError(\n      createDOMCompilerError(54, loc)\n    );\n    node.children.length = 0;\n  }\n  return {\n    props: [\n      createObjectProperty(\n        createSimpleExpression(`innerHTML`, true, loc),\n        exp || createSimpleExpression(\"\", true)\n      )\n    ]\n  };\n};\n\nconst transformVText = (dir, node, context) => {\n  const { exp, loc } = dir;\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(55, loc)\n    );\n  }\n  if (node.children.length) {\n    context.onError(\n      createDOMCompilerError(56, loc)\n    );\n    node.children.length = 0;\n  }\n  return {\n    props: [\n      createObjectProperty(\n        createSimpleExpression(`textContent`, true),\n        exp ? getConstantType(exp, context) > 0 ? exp : createCallExpression(\n          context.helperString(TO_DISPLAY_STRING),\n          [exp],\n          loc\n        ) : createSimpleExpression(\"\", true)\n      )\n    ]\n  };\n};\n\nconst transformModel = (dir, node, context) => {\n  const baseResult = transformModel$1(dir, node, context);\n  if (!baseResult.props.length || node.tagType === 1) {\n    return baseResult;\n  }\n  if (dir.arg) {\n    context.onError(\n      createDOMCompilerError(\n        58,\n        dir.arg.loc\n      )\n    );\n  }\n  function checkDuplicatedValue() {\n    const value = findDir(node, \"bind\");\n    if (value && isStaticArgOf(value.arg, \"value\")) {\n      context.onError(\n        createDOMCompilerError(\n          60,\n          value.loc\n        )\n      );\n    }\n  }\n  const { tag } = node;\n  const isCustomElement = context.isCustomElement(tag);\n  if (tag === \"input\" || tag === \"textarea\" || tag === \"select\" || isCustomElement) {\n    let directiveToUse = V_MODEL_TEXT;\n    let isInvalidType = false;\n    if (tag === \"input\" || isCustomElement) {\n      const type = findProp(node, `type`);\n      if (type) {\n        if (type.type === 7) {\n          directiveToUse = V_MODEL_DYNAMIC;\n        } else if (type.value) {\n          switch (type.value.content) {\n            case \"radio\":\n              directiveToUse = V_MODEL_RADIO;\n              break;\n            case \"checkbox\":\n              directiveToUse = V_MODEL_CHECKBOX;\n              break;\n            case \"file\":\n              isInvalidType = true;\n              context.onError(\n                createDOMCompilerError(\n                  59,\n                  dir.loc\n                )\n              );\n              break;\n            default:\n              checkDuplicatedValue();\n              break;\n          }\n        }\n      } else if (hasDynamicKeyVBind(node)) {\n        directiveToUse = V_MODEL_DYNAMIC;\n      } else {\n        checkDuplicatedValue();\n      }\n    } else if (tag === \"select\") {\n      directiveToUse = V_MODEL_SELECT;\n    } else {\n      checkDuplicatedValue();\n    }\n    if (!isInvalidType) {\n      baseResult.needRuntime = context.helper(directiveToUse);\n    }\n  } else {\n    context.onError(\n      createDOMCompilerError(\n        57,\n        dir.loc\n      )\n    );\n  }\n  baseResult.props = baseResult.props.filter(\n    (p) => !(p.key.type === 4 && p.key.content === \"modelValue\")\n  );\n  return baseResult;\n};\n\nconst isEventOptionModifier = /* @__PURE__ */ makeMap(`passive,once,capture`);\nconst isNonKeyModifier = /* @__PURE__ */ makeMap(\n  // event propagation management\n  `stop,prevent,self,ctrl,shift,alt,meta,exact,middle`\n);\nconst maybeKeyModifier = /* @__PURE__ */ makeMap(\"left,right\");\nconst isKeyboardEvent = /* @__PURE__ */ makeMap(\n  `onkeyup,onkeydown,onkeypress`,\n  true\n);\nconst resolveModifiers = (key, modifiers, context, loc) => {\n  const keyModifiers = [];\n  const nonKeyModifiers = [];\n  const eventOptionModifiers = [];\n  for (let i = 0; i < modifiers.length; i++) {\n    const modifier = modifiers[i];\n    if (isEventOptionModifier(modifier)) {\n      eventOptionModifiers.push(modifier);\n    } else {\n      if (maybeKeyModifier(modifier)) {\n        if (isStaticExp(key)) {\n          if (isKeyboardEvent(key.content)) {\n            keyModifiers.push(modifier);\n          } else {\n            nonKeyModifiers.push(modifier);\n          }\n        } else {\n          keyModifiers.push(modifier);\n          nonKeyModifiers.push(modifier);\n        }\n      } else {\n        if (isNonKeyModifier(modifier)) {\n          nonKeyModifiers.push(modifier);\n        } else {\n          keyModifiers.push(modifier);\n        }\n      }\n    }\n  }\n  return {\n    keyModifiers,\n    nonKeyModifiers,\n    eventOptionModifiers\n  };\n};\nconst transformClick = (key, event) => {\n  const isStaticClick = isStaticExp(key) && key.content.toLowerCase() === \"onclick\";\n  return isStaticClick ? createSimpleExpression(event, true) : key.type !== 4 ? createCompoundExpression([\n    `(`,\n    key,\n    `) === \"onClick\" ? \"${event}\" : (`,\n    key,\n    `)`\n  ]) : key;\n};\nconst transformOn = (dir, node, context) => {\n  return transformOn$1(dir, node, context, (baseResult) => {\n    const { modifiers } = dir;\n    if (!modifiers.length)\n      return baseResult;\n    let { key, value: handlerExp } = baseResult.props[0];\n    const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);\n    if (nonKeyModifiers.includes(\"right\")) {\n      key = transformClick(key, `onContextmenu`);\n    }\n    if (nonKeyModifiers.includes(\"middle\")) {\n      key = transformClick(key, `onMouseup`);\n    }\n    if (nonKeyModifiers.length) {\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\n        handlerExp,\n        JSON.stringify(nonKeyModifiers)\n      ]);\n    }\n    if (keyModifiers.length && // if event name is dynamic, always wrap with keys guard\n    (!isStaticExp(key) || isKeyboardEvent(key.content))) {\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\n        handlerExp,\n        JSON.stringify(keyModifiers)\n      ]);\n    }\n    if (eventOptionModifiers.length) {\n      const modifierPostfix = eventOptionModifiers.map(capitalize$1).join(\"\");\n      key = isStaticExp(key) ? createSimpleExpression(`${key.content}${modifierPostfix}`, true) : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\n    }\n    return {\n      props: [createObjectProperty(key, handlerExp)]\n    };\n  });\n};\n\nconst transformShow = (dir, node, context) => {\n  const { exp, loc } = dir;\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(61, loc)\n    );\n  }\n  return {\n    props: [],\n    needRuntime: context.helper(V_SHOW)\n  };\n};\n\nconst transformTransition = (node, context) => {\n  if (node.type === 1 && node.tagType === 1) {\n    const component = context.isBuiltInComponent(node.tag);\n    if (component === TRANSITION) {\n      return () => {\n        if (!node.children.length) {\n          return;\n        }\n        if (hasMultipleChildren(node)) {\n          context.onError(\n            createDOMCompilerError(\n              62,\n              {\n                start: node.children[0].loc.start,\n                end: node.children[node.children.length - 1].loc.end,\n                source: \"\"\n              }\n            )\n          );\n        }\n        const child = node.children[0];\n        if (child.type === 1) {\n          for (const p of child.props) {\n            if (p.type === 7 && p.name === \"show\") {\n              node.props.push({\n                type: 6,\n                name: \"persisted\",\n                nameLoc: node.loc,\n                value: void 0,\n                loc: node.loc\n              });\n            }\n          }\n        }\n      };\n    }\n  }\n};\nfunction hasMultipleChildren(node) {\n  const children = node.children = node.children.filter(\n    (c) => c.type !== 3 && !(c.type === 2 && !c.content.trim())\n  );\n  const child = children[0];\n  return children.length !== 1 || child.type === 11 || child.type === 9 && child.branches.some(hasMultipleChildren);\n}\n\nconst expReplaceRE = /__VUE_EXP_START__(.*?)__VUE_EXP_END__/g;\nconst stringifyStatic = (children, context, parent) => {\n  if (context.scopes.vSlot > 0) {\n    return;\n  }\n  let nc = 0;\n  let ec = 0;\n  const currentChunk = [];\n  const stringifyCurrentChunk = (currentIndex) => {\n    if (nc >= 20 || ec >= 5) {\n      const staticCall = createCallExpression(context.helper(CREATE_STATIC), [\n        JSON.stringify(\n          currentChunk.map((node) => stringifyNode(node, context)).join(\"\")\n        ).replace(expReplaceRE, `\" + $1 + \"`),\n        // the 2nd argument indicates the number of DOM nodes this static vnode\n        // will insert / hydrate\n        String(currentChunk.length)\n      ]);\n      replaceHoist(currentChunk[0], staticCall, context);\n      if (currentChunk.length > 1) {\n        for (let i2 = 1; i2 < currentChunk.length; i2++) {\n          replaceHoist(currentChunk[i2], null, context);\n        }\n        const deleteCount = currentChunk.length - 1;\n        children.splice(currentIndex - currentChunk.length + 1, deleteCount);\n        return deleteCount;\n      }\n    }\n    return 0;\n  };\n  let i = 0;\n  for (; i < children.length; i++) {\n    const child = children[i];\n    const hoisted = getHoistedNode(child);\n    if (hoisted) {\n      const node = child;\n      const result = analyzeNode(node);\n      if (result) {\n        nc += result[0];\n        ec += result[1];\n        currentChunk.push(node);\n        continue;\n      }\n    }\n    i -= stringifyCurrentChunk(i);\n    nc = 0;\n    ec = 0;\n    currentChunk.length = 0;\n  }\n  stringifyCurrentChunk(i);\n};\nconst getHoistedNode = (node) => (node.type === 1 && node.tagType === 0 || node.type == 12) && node.codegenNode && node.codegenNode.type === 4 && node.codegenNode.hoisted;\nconst dataAriaRE = /^(data|aria)-/;\nconst isStringifiableAttr = (name, ns) => {\n  return (ns === 0 ? isKnownHtmlAttr(name) : ns === 1 ? isKnownSvgAttr(name) : false) || dataAriaRE.test(name);\n};\nconst replaceHoist = (node, replacement, context) => {\n  const hoistToReplace = node.codegenNode.hoisted;\n  context.hoists[context.hoists.indexOf(hoistToReplace)] = replacement;\n};\nconst isNonStringifiable = /* @__PURE__ */ makeMap(\n  `caption,thead,tr,th,tbody,td,tfoot,colgroup,col`\n);\nfunction analyzeNode(node) {\n  if (node.type === 1 && isNonStringifiable(node.tag)) {\n    return false;\n  }\n  if (node.type === 12) {\n    return [1, 0];\n  }\n  let nc = 1;\n  let ec = node.props.length > 0 ? 1 : 0;\n  let bailed = false;\n  const bail = () => {\n    bailed = true;\n    return false;\n  };\n  function walk(node2) {\n    for (let i = 0; i < node2.props.length; i++) {\n      const p = node2.props[i];\n      if (p.type === 6 && !isStringifiableAttr(p.name, node2.ns)) {\n        return bail();\n      }\n      if (p.type === 7 && p.name === \"bind\") {\n        if (p.arg && (p.arg.type === 8 || p.arg.isStatic && !isStringifiableAttr(p.arg.content, node2.ns))) {\n          return bail();\n        }\n        if (p.exp && (p.exp.type === 8 || p.exp.constType < 3)) {\n          return bail();\n        }\n      }\n    }\n    for (let i = 0; i < node2.children.length; i++) {\n      nc++;\n      const child = node2.children[i];\n      if (child.type === 1) {\n        if (child.props.length > 0) {\n          ec++;\n        }\n        walk(child);\n        if (bailed) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  return walk(node) ? [nc, ec] : false;\n}\nfunction stringifyNode(node, context) {\n  if (isString$2(node)) {\n    return node;\n  }\n  if (isSymbol$1(node)) {\n    return ``;\n  }\n  switch (node.type) {\n    case 1:\n      return stringifyElement(node, context);\n    case 2:\n      return escapeHtml(node.content);\n    case 3:\n      return `<!--${escapeHtml(node.content)}-->`;\n    case 5:\n      return escapeHtml(toDisplayString(evaluateConstant(node.content)));\n    case 8:\n      return escapeHtml(evaluateConstant(node));\n    case 12:\n      return stringifyNode(node.content, context);\n    default:\n      return \"\";\n  }\n}\nfunction stringifyElement(node, context) {\n  let res = `<${node.tag}`;\n  let innerHTML = \"\";\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      res += ` ${p.name}`;\n      if (p.value) {\n        res += `=\"${escapeHtml(p.value.content)}\"`;\n      }\n    } else if (p.type === 7) {\n      if (p.name === \"bind\") {\n        const exp = p.exp;\n        if (exp.content[0] === \"_\") {\n          res += ` ${p.arg.content}=\"__VUE_EXP_START__${exp.content}__VUE_EXP_END__\"`;\n          continue;\n        }\n        if (isBooleanAttr(p.arg.content) && exp.content === \"false\") {\n          continue;\n        }\n        let evaluated = evaluateConstant(exp);\n        if (evaluated != null) {\n          const arg = p.arg && p.arg.content;\n          if (arg === \"class\") {\n            evaluated = normalizeClass(evaluated);\n          } else if (arg === \"style\") {\n            evaluated = stringifyStyle(normalizeStyle(evaluated));\n          }\n          res += ` ${p.arg.content}=\"${escapeHtml(\n            evaluated\n          )}\"`;\n        }\n      } else if (p.name === \"html\") {\n        innerHTML = evaluateConstant(p.exp);\n      } else if (p.name === \"text\") {\n        innerHTML = escapeHtml(\n          toDisplayString(evaluateConstant(p.exp))\n        );\n      }\n    }\n  }\n  if (context.scopeId) {\n    res += ` ${context.scopeId}`;\n  }\n  res += `>`;\n  if (innerHTML) {\n    res += innerHTML;\n  } else {\n    for (let i = 0; i < node.children.length; i++) {\n      res += stringifyNode(node.children[i], context);\n    }\n  }\n  if (!isVoidTag(node.tag)) {\n    res += `</${node.tag}>`;\n  }\n  return res;\n}\nfunction evaluateConstant(exp) {\n  if (exp.type === 4) {\n    return new Function(`return (${exp.content})`)();\n  } else {\n    let res = ``;\n    exp.children.forEach((c) => {\n      if (isString$2(c) || isSymbol$1(c)) {\n        return;\n      }\n      if (c.type === 2) {\n        res += c.content;\n      } else if (c.type === 5) {\n        res += toDisplayString(evaluateConstant(c.content));\n      } else {\n        res += evaluateConstant(c);\n      }\n    });\n    return res;\n  }\n}\n\nconst ignoreSideEffectTags = (node, context) => {\n  if (node.type === 1 && node.tagType === 0 && (node.tag === \"script\" || node.tag === \"style\")) {\n    context.onError(\n      createDOMCompilerError(\n        63,\n        node.loc\n      )\n    );\n    context.removeNode();\n  }\n};\n\nconst DOMNodeTransforms = [\n  transformStyle,\n  ...[transformTransition] \n];\nconst DOMDirectiveTransforms = {\n  cloak: noopDirectiveTransform,\n  html: transformVHtml,\n  text: transformVText,\n  model: transformModel,\n  // override compiler-core\n  on: transformOn,\n  // override compiler-core\n  show: transformShow\n};\nfunction compile$1(src, options = {}) {\n  return baseCompile(\n    src,\n    extend({}, parserOptions, options, {\n      nodeTransforms: [\n        // ignore <script> and <tag>\n        // this is not put inside DOMNodeTransforms because that list is used\n        // by compiler-ssr to generate vnode fallback branches\n        ignoreSideEffectTags,\n        ...DOMNodeTransforms,\n        ...options.nodeTransforms || []\n      ],\n      directiveTransforms: extend(\n        {},\n        DOMDirectiveTransforms,\n        options.directiveTransforms || {}\n      ),\n      transformHoist: stringifyStatic\n    })\n  );\n}\nfunction parse$8(template, options = {}) {\n  return baseParse(template, extend({}, parserOptions, options));\n}\n\nvar CompilerDOM = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BASE_TRANSITION: BASE_TRANSITION,\n  BindingTypes: BindingTypes,\n  CAMELIZE: CAMELIZE,\n  CAPITALIZE: CAPITALIZE,\n  CREATE_BLOCK: CREATE_BLOCK,\n  CREATE_COMMENT: CREATE_COMMENT,\n  CREATE_ELEMENT_BLOCK: CREATE_ELEMENT_BLOCK,\n  CREATE_ELEMENT_VNODE: CREATE_ELEMENT_VNODE,\n  CREATE_SLOTS: CREATE_SLOTS,\n  CREATE_STATIC: CREATE_STATIC,\n  CREATE_TEXT: CREATE_TEXT,\n  CREATE_VNODE: CREATE_VNODE,\n  CompilerDeprecationTypes: CompilerDeprecationTypes,\n  ConstantTypes: ConstantTypes,\n  DOMDirectiveTransforms: DOMDirectiveTransforms,\n  DOMErrorCodes: DOMErrorCodes,\n  DOMErrorMessages: DOMErrorMessages,\n  DOMNodeTransforms: DOMNodeTransforms,\n  ElementTypes: ElementTypes,\n  ErrorCodes: ErrorCodes,\n  FRAGMENT: FRAGMENT,\n  GUARD_REACTIVE_PROPS: GUARD_REACTIVE_PROPS,\n  IS_MEMO_SAME: IS_MEMO_SAME,\n  IS_REF: IS_REF,\n  KEEP_ALIVE: KEEP_ALIVE,\n  MERGE_PROPS: MERGE_PROPS,\n  NORMALIZE_CLASS: NORMALIZE_CLASS,\n  NORMALIZE_PROPS: NORMALIZE_PROPS,\n  NORMALIZE_STYLE: NORMALIZE_STYLE,\n  Namespaces: Namespaces,\n  NodeTypes: NodeTypes,\n  OPEN_BLOCK: OPEN_BLOCK,\n  POP_SCOPE_ID: POP_SCOPE_ID,\n  PUSH_SCOPE_ID: PUSH_SCOPE_ID,\n  RENDER_LIST: RENDER_LIST,\n  RENDER_SLOT: RENDER_SLOT,\n  RESOLVE_COMPONENT: RESOLVE_COMPONENT,\n  RESOLVE_DIRECTIVE: RESOLVE_DIRECTIVE,\n  RESOLVE_DYNAMIC_COMPONENT: RESOLVE_DYNAMIC_COMPONENT,\n  RESOLVE_FILTER: RESOLVE_FILTER,\n  SET_BLOCK_TRACKING: SET_BLOCK_TRACKING,\n  SUSPENSE: SUSPENSE,\n  TELEPORT: TELEPORT,\n  TO_DISPLAY_STRING: TO_DISPLAY_STRING,\n  TO_HANDLERS: TO_HANDLERS,\n  TO_HANDLER_KEY: TO_HANDLER_KEY,\n  TRANSITION: TRANSITION,\n  TRANSITION_GROUP: TRANSITION_GROUP,\n  TS_NODE_TYPES: TS_NODE_TYPES,\n  UNREF: UNREF,\n  V_MODEL_CHECKBOX: V_MODEL_CHECKBOX,\n  V_MODEL_DYNAMIC: V_MODEL_DYNAMIC,\n  V_MODEL_RADIO: V_MODEL_RADIO,\n  V_MODEL_SELECT: V_MODEL_SELECT,\n  V_MODEL_TEXT: V_MODEL_TEXT,\n  V_ON_WITH_KEYS: V_ON_WITH_KEYS,\n  V_ON_WITH_MODIFIERS: V_ON_WITH_MODIFIERS,\n  V_SHOW: V_SHOW,\n  WITH_CTX: WITH_CTX,\n  WITH_DIRECTIVES: WITH_DIRECTIVES,\n  WITH_MEMO: WITH_MEMO,\n  advancePositionWithClone: advancePositionWithClone,\n  advancePositionWithMutation: advancePositionWithMutation,\n  assert: assert,\n  baseCompile: baseCompile,\n  baseParse: baseParse,\n  buildDirectiveArgs: buildDirectiveArgs,\n  buildProps: buildProps,\n  buildSlots: buildSlots,\n  checkCompatEnabled: checkCompatEnabled,\n  compile: compile$1,\n  convertToBlock: convertToBlock,\n  createArrayExpression: createArrayExpression,\n  createAssignmentExpression: createAssignmentExpression,\n  createBlockStatement: createBlockStatement,\n  createCacheExpression: createCacheExpression,\n  createCallExpression: createCallExpression,\n  createCompilerError: createCompilerError,\n  createCompoundExpression: createCompoundExpression,\n  createConditionalExpression: createConditionalExpression,\n  createDOMCompilerError: createDOMCompilerError,\n  createForLoopParams: createForLoopParams,\n  createFunctionExpression: createFunctionExpression,\n  createIfStatement: createIfStatement,\n  createInterpolation: createInterpolation,\n  createObjectExpression: createObjectExpression,\n  createObjectProperty: createObjectProperty,\n  createReturnStatement: createReturnStatement,\n  createRoot: createRoot,\n  createSequenceExpression: createSequenceExpression,\n  createSimpleExpression: createSimpleExpression,\n  createStructuralDirectiveTransform: createStructuralDirectiveTransform,\n  createTemplateLiteral: createTemplateLiteral,\n  createTransformContext: createTransformContext,\n  createVNodeCall: createVNodeCall,\n  errorMessages: errorMessages$1,\n  extractIdentifiers: extractIdentifiers$1,\n  findDir: findDir,\n  findProp: findProp,\n  forAliasRE: forAliasRE,\n  generate: generate,\n  generateCodeFrame: generateCodeFrame,\n  getBaseTransformPreset: getBaseTransformPreset,\n  getConstantType: getConstantType,\n  getMemoedVNodeCall: getMemoedVNodeCall,\n  getVNodeBlockHelper: getVNodeBlockHelper,\n  getVNodeHelper: getVNodeHelper,\n  hasDynamicKeyVBind: hasDynamicKeyVBind,\n  hasScopeRef: hasScopeRef,\n  helperNameMap: helperNameMap,\n  injectProp: injectProp,\n  isCoreComponent: isCoreComponent,\n  isFunctionType: isFunctionType,\n  isInDestructureAssignment: isInDestructureAssignment,\n  isInNewExpression: isInNewExpression,\n  isMemberExpression: isMemberExpression,\n  isMemberExpressionBrowser: isMemberExpressionBrowser,\n  isMemberExpressionNode: isMemberExpressionNode,\n  isReferencedIdentifier: isReferencedIdentifier,\n  isSimpleIdentifier: isSimpleIdentifier,\n  isSlotOutlet: isSlotOutlet,\n  isStaticArgOf: isStaticArgOf,\n  isStaticExp: isStaticExp,\n  isStaticProperty: isStaticProperty,\n  isStaticPropertyKey: isStaticPropertyKey,\n  isTemplateNode: isTemplateNode,\n  isText: isText$1,\n  isVSlot: isVSlot,\n  locStub: locStub,\n  noopDirectiveTransform: noopDirectiveTransform,\n  parse: parse$8,\n  parserOptions: parserOptions,\n  processExpression: processExpression,\n  processFor: processFor,\n  processIf: processIf,\n  processSlotOutlet: processSlotOutlet,\n  registerRuntimeHelpers: registerRuntimeHelpers,\n  resolveComponentType: resolveComponentType,\n  stringifyExpression: stringifyExpression,\n  toValidAssetId: toValidAssetId,\n  trackSlotScopes: trackSlotScopes,\n  trackVForSlotScopes: trackVForSlotScopes,\n  transform: transform,\n  transformBind: transformBind,\n  transformElement: transformElement,\n  transformExpression: transformExpression,\n  transformModel: transformModel$1,\n  transformOn: transformOn$1,\n  transformStyle: transformStyle,\n  traverseNode: traverseNode,\n  unwrapTSNode: unwrapTSNode,\n  walkBlockDeclarations: walkBlockDeclarations,\n  walkFunctionParams: walkFunctionParams,\n  walkIdentifiers: walkIdentifiers,\n  warnDeprecation: warnDeprecation\n});\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nfunction resolve$2() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : '/';\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n}\n// path.normalize(path)\n// posix version\nfunction normalize$1(path) {\n  var isPathAbsolute = isAbsolute$1(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isPathAbsolute).join('/');\n\n  if (!path && !isPathAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + path;\n}\n// posix version\nfunction isAbsolute$1(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\nfunction join$1() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return normalize$1(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n}\n\n\n// path.relative(from, to)\n// posix version\nfunction relative$1(from, to) {\n  from = resolve$2(from).substr(1);\n  to = resolve$2(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\nvar sep$1 = '/';\nvar delimiter$1 = ':';\n\nfunction dirname$2(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\nfunction basename(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n}\n\n\nfunction extname(path) {\n  return splitPath(path)[3];\n}\nvar path = {\n  extname: extname,\n  basename: basename,\n  dirname: dirname$2,\n  sep: sep$1,\n  delimiter: delimiter$1,\n  relative: relative$1,\n  join: join$1,\n  isAbsolute: isAbsolute$1,\n  normalize: normalize$1,\n  resolve: resolve$2\n};\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b' ?\n    function (str, start, len) { return str.substr(start, len) } :\n    function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\nvar _polyfillNode_path = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  basename: basename,\n  default: path,\n  delimiter: delimiter$1,\n  dirname: dirname$2,\n  extname: extname,\n  isAbsolute: isAbsolute$1,\n  join: join$1,\n  normalize: normalize$1,\n  relative: relative$1,\n  resolve: resolve$2,\n  sep: sep$1\n});\n\nconst UNKNOWN_TYPE = \"Unknown\";\nfunction resolveObjectKey(node, computed) {\n  switch (node.type) {\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n      return String(node.value);\n    case \"Identifier\":\n      if (!computed)\n        return node.name;\n  }\n  return void 0;\n}\nfunction concatStrings(strs) {\n  return strs.filter((s) => !!s).join(\", \");\n}\nfunction isLiteralNode(node) {\n  return node.type.endsWith(\"Literal\");\n}\nfunction isCallOf(node, test) {\n  return !!(node && test && node.type === \"CallExpression\" && node.callee.type === \"Identifier\" && (typeof test === \"string\" ? node.callee.name === test : test(node.callee.name)));\n}\nfunction toRuntimeTypeString(types) {\n  return types.length > 1 ? `[${types.join(\", \")}]` : types[0];\n}\nfunction getImportedName(specifier) {\n  if (specifier.type === \"ImportSpecifier\")\n    return specifier.imported.type === \"Identifier\" ? specifier.imported.name : specifier.imported.value;\n  else if (specifier.type === \"ImportNamespaceSpecifier\")\n    return \"*\";\n  return \"default\";\n}\nfunction getId(node) {\n  return node.type === \"Identifier\" ? node.name : node.type === \"StringLiteral\" ? node.value : null;\n}\nconst normalize = (path.posix || path).normalize;\nconst windowsSlashRE = /\\\\/g;\nfunction normalizePath(p) {\n  return normalize(p.replace(windowsSlashRE, \"/\"));\n}\nconst joinPaths = (path.posix || path).join;\nconst propNameEscapeSymbolsRE = /[ !\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~\\-]/;\nfunction getEscapedPropName(key) {\n  return propNameEscapeSymbolsRE.test(key) ? JSON.stringify(key) : key;\n}\nconst cssVarNameEscapeSymbolsRE = /[ !\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~]/g;\nfunction getEscapedCssVarName(key, doubleEscape) {\n  return key.replace(\n    cssVarNameEscapeSymbolsRE,\n    (s) => doubleEscape ? `\\\\\\\\${s}` : `\\\\${s}`\n  );\n}\n\nfunction pad$1 (hash, len) {\n  while (hash.length < len) {\n    hash = '0' + hash;\n  }\n  return hash;\n}\n\nfunction fold (hash, text) {\n  var i;\n  var chr;\n  var len;\n  if (text.length === 0) {\n    return hash;\n  }\n  for (i = 0, len = text.length; i < len; i++) {\n    chr = text.charCodeAt(i);\n    hash = ((hash << 5) - hash) + chr;\n    hash |= 0;\n  }\n  return hash < 0 ? hash * -2 : hash;\n}\n\nfunction foldObject (hash, o, seen) {\n  return Object.keys(o).sort().reduce(foldKey, hash);\n  function foldKey (hash, key) {\n    return foldValue(hash, o[key], key, seen);\n  }\n}\n\nfunction foldValue (input, value, key, seen) {\n  var hash = fold(fold(fold(input, key), toString$2(value)), typeof value);\n  if (value === null) {\n    return fold(hash, 'null');\n  }\n  if (value === undefined) {\n    return fold(hash, 'undefined');\n  }\n  if (typeof value === 'object' || typeof value === 'function') {\n    if (seen.indexOf(value) !== -1) {\n      return fold(hash, '[Circular]' + key);\n    }\n    seen.push(value);\n\n    var objHash = foldObject(hash, value, seen);\n\n    if (!('valueOf' in value) || typeof value.valueOf !== 'function') {\n      return objHash;\n    }\n\n    try {\n      return fold(objHash, String(value.valueOf()))\n    } catch (err) {\n      return fold(objHash, '[valueOf exception]' + (err.stack || err.message))\n    }\n  }\n  return fold(hash, value.toString());\n}\n\nfunction toString$2 (o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction sum (o) {\n  return pad$1(foldValue(0, o, '', []).toString(16), 8);\n}\n\nvar hashSum = sum;\n\nvar hash = /*@__PURE__*/getDefaultExportFromCjs(hashSum);\n\nconst CSS_VARS_HELPER = `useCssVars`;\nfunction genCssVarsFromList(vars, id, isProd, isSSR = false) {\n  return `{\n  ${vars.map(\n    (key) => `\"${isSSR ? `--` : ``}${genVarName(id, key, isProd, isSSR)}\": (${key})`\n  ).join(\",\\n  \")}\n}`;\n}\nfunction genVarName(id, raw, isProd, isSSR = false) {\n  if (isProd) {\n    return hash(id + raw);\n  } else {\n    return `${id}-${getEscapedCssVarName(raw, isSSR)}`;\n  }\n}\nfunction normalizeExpression(exp) {\n  exp = exp.trim();\n  if (exp[0] === `'` && exp[exp.length - 1] === `'` || exp[0] === `\"` && exp[exp.length - 1] === `\"`) {\n    return exp.slice(1, -1);\n  }\n  return exp;\n}\nconst vBindRE = /v-bind\\s*\\(/g;\nfunction parseCssVars(sfc) {\n  const vars = [];\n  sfc.styles.forEach((style) => {\n    let match;\n    const content = style.content.replace(/\\/\\*([\\s\\S]*?)\\*\\/|\\/\\/.*/g, \"\");\n    while (match = vBindRE.exec(content)) {\n      const start = match.index + match[0].length;\n      const end = lexBinding(content, start);\n      if (end !== null) {\n        const variable = normalizeExpression(content.slice(start, end));\n        if (!vars.includes(variable)) {\n          vars.push(variable);\n        }\n      }\n    }\n  });\n  return vars;\n}\nfunction lexBinding(content, start) {\n  let state = 0 /* inParens */;\n  let parenDepth = 0;\n  for (let i = start; i < content.length; i++) {\n    const char = content.charAt(i);\n    switch (state) {\n      case 0 /* inParens */:\n        if (char === `'`) {\n          state = 1 /* inSingleQuoteString */;\n        } else if (char === `\"`) {\n          state = 2 /* inDoubleQuoteString */;\n        } else if (char === `(`) {\n          parenDepth++;\n        } else if (char === `)`) {\n          if (parenDepth > 0) {\n            parenDepth--;\n          } else {\n            return i;\n          }\n        }\n        break;\n      case 1 /* inSingleQuoteString */:\n        if (char === `'`) {\n          state = 0 /* inParens */;\n        }\n        break;\n      case 2 /* inDoubleQuoteString */:\n        if (char === `\"`) {\n          state = 0 /* inParens */;\n        }\n        break;\n    }\n  }\n  return null;\n}\nconst cssVarsPlugin = (opts) => {\n  const { id, isProd } = opts;\n  return {\n    postcssPlugin: \"vue-sfc-vars\",\n    Declaration(decl) {\n      const value = decl.value;\n      if (vBindRE.test(value)) {\n        vBindRE.lastIndex = 0;\n        let transformed = \"\";\n        let lastIndex = 0;\n        let match;\n        while (match = vBindRE.exec(value)) {\n          const start = match.index + match[0].length;\n          const end = lexBinding(value, start);\n          if (end !== null) {\n            const variable = normalizeExpression(value.slice(start, end));\n            transformed += value.slice(lastIndex, match.index) + `var(--${genVarName(id, variable, isProd)})`;\n            lastIndex = end + 1;\n          }\n        }\n        decl.value = transformed + value.slice(lastIndex);\n      }\n    }\n  };\n};\ncssVarsPlugin.postcss = true;\nfunction genCssVarsCode(vars, bindings, id, isProd) {\n  const varsExp = genCssVarsFromList(vars, id, isProd);\n  const exp = createSimpleExpression(varsExp, false);\n  const context = createTransformContext(createRoot([]), {\n    prefixIdentifiers: true,\n    inline: true,\n    bindingMetadata: bindings.__isScriptSetup === false ? void 0 : bindings\n  });\n  const transformed = processExpression(exp, context);\n  const transformedString = transformed.type === 4 ? transformed.content : transformed.children.map((c) => {\n    return typeof c === \"string\" ? c : c.content;\n  }).join(\"\");\n  return `_${CSS_VARS_HELPER}(_ctx => (${transformedString}))`;\n}\nfunction genNormalScriptCssVarsCode(cssVars, bindings, id, isProd, defaultVar) {\n  return `\nimport { ${CSS_VARS_HELPER} as _${CSS_VARS_HELPER} } from 'vue'\nconst __injectCSSVars__ = () => {\n${genCssVarsCode(\n    cssVars,\n    bindings,\n    id,\n    isProd\n  )}}\nconst __setup__ = ${defaultVar}.setup\n${defaultVar}.setup = __setup__\n  ? (props, ctx) => { __injectCSSVars__();return __setup__(props, ctx) }\n  : __injectCSSVars__\n`;\n}\n\nvar global$1 = (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});\n\n// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global$1.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global$1.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nvar title = 'browser';\nvar platform = 'browser';\nvar browser = true;\nvar env = {};\nvar argv = [];\nvar version$1 = ''; // empty string to avoid regexp issues\nvar versions = {};\nvar release = {};\nvar config = {};\n\nfunction noop() {}\n\nvar on = noop;\nvar addListener = noop;\nvar once = noop;\nvar off = noop;\nvar removeListener = noop;\nvar removeAllListeners = noop;\nvar emit = noop;\n\nfunction binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nfunction cwd () { return '/' }\nfunction chdir (dir) {\n    throw new Error('process.chdir is not supported');\n}function umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global$1.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() };\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3;\n  var seconds = Math.floor(clocktime);\n  var nanoseconds = Math.floor((clocktime%1)*1e9);\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0];\n    nanoseconds = nanoseconds - previousTimestamp[1];\n    if (nanoseconds<0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nfunction uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nvar browser$1 = {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version$1,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n\nfunction createCache(max = 500) {\n  {\n    return /* @__PURE__ */ new Map();\n  }\n}\n\nfunction isImportUsed(local, sfc) {\n  return resolveTemplateUsedIdentifiers(sfc).has(local);\n}\nconst templateUsageCheckCache = createCache();\nfunction resolveTemplateUsedIdentifiers(sfc) {\n  const { content, ast } = sfc.template;\n  const cached = templateUsageCheckCache.get(content);\n  if (cached) {\n    return cached;\n  }\n  const ids = /* @__PURE__ */ new Set();\n  ast.children.forEach(walk);\n  function walk(node) {\n    var _a;\n    switch (node.type) {\n      case 1:\n        let tag = node.tag;\n        if (tag.includes(\".\"))\n          tag = tag.split(\".\")[0].trim();\n        if (!parserOptions.isNativeTag(tag) && !parserOptions.isBuiltInComponent(tag)) {\n          ids.add(camelize(tag));\n          ids.add(capitalize$1(camelize(tag)));\n        }\n        for (let i = 0; i < node.props.length; i++) {\n          const prop = node.props[i];\n          if (prop.type === 7) {\n            if (!isBuiltInDirective(prop.name)) {\n              ids.add(`v${capitalize$1(camelize(prop.name))}`);\n            }\n            if (prop.arg && !prop.arg.isStatic) {\n              extractIdentifiers(ids, prop.arg);\n            }\n            if (prop.name === \"for\") {\n              extractIdentifiers(ids, prop.forParseResult.source);\n            } else if (prop.exp) {\n              extractIdentifiers(ids, prop.exp);\n            } else if (prop.name === \"bind\" && !prop.exp) {\n              ids.add(prop.arg.content);\n            }\n          }\n          if (prop.type === 6 && prop.name === \"ref\" && ((_a = prop.value) == null ? void 0 : _a.content)) {\n            ids.add(prop.value.content);\n          }\n        }\n        node.children.forEach(walk);\n        break;\n      case 5:\n        extractIdentifiers(ids, node.content);\n        break;\n    }\n  }\n  templateUsageCheckCache.set(content, ids);\n  return ids;\n}\nfunction extractIdentifiers(ids, node) {\n  if (node.ast) {\n    walkIdentifiers(node.ast, (n) => ids.add(n.name));\n  } else if (node.ast === null) {\n    ids.add(node.content);\n  }\n}\n\nvar __defProp$a = Object.defineProperty;\nvar __defProps$9 = Object.defineProperties;\nvar __getOwnPropDescs$9 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$a = Object.getOwnPropertySymbols;\nvar __hasOwnProp$a = Object.prototype.hasOwnProperty;\nvar __propIsEnum$a = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$a = (obj, key, value) => key in obj ? __defProp$a(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$a = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$a.call(b, prop))\n      __defNormalProp$a(a, prop, b[prop]);\n  if (__getOwnPropSymbols$a)\n    for (var prop of __getOwnPropSymbols$a(b)) {\n      if (__propIsEnum$a.call(b, prop))\n        __defNormalProp$a(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$9 = (a, b) => __defProps$9(a, __getOwnPropDescs$9(b));\nconst DEFAULT_FILENAME = \"anonymous.vue\";\nconst parseCache$1 = createCache();\nfunction genCacheKey(source, options) {\n  var _a;\n  return source + JSON.stringify(\n    __spreadProps$9(__spreadValues$a({}, options), {\n      compiler: { parse: (_a = options.compiler) == null ? void 0 : _a.parse }\n    }),\n    (_, val) => typeof val === \"function\" ? val.toString() : val\n  );\n}\nfunction parse$7(source, options = {}) {\n  const sourceKey = genCacheKey(source, options);\n  const cache = parseCache$1.get(sourceKey);\n  if (cache) {\n    return cache;\n  }\n  const {\n    sourceMap = true,\n    filename = DEFAULT_FILENAME,\n    sourceRoot = \"\",\n    pad = false,\n    ignoreEmpty = true,\n    compiler = CompilerDOM,\n    templateParseOptions = {},\n    parseExpressions = true\n  } = options;\n  const descriptor = {\n    filename,\n    source,\n    template: null,\n    script: null,\n    scriptSetup: null,\n    styles: [],\n    customBlocks: [],\n    cssVars: [],\n    slotted: false,\n    shouldForceReload: (prevImports) => hmrShouldReload(prevImports, descriptor)\n  };\n  const errors = [];\n  const ast = compiler.parse(source, __spreadProps$9(__spreadValues$a({\n    parseMode: \"sfc\",\n    prefixIdentifiers: parseExpressions\n  }, templateParseOptions), {\n    onError: (e) => {\n      errors.push(e);\n    }\n  }));\n  ast.children.forEach((node) => {\n    if (node.type !== 1) {\n      return;\n    }\n    if (ignoreEmpty && node.tag !== \"template\" && isEmpty(node) && !hasSrc(node)) {\n      return;\n    }\n    switch (node.tag) {\n      case \"template\":\n        if (!descriptor.template) {\n          const templateBlock = descriptor.template = createBlock(\n            node,\n            source,\n            false\n          );\n          if (!templateBlock.attrs.src) {\n            templateBlock.ast = createRoot(node.children, source);\n          }\n          if (templateBlock.attrs.functional) {\n            const err = new SyntaxError(\n              `<template functional> is no longer supported in Vue 3, since functional components no longer have significant performance difference from stateful ones. Just use a normal <template> instead.`\n            );\n            err.loc = node.props.find(\n              (p) => p.type === 6 && p.name === \"functional\"\n            ).loc;\n            errors.push(err);\n          }\n        } else {\n          errors.push(createDuplicateBlockError(node));\n        }\n        break;\n      case \"script\":\n        const scriptBlock = createBlock(node, source, pad);\n        const isSetup = !!scriptBlock.attrs.setup;\n        if (isSetup && !descriptor.scriptSetup) {\n          descriptor.scriptSetup = scriptBlock;\n          break;\n        }\n        if (!isSetup && !descriptor.script) {\n          descriptor.script = scriptBlock;\n          break;\n        }\n        errors.push(createDuplicateBlockError(node, isSetup));\n        break;\n      case \"style\":\n        const styleBlock = createBlock(node, source, pad);\n        if (styleBlock.attrs.vars) {\n          errors.push(\n            new SyntaxError(\n              `<style vars> has been replaced by a new proposal: https://github.com/vuejs/rfcs/pull/231`\n            )\n          );\n        }\n        descriptor.styles.push(styleBlock);\n        break;\n      default:\n        descriptor.customBlocks.push(createBlock(node, source, pad));\n        break;\n    }\n  });\n  if (!descriptor.template && !descriptor.script && !descriptor.scriptSetup) {\n    errors.push(\n      new SyntaxError(\n        `At least one <template> or <script> is required in a single file component.`\n      )\n    );\n  }\n  if (descriptor.scriptSetup) {\n    if (descriptor.scriptSetup.src) {\n      errors.push(\n        new SyntaxError(\n          `<script setup> cannot use the \"src\" attribute because its syntax will be ambiguous outside of the component.`\n        )\n      );\n      descriptor.scriptSetup = null;\n    }\n    if (descriptor.script && descriptor.script.src) {\n      errors.push(\n        new SyntaxError(\n          `<script> cannot use the \"src\" attribute when <script setup> is also present because they must be processed together.`\n        )\n      );\n      descriptor.script = null;\n    }\n  }\n  let templateColumnOffset = 0;\n  if (descriptor.template && (descriptor.template.lang === \"pug\" || descriptor.template.lang === \"jade\")) {\n    [descriptor.template.content, templateColumnOffset] = dedent(\n      descriptor.template.content\n    );\n  }\n  if (sourceMap) {\n    const genMap = (block, columnOffset = 0) => {\n      if (block && !block.src) {\n        block.map = generateSourceMap(\n          filename,\n          source,\n          block.content,\n          sourceRoot,\n          !pad || block.type === \"template\" ? block.loc.start.line - 1 : 0,\n          columnOffset\n        );\n      }\n    };\n    genMap(descriptor.template, templateColumnOffset);\n    genMap(descriptor.script);\n    descriptor.styles.forEach((s) => genMap(s));\n    descriptor.customBlocks.forEach((s) => genMap(s));\n  }\n  descriptor.cssVars = parseCssVars(descriptor);\n  const slottedRE = /(?:::v-|:)slotted\\(/;\n  descriptor.slotted = descriptor.styles.some(\n    (s) => s.scoped && slottedRE.test(s.content)\n  );\n  const result = {\n    descriptor,\n    errors\n  };\n  parseCache$1.set(sourceKey, result);\n  return result;\n}\nfunction createDuplicateBlockError(node, isScriptSetup = false) {\n  const err = new SyntaxError(\n    `Single file component can contain only one <${node.tag}${isScriptSetup ? ` setup` : ``}> element`\n  );\n  err.loc = node.loc;\n  return err;\n}\nfunction createBlock(node, source, pad) {\n  const type = node.tag;\n  const loc = node.innerLoc;\n  const attrs = {};\n  const block = {\n    type,\n    content: source.slice(loc.start.offset, loc.end.offset),\n    loc,\n    attrs\n  };\n  if (pad) {\n    block.content = padContent(source, block, pad) + block.content;\n  }\n  node.props.forEach((p) => {\n    if (p.type === 6) {\n      const name = p.name;\n      attrs[name] = p.value ? p.value.content || true : true;\n      if (name === \"lang\") {\n        block.lang = p.value && p.value.content;\n      } else if (name === \"src\") {\n        block.src = p.value && p.value.content;\n      } else if (type === \"style\") {\n        if (name === \"scoped\") {\n          block.scoped = true;\n        } else if (name === \"module\") {\n          block.module = attrs[name];\n        }\n      } else if (type === \"script\" && name === \"setup\") {\n        block.setup = attrs.setup;\n      }\n    }\n  });\n  return block;\n}\nconst splitRE = /\\r?\\n/g;\nconst emptyRE = /^(?:\\/\\/)?\\s*$/;\nconst replaceRE = /./g;\nfunction generateSourceMap(filename, source, generated, sourceRoot, lineOffset, columnOffset) {\n  const map = new SourceMapGenerator$6({\n    file: filename.replace(/\\\\/g, \"/\"),\n    sourceRoot: sourceRoot.replace(/\\\\/g, \"/\")\n  });\n  map.setSourceContent(filename, source);\n  map._sources.add(filename);\n  generated.split(splitRE).forEach((line, index) => {\n    if (!emptyRE.test(line)) {\n      const originalLine = index + 1 + lineOffset;\n      const generatedLine = index + 1;\n      for (let i = 0; i < line.length; i++) {\n        if (!/\\s/.test(line[i])) {\n          map._mappings.add({\n            originalLine,\n            originalColumn: i + columnOffset,\n            generatedLine,\n            generatedColumn: i,\n            source: filename,\n            name: null\n          });\n        }\n      }\n    }\n  });\n  return map.toJSON();\n}\nfunction padContent(content, block, pad) {\n  content = content.slice(0, block.loc.start.offset);\n  if (pad === \"space\") {\n    return content.replace(replaceRE, \" \");\n  } else {\n    const offset = content.split(splitRE).length;\n    const padChar = block.type === \"script\" && !block.lang ? \"//\\n\" : \"\\n\";\n    return Array(offset).join(padChar);\n  }\n}\nfunction hasSrc(node) {\n  return node.props.some((p) => {\n    if (p.type !== 6) {\n      return false;\n    }\n    return p.name === \"src\";\n  });\n}\nfunction isEmpty(node) {\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i];\n    if (child.type !== 2 || child.content.trim() !== \"\") {\n      return false;\n    }\n  }\n  return true;\n}\nfunction hmrShouldReload(prevImports, next) {\n  if (!next.scriptSetup || next.scriptSetup.lang !== \"ts\" && next.scriptSetup.lang !== \"tsx\") {\n    return false;\n  }\n  for (const key in prevImports) {\n    if (!prevImports[key].isUsedInTemplate && isImportUsed(key, next)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction dedent(s) {\n  const lines = s.split(\"\\n\");\n  const minIndent = lines.reduce(function(minIndent2, line) {\n    var _a, _b;\n    if (line.trim() === \"\") {\n      return minIndent2;\n    }\n    const indent = ((_b = (_a = line.match(/^\\s*/)) == null ? void 0 : _a[0]) == null ? void 0 : _b.length) || 0;\n    return Math.min(indent, minIndent2);\n  }, Infinity);\n  if (minIndent === 0) {\n    return [s, minIndent];\n  }\n  return [\n    lines.map(function(line) {\n      return line.slice(minIndent);\n    }).join(\"\\n\"),\n    minIndent\n  ];\n}\n\n/*! https://mths.be/punycode v1.4.1 by @mathias */\n\n\n/** Highest positive signed 32-bit float value */\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\nvar regexNonASCII = /[^\\x20-\\x7E]/; // unprintable ASCII chars + non-ASCII chars\nvar regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nvar errors = {\n  'overflow': 'Overflow: input needs wider integers to process',\n  'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n  'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n  throw new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map$1(array, fn) {\n  var length = array.length;\n  var result = [];\n  while (length--) {\n    result[length] = fn(array[length]);\n  }\n  return result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n  var parts = string.split('@');\n  var result = '';\n  if (parts.length > 1) {\n    // In email addresses, only the domain name should be punycoded. Leave\n    // the local part (i.e. everything up to `@`) intact.\n    result = parts[0] + '@';\n    string = parts[1];\n  }\n  // Avoid `split(regex)` for IE8 compatibility. See #17.\n  string = string.replace(regexSeparators, '\\x2E');\n  var labels = string.split('.');\n  var encoded = map$1(labels, fn).join('.');\n  return result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n  var output = [],\n    counter = 0,\n    length = string.length,\n    value,\n    extra;\n  while (counter < length) {\n    value = string.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // high surrogate, and there is a next character\n      extra = string.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) { // low surrogate\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // unmatched surrogate; only append this code unit, in case the next\n        // code unit is the high surrogate of a surrogate pair\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n}\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nfunction digitToBasic(digit, flag) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n}\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nfunction adapt(delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  for ( /* no initialization */ ; delta > baseMinusTMin * tMax >> 1; k += base) {\n    delta = floor(delta / baseMinusTMin);\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n}\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nfunction encode$1(input) {\n  var n,\n    delta,\n    handledCPCount,\n    basicLength,\n    bias,\n    j,\n    m,\n    q,\n    k,\n    t,\n    currentValue,\n    output = [],\n    /** `inputLength` will hold the number of code points in `input`. */\n    inputLength,\n    /** Cached calculation results */\n    handledCPCountPlusOne,\n    baseMinusT,\n    qMinusT;\n\n  // Convert the input in UCS-2 to Unicode\n  input = ucs2decode(input);\n\n  // Cache the length\n  inputLength = input.length;\n\n  // Initialize the state\n  n = initialN;\n  delta = 0;\n  bias = initialBias;\n\n  // Handle the basic code points\n  for (j = 0; j < inputLength; ++j) {\n    currentValue = input[j];\n    if (currentValue < 0x80) {\n      output.push(stringFromCharCode(currentValue));\n    }\n  }\n\n  handledCPCount = basicLength = output.length;\n\n  // `handledCPCount` is the number of code points that have been handled;\n  // `basicLength` is the number of basic code points.\n\n  // Finish the basic string - if it is not empty - with a delimiter\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n\n    // All non-basic code points < n have been handled already. Find the next\n    // larger one:\n    for (m = maxInt, j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n    // but guard against overflow\n    handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      error('overflow');\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < n && ++delta > maxInt) {\n        error('overflow');\n      }\n\n      if (currentValue == n) {\n        // Represent delta as a generalized variable-length integer\n        for (q = delta, k = base; /* no condition */ ; k += base) {\n          t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) {\n            break;\n          }\n          qMinusT = q - t;\n          baseMinusT = base - t;\n          output.push(\n            stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n          );\n          q = floor(qMinusT / baseMinusT);\n        }\n\n        output.push(stringFromCharCode(digitToBasic(q, 0)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n\n  }\n  return output.join('');\n}\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nfunction toASCII(input) {\n  return mapDomain(input, function(string) {\n    return regexNonASCII.test(string) ?\n      'xn--' + encode$1(string) :\n      string;\n  });\n}\n\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\n\nfunction toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = (tmp >> 16) & 0xFF;\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[(tmp << 4) & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n    output += lookup[tmp >> 10];\n    output += lookup[(tmp >> 4) & 0x3F];\n    output += lookup[(tmp << 2) & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('')\n}\n\nfunction read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n}\n\nvar toString$1 = {}.toString;\n\nvar isArray$2 = Array.isArray || function (arr) {\n  return toString$1.call(arr) == '[object Array]';\n};\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer$1.TYPED_ARRAY_SUPPORT = global$1.TYPED_ARRAY_SUPPORT !== undefined\n  ? global$1.TYPED_ARRAY_SUPPORT\n  : true;\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nkMaxLength();\n\nfunction kMaxLength () {\n  return Buffer$1.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer$1.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer$1(length);\n    }\n    that.length = length;\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer$1 (arg, encodingOrOffset, length) {\n  if (!Buffer$1.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer$1)) {\n    return new Buffer$1(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer$1.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer$1._augment = function (arr) {\n  arr.__proto__ = Buffer$1.prototype;\n  return arr\n};\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer$1.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n};\n\nif (Buffer$1.TYPED_ARRAY_SUPPORT) {\n  Buffer$1.prototype.__proto__ = Uint8Array.prototype;\n  Buffer$1.__proto__ = Uint8Array;\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer$1[Symbol.species] === Buffer$1) ;\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer$1.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n};\n\nfunction allocUnsafe (that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer$1.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer$1.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer$1.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n};\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer$1.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer$1.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray$2(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\nBuffer$1.isBuffer = isBuffer$1;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer$1.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer$1.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer$1.concat = function concat (list, length) {\n  if (!isArray$2(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer$1.alloc(0)\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer$1.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer$1.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer$1.prototype._isBuffer = true;\n\nfunction swap$1 (b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer$1.prototype.swap16 = function swap16 () {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap$1(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer$1.prototype.swap32 = function swap32 () {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap$1(this, i, i + 3);\n    swap$1(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer$1.prototype.swap64 = function swap64 () {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap$1(this, i, i + 7);\n    swap$1(this, i + 1, i + 6);\n    swap$1(this, i + 2, i + 5);\n    swap$1(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer$1.prototype.toString = function toString () {\n  var length = this.length | 0;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer$1.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer$1.compare(this, b) === 0\n};\n\nBuffer$1.prototype.inspect = function inspect () {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>'\n};\n\nBuffer$1.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset;  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer$1.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer$1.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer$1.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer$1.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer$1.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer$1.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer$1.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf)\n  } else {\n    return fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res\n}\n\nBuffer$1.prototype.slice = function slice (start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer$1.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer$1(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer$1.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer$1.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer$1.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer$1.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer$1.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer$1.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer$1.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer$1.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer$1.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer$1.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer$1.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer$1.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer$1.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer$1.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer$1.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4)\n};\n\nBuffer$1.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4)\n};\n\nBuffer$1.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8)\n};\n\nBuffer$1.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer$1.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer$1.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer$1.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer$1.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer$1.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer$1.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n  }\n}\n\nBuffer$1.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 1] = (value >>> 8);\n    this[offset] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer$1.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nBuffer$1.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer$1.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer$1.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer$1.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer$1.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer$1.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nBuffer$1.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 3] = (value >>> 24);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer$1.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer$1.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer$1.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer$1.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer$1.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer$1.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer$1.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer$1.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer$1.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer$1(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer$1(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}\nvar inherits$1 = inherits;\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nfunction format$1(f) {\n  if (!isString$1(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject$1(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n}\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nfunction deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global$1.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (browser$1.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (browser$1.throwDeprecation) {\n        throw new Error(msg);\n      } else if (browser$1.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\nvar debugs = {};\nvar debugEnviron;\nfunction debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = browser$1.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format$1.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n}\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString$1(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray$1(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString$1(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty$3(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty$3(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function(prev, cur) {\n    if (cur.indexOf('\\n') >= 0) ;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray$1(ar) {\n  return Array.isArray(ar);\n}\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isString$1(arg) {\n  return typeof arg === 'string';\n}\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nfunction isRegExp(re) {\n  return isObject$1(re) && objectToString(re) === '[object RegExp]';\n}\n\nfunction isObject$1(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isDate(d) {\n  return isObject$1(d) && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return isObject$1(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nfunction isBuffer(maybeBuf) {\n  return Buffer$1.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nfunction log() {\n  console.log('%s - %s', timestamp(), format$1.apply(null, arguments));\n}\n\nfunction _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject$1(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n}\nfunction hasOwnProperty$3(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nfunction promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\npromisify.custom = kCustomPromisifiedSymbol;\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { browser$1.nextTick(cb.bind(null, null, ret)); },\n        function(rej) { browser$1.nextTick(callbackifyOnRejected.bind(null, rej, cb)); });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified, getOwnPropertyDescriptors(original));\n  return callbackified;\n}\n\nvar _polyfillNode_util = {\n  inherits: inherits$1,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject$1,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString$1,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray$1,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format$1,\n  debuglog: debuglog,\n  promisify: promisify,\n  callbackify: callbackify,\n};\n\nvar _polyfillNode_util$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  _extend: _extend,\n  callbackify: callbackify,\n  debuglog: debuglog,\n  default: _polyfillNode_util,\n  deprecate: deprecate,\n  format: format$1,\n  inherits: inherits$1,\n  inspect: inspect,\n  isArray: isArray$1,\n  isBoolean: isBoolean,\n  isBuffer: isBuffer,\n  isDate: isDate,\n  isError: isError,\n  isFunction: isFunction,\n  isNull: isNull,\n  isNullOrUndefined: isNullOrUndefined,\n  isNumber: isNumber,\n  isObject: isObject$1,\n  isPrimitive: isPrimitive,\n  isRegExp: isRegExp,\n  isString: isString$1,\n  isSymbol: isSymbol,\n  isUndefined: isUndefined,\n  log: log,\n  promisify: promisify\n});\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty$2(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\nfunction stringifyPrimitive(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n}\n\nfunction stringify$5 (obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n}\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\nfunction parse$6(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty$2(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n}\n\n// WHATWG API\nconst URL$1 = global$1.URL;\nconst URLSearchParams = global$1.URLSearchParams;\nvar _polyfillNode_url = {\n  parse: urlParse,\n  resolve: urlResolve,\n  resolveObject: urlResolveObject,\n  fileURLToPath: urlFileURLToPath,\n  format: urlFormat,\n  Url: Url,\n\n  // WHATWG API\n  URL: URL$1,\n  URLSearchParams,  \n};\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n  // RFC 2396: characters reserved for delimiting URLs.\n  // We actually just auto-escape these.\n  delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  // Characters that are never ever allowed in a hostname.\n  // Note that any invalid chars are also handled, but these\n  // are the ones that are *expected* to be seen, so we fast-path\n  // them.\n  nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n  hostEndingChars = ['/', '?', '#'],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    'javascript': true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    'javascript': true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    'http': true,\n    'https': true,\n    'ftp': true,\n    'gopher': true,\n    'file': true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  };\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject$1(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  return parse$5(this, url, parseQueryString, slashesDenoteHost);\n};\n\nfunction parse$5(self, url, parseQueryString, slashesDenoteHost) {\n  if (!isString$1(url)) {\n    throw new TypeError('Parameter \\'url\\' must be a string, not ' + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n    splitter =\n    (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      self.path = rest;\n      self.href = rest;\n      self.pathname = simplePath[1];\n      if (simplePath[2]) {\n        self.search = simplePath[2];\n        if (parseQueryString) {\n          self.query = parse$6(self.search.substr(1));\n        } else {\n          self.query = self.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        self.search = '';\n        self.query = {};\n      }\n      return self;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    self.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      self.slashes = true;\n    }\n  }\n  var i, hec, l, p;\n  if (!hostlessProtocol[proto] &&\n    (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      self.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    self.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    parseHost(self);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    self.hostname = self.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = self.hostname[0] === '[' &&\n      self.hostname[self.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = self.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            self.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (self.hostname.length > hostnameMaxLen) {\n      self.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      self.hostname = self.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      self.hostname = toASCII(self.hostname);\n    }\n\n    p = self.port ? ':' + self.port : '';\n    var h = self.hostname || '';\n    self.host = h + p;\n    self.href += self.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      self.hostname = self.hostname.substr(1, self.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    self.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    self.search = rest.substr(qm);\n    self.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      self.query = parse$6(self.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    self.search = '';\n    self.query = {};\n  }\n  if (rest) self.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n    self.hostname && !self.pathname) {\n    self.pathname = '/';\n  }\n\n  //to support http.request\n  if (self.pathname || self.search) {\n    p = self.pathname || '';\n    var s = self.search || '';\n    self.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  self.href = format(self);\n  return self;\n}\n\nfunction urlFileURLToPath(path) {\n  if (typeof path === 'string')\n    path = new Url().parse(path);\n  else if (!(path instanceof Url))\n    throw new TypeError('The \"path\" argument must be of type string or an instance of URL. Received type ' + (typeof path) + String(path));\n  if (path.protocol !== 'file:')\n    throw new TypeError('The URL must be of scheme file');\n  return getPathFromURLPosix(path);\n}\n\nfunction getPathFromURLPosix(url) {\n  const pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = pathname.codePointAt(n + 2) | 0x20;\n      if (pathname[n + 1] === '2' && third === 102) {\n        throw new TypeError(\n          'must not include encoded / characters'\n        );\n      }\n    }\n  }\n  return decodeURIComponent(pathname);\n}\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString$1(obj)) obj = parse$5({}, obj);\n  return format(obj);\n}\n\nfunction format(self) {\n  var auth = self.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = self.protocol || '',\n    pathname = self.pathname || '',\n    hash = self.hash || '',\n    host = false,\n    query = '';\n\n  if (self.host) {\n    host = auth + self.host;\n  } else if (self.hostname) {\n    host = auth + (self.hostname.indexOf(':') === -1 ?\n      self.hostname :\n      '[' + this.hostname + ']');\n    if (self.port) {\n      host += ':' + self.port;\n    }\n  }\n\n  if (self.query &&\n    isObject$1(self.query) &&\n    Object.keys(self.query).length) {\n    query = stringify$5(self.query);\n  }\n\n  var search = self.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (self.slashes ||\n    (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n}\n\nUrl.prototype.format = function() {\n  return format(this);\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString$1(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n      result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n  var relPath;\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n    isRelAbs = (\n      relative.host ||\n      relative.pathname && relative.pathname.charAt(0) === '/'\n    ),\n    mustEndAbs = (isRelAbs || isSourceAbs ||\n      (result.host && relative.pathname)),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n  relPath = relative.pathname && relative.pathname.split('/') || [];\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n  var authInHost;\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n      relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      authInHost = result.host && result.host.indexOf('@') > 0 ?\n        result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n        (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n    (result.host || relative.host || srcPath.length > 1) &&\n    (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n    (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n    (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n      srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    authInHost = result.host && result.host.indexOf('@') > 0 ?\n      result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n      (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  return parseHost(this);\n};\n\nfunction parseHost(self) {\n  var host = self.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      self.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) self.hostname = host;\n}\n\nvar _polyfillNode_url$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  URL: URL$1,\n  URLSearchParams: URLSearchParams,\n  Url: Url,\n  default: _polyfillNode_url,\n  fileURLToPath: urlFileURLToPath,\n  format: urlFormat,\n  parse: urlParse,\n  resolve: urlResolve,\n  resolveObject: urlResolveObject\n});\n\nfunction isRelativeUrl(url) {\n  const firstChar = url.charAt(0);\n  return firstChar === \".\" || firstChar === \"~\" || firstChar === \"@\";\n}\nconst externalRE = /^(https?:)?\\/\\//;\nfunction isExternalUrl(url) {\n  return externalRE.test(url);\n}\nconst dataUrlRE = /^\\s*data:/i;\nfunction isDataUrl(url) {\n  return dataUrlRE.test(url);\n}\nfunction parseUrl(url) {\n  const firstChar = url.charAt(0);\n  if (firstChar === \"~\") {\n    const secondChar = url.charAt(1);\n    url = url.slice(secondChar === \"/\" ? 2 : 1);\n  }\n  return parseUriParts(url);\n}\nfunction parseUriParts(urlString) {\n  return urlParse(isString$2(urlString) ? urlString : \"\", false, true);\n}\n\nvar __defProp$9 = Object.defineProperty;\nvar __defProps$8 = Object.defineProperties;\nvar __getOwnPropDescs$8 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$9 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$9 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$9 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$9 = (obj, key, value) => key in obj ? __defProp$9(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$9 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$9.call(b, prop))\n      __defNormalProp$9(a, prop, b[prop]);\n  if (__getOwnPropSymbols$9)\n    for (var prop of __getOwnPropSymbols$9(b)) {\n      if (__propIsEnum$9.call(b, prop))\n        __defNormalProp$9(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$8 = (a, b) => __defProps$8(a, __getOwnPropDescs$8(b));\nconst defaultAssetUrlOptions = {\n  base: null,\n  includeAbsolute: false,\n  tags: {\n    video: [\"src\", \"poster\"],\n    source: [\"src\"],\n    img: [\"src\"],\n    image: [\"xlink:href\", \"href\"],\n    use: [\"xlink:href\", \"href\"]\n  }\n};\nconst normalizeOptions = (options) => {\n  if (Object.keys(options).some((key) => isArray$3(options[key]))) {\n    return __spreadProps$8(__spreadValues$9({}, defaultAssetUrlOptions), {\n      tags: options\n    });\n  }\n  return __spreadValues$9(__spreadValues$9({}, defaultAssetUrlOptions), options);\n};\nconst createAssetUrlTransformWithOptions = (options) => {\n  return (node, context) => transformAssetUrl(node, context, options);\n};\nconst transformAssetUrl = (node, context, options = defaultAssetUrlOptions) => {\n  if (node.type === 1) {\n    if (!node.props.length) {\n      return;\n    }\n    const tags = options.tags || defaultAssetUrlOptions.tags;\n    const attrs = tags[node.tag];\n    const wildCardAttrs = tags[\"*\"];\n    if (!attrs && !wildCardAttrs) {\n      return;\n    }\n    const assetAttrs = (attrs || []).concat(wildCardAttrs || []);\n    node.props.forEach((attr, index) => {\n      if (attr.type !== 6 || !assetAttrs.includes(attr.name) || !attr.value || isExternalUrl(attr.value.content) || isDataUrl(attr.value.content) || attr.value.content[0] === \"#\" || !options.includeAbsolute && !isRelativeUrl(attr.value.content)) {\n        return;\n      }\n      const url = parseUrl(attr.value.content);\n      if (options.base && attr.value.content[0] === \".\") {\n        const base = parseUrl(options.base);\n        const protocol = base.protocol || \"\";\n        const host = base.host ? protocol + \"//\" + base.host : \"\";\n        const basePath = base.path || \"/\";\n        attr.value.content = host + (path.posix || path).join(basePath, url.path + (url.hash || \"\"));\n        return;\n      }\n      const exp = getImportsExpressionExp(url.path, url.hash, attr.loc, context);\n      node.props[index] = {\n        type: 7,\n        name: \"bind\",\n        arg: createSimpleExpression(attr.name, true, attr.loc),\n        exp,\n        modifiers: [],\n        loc: attr.loc\n      };\n    });\n  }\n};\nfunction getImportsExpressionExp(path2, hash, loc, context) {\n  if (path2) {\n    let name;\n    let exp;\n    const existingIndex = context.imports.findIndex((i) => i.path === path2);\n    if (existingIndex > -1) {\n      name = `_imports_${existingIndex}`;\n      exp = context.imports[existingIndex].exp;\n    } else {\n      name = `_imports_${context.imports.length}`;\n      exp = createSimpleExpression(\n        name,\n        false,\n        loc,\n        3\n      );\n      context.imports.push({\n        exp,\n        path: decodeURIComponent(path2)\n      });\n    }\n    if (!hash) {\n      return exp;\n    }\n    const hashExp = `${name} + '${hash}'`;\n    const finalExp = createSimpleExpression(\n      hashExp,\n      false,\n      loc,\n      3\n    );\n    if (!context.hoistStatic) {\n      return finalExp;\n    }\n    const existingHoistIndex = context.hoists.findIndex((h) => {\n      return h && h.type === 4 && !h.isStatic && h.content === hashExp;\n    });\n    if (existingHoistIndex > -1) {\n      return createSimpleExpression(\n        `_hoisted_${existingHoistIndex + 1}`,\n        false,\n        loc,\n        3\n      );\n    }\n    return context.hoist(finalExp);\n  } else {\n    return createSimpleExpression(`''`, false, loc, 3);\n  }\n}\n\nconst srcsetTags = [\"img\", \"source\"];\nconst escapedSpaceCharacters = /( |\\\\t|\\\\n|\\\\f|\\\\r)+/g;\nconst createSrcsetTransformWithOptions = (options) => {\n  return (node, context) => transformSrcset(node, context, options);\n};\nconst transformSrcset = (node, context, options = defaultAssetUrlOptions) => {\n  if (node.type === 1) {\n    if (srcsetTags.includes(node.tag) && node.props.length) {\n      node.props.forEach((attr, index) => {\n        if (attr.name === \"srcset\" && attr.type === 6) {\n          if (!attr.value)\n            return;\n          const value = attr.value.content;\n          if (!value)\n            return;\n          const imageCandidates = value.split(\",\").map((s) => {\n            const [url, descriptor] = s.replace(escapedSpaceCharacters, \" \").trim().split(\" \", 2);\n            return { url, descriptor };\n          });\n          for (let i = 0; i < imageCandidates.length; i++) {\n            const { url } = imageCandidates[i];\n            if (isDataUrl(url)) {\n              imageCandidates[i + 1].url = url + \",\" + imageCandidates[i + 1].url;\n              imageCandidates.splice(i, 1);\n            }\n          }\n          const shouldProcessUrl = (url) => {\n            return !isExternalUrl(url) && !isDataUrl(url) && (options.includeAbsolute || isRelativeUrl(url));\n          };\n          if (!imageCandidates.some(({ url }) => shouldProcessUrl(url))) {\n            return;\n          }\n          if (options.base) {\n            const base = options.base;\n            const set = [];\n            let needImportTransform = false;\n            imageCandidates.forEach((candidate) => {\n              let { url, descriptor } = candidate;\n              descriptor = descriptor ? ` ${descriptor}` : ``;\n              if (url[0] === \".\") {\n                candidate.url = (path.posix || path).join(base, url);\n                set.push(candidate.url + descriptor);\n              } else if (shouldProcessUrl(url)) {\n                needImportTransform = true;\n              } else {\n                set.push(url + descriptor);\n              }\n            });\n            if (!needImportTransform) {\n              attr.value.content = set.join(\", \");\n              return;\n            }\n          }\n          const compoundExpression = createCompoundExpression([], attr.loc);\n          imageCandidates.forEach(({ url, descriptor }, index2) => {\n            if (shouldProcessUrl(url)) {\n              const { path: path2 } = parseUrl(url);\n              let exp2;\n              if (path2) {\n                const existingImportsIndex = context.imports.findIndex(\n                  (i) => i.path === path2\n                );\n                if (existingImportsIndex > -1) {\n                  exp2 = createSimpleExpression(\n                    `_imports_${existingImportsIndex}`,\n                    false,\n                    attr.loc,\n                    3\n                  );\n                } else {\n                  exp2 = createSimpleExpression(\n                    `_imports_${context.imports.length}`,\n                    false,\n                    attr.loc,\n                    3\n                  );\n                  context.imports.push({ exp: exp2, path: path2 });\n                }\n                compoundExpression.children.push(exp2);\n              }\n            } else {\n              const exp2 = createSimpleExpression(\n                `\"${url}\"`,\n                false,\n                attr.loc,\n                3\n              );\n              compoundExpression.children.push(exp2);\n            }\n            const isNotLast = imageCandidates.length - 1 > index2;\n            if (descriptor && isNotLast) {\n              compoundExpression.children.push(` + ' ${descriptor}, ' + `);\n            } else if (descriptor) {\n              compoundExpression.children.push(` + ' ${descriptor}'`);\n            } else if (isNotLast) {\n              compoundExpression.children.push(` + ', ' + `);\n            }\n          });\n          let exp = compoundExpression;\n          if (context.hoistStatic) {\n            exp = context.hoist(compoundExpression);\n            exp.constType = 3;\n          }\n          node.props[index] = {\n            type: 7,\n            name: \"bind\",\n            arg: createSimpleExpression(\"srcset\", true, attr.loc),\n            exp,\n            modifiers: [],\n            loc: attr.loc\n          };\n        }\n      });\n    }\n  }\n};\n\nconst SSR_INTERPOLATE = Symbol(`ssrInterpolate`);\nconst SSR_RENDER_VNODE = Symbol(`ssrRenderVNode`);\nconst SSR_RENDER_COMPONENT = Symbol(`ssrRenderComponent`);\nconst SSR_RENDER_SLOT = Symbol(`ssrRenderSlot`);\nconst SSR_RENDER_SLOT_INNER = Symbol(`ssrRenderSlotInner`);\nconst SSR_RENDER_CLASS = Symbol(`ssrRenderClass`);\nconst SSR_RENDER_STYLE = Symbol(`ssrRenderStyle`);\nconst SSR_RENDER_ATTRS = Symbol(`ssrRenderAttrs`);\nconst SSR_RENDER_ATTR = Symbol(`ssrRenderAttr`);\nconst SSR_RENDER_DYNAMIC_ATTR = Symbol(`ssrRenderDynamicAttr`);\nconst SSR_RENDER_LIST = Symbol(`ssrRenderList`);\nconst SSR_INCLUDE_BOOLEAN_ATTR = Symbol(`ssrIncludeBooleanAttr`);\nconst SSR_LOOSE_EQUAL = Symbol(`ssrLooseEqual`);\nconst SSR_LOOSE_CONTAIN = Symbol(`ssrLooseContain`);\nconst SSR_RENDER_DYNAMIC_MODEL = Symbol(`ssrRenderDynamicModel`);\nconst SSR_GET_DYNAMIC_MODEL_PROPS = Symbol(`ssrGetDynamicModelProps`);\nconst SSR_RENDER_TELEPORT = Symbol(`ssrRenderTeleport`);\nconst SSR_RENDER_SUSPENSE = Symbol(`ssrRenderSuspense`);\nconst SSR_GET_DIRECTIVE_PROPS = Symbol(`ssrGetDirectiveProps`);\nconst ssrHelpers = {\n  [SSR_INTERPOLATE]: `ssrInterpolate`,\n  [SSR_RENDER_VNODE]: `ssrRenderVNode`,\n  [SSR_RENDER_COMPONENT]: `ssrRenderComponent`,\n  [SSR_RENDER_SLOT]: `ssrRenderSlot`,\n  [SSR_RENDER_SLOT_INNER]: `ssrRenderSlotInner`,\n  [SSR_RENDER_CLASS]: `ssrRenderClass`,\n  [SSR_RENDER_STYLE]: `ssrRenderStyle`,\n  [SSR_RENDER_ATTRS]: `ssrRenderAttrs`,\n  [SSR_RENDER_ATTR]: `ssrRenderAttr`,\n  [SSR_RENDER_DYNAMIC_ATTR]: `ssrRenderDynamicAttr`,\n  [SSR_RENDER_LIST]: `ssrRenderList`,\n  [SSR_INCLUDE_BOOLEAN_ATTR]: `ssrIncludeBooleanAttr`,\n  [SSR_LOOSE_EQUAL]: `ssrLooseEqual`,\n  [SSR_LOOSE_CONTAIN]: `ssrLooseContain`,\n  [SSR_RENDER_DYNAMIC_MODEL]: `ssrRenderDynamicModel`,\n  [SSR_GET_DYNAMIC_MODEL_PROPS]: `ssrGetDynamicModelProps`,\n  [SSR_RENDER_TELEPORT]: `ssrRenderTeleport`,\n  [SSR_RENDER_SUSPENSE]: `ssrRenderSuspense`,\n  [SSR_GET_DIRECTIVE_PROPS]: `ssrGetDirectiveProps`\n};\nregisterRuntimeHelpers(ssrHelpers);\n\nconst ssrTransformIf = createStructuralDirectiveTransform(\n  /^(if|else|else-if)$/,\n  processIf\n);\nfunction ssrProcessIf(node, context, disableNestedFragments = false, disableCommentAsIfAlternate = false) {\n  const [rootBranch] = node.branches;\n  const ifStatement = createIfStatement(\n    rootBranch.condition,\n    processIfBranch(rootBranch, context, disableNestedFragments)\n  );\n  context.pushStatement(ifStatement);\n  let currentIf = ifStatement;\n  for (let i = 1; i < node.branches.length; i++) {\n    const branch = node.branches[i];\n    const branchBlockStatement = processIfBranch(\n      branch,\n      context,\n      disableNestedFragments\n    );\n    if (branch.condition) {\n      currentIf = currentIf.alternate = createIfStatement(\n        branch.condition,\n        branchBlockStatement\n      );\n    } else {\n      currentIf.alternate = branchBlockStatement;\n    }\n  }\n  if (!currentIf.alternate && !disableCommentAsIfAlternate) {\n    currentIf.alternate = createBlockStatement([\n      createCallExpression(`_push`, [\"`<!---->`\"])\n    ]);\n  }\n}\nfunction processIfBranch(branch, context, disableNestedFragments = false) {\n  const { children } = branch;\n  const needFragmentWrapper = !disableNestedFragments && (children.length !== 1 || children[0].type !== 1) && // optimize away nested fragments when the only child is a ForNode\n  !(children.length === 1 && children[0].type === 11);\n  return processChildrenAsStatement(branch, context, needFragmentWrapper);\n}\n\nconst ssrTransformFor = createStructuralDirectiveTransform(\n  \"for\",\n  processFor\n);\nfunction ssrProcessFor(node, context, disableNestedFragments = false) {\n  const needFragmentWrapper = !disableNestedFragments && (node.children.length !== 1 || node.children[0].type !== 1);\n  const renderLoop = createFunctionExpression(\n    createForLoopParams(node.parseResult)\n  );\n  renderLoop.body = processChildrenAsStatement(\n    node,\n    context,\n    needFragmentWrapper\n  );\n  if (!disableNestedFragments) {\n    context.pushStringPart(`<!--[-->`);\n  }\n  context.pushStatement(\n    createCallExpression(context.helper(SSR_RENDER_LIST), [\n      node.source,\n      renderLoop\n    ])\n  );\n  if (!disableNestedFragments) {\n    context.pushStringPart(`<!--]-->`);\n  }\n}\n\nconst ssrTransformSlotOutlet = (node, context) => {\n  if (isSlotOutlet(node)) {\n    const { slotName, slotProps } = processSlotOutlet(node, context);\n    const args = [\n      `_ctx.$slots`,\n      slotName,\n      slotProps || `{}`,\n      // fallback content placeholder. will be replaced in the process phase\n      `null`,\n      `_push`,\n      `_parent`\n    ];\n    if (context.scopeId && context.slotted !== false) {\n      args.push(`\"${context.scopeId}-s\"`);\n    }\n    let method = SSR_RENDER_SLOT;\n    const parent = context.parent;\n    let componentType;\n    if (parent && parent.type === 1 && parent.tagType === 1 && ((componentType = resolveComponentType(parent, context, true)) === TRANSITION || componentType === TRANSITION_GROUP) && parent.children.filter((c) => c.type === 1).length === 1) {\n      method = SSR_RENDER_SLOT_INNER;\n      if (!(context.scopeId && context.slotted !== false)) {\n        args.push(\"null\");\n      }\n      args.push(\"true\");\n    }\n    node.ssrCodegenNode = createCallExpression(context.helper(method), args);\n  }\n};\nfunction ssrProcessSlotOutlet(node, context) {\n  const renderCall = node.ssrCodegenNode;\n  if (node.children.length) {\n    const fallbackRenderFn = createFunctionExpression([]);\n    fallbackRenderFn.body = processChildrenAsStatement(node, context);\n    renderCall.arguments[3] = fallbackRenderFn;\n  }\n  if (context.withSlotScopeId) {\n    const slotScopeId = renderCall.arguments[6];\n    renderCall.arguments[6] = slotScopeId ? `${slotScopeId} + _scopeId` : `_scopeId`;\n  }\n  context.pushStatement(node.ssrCodegenNode);\n}\n\nfunction createSSRCompilerError(code, loc) {\n  return createCompilerError(code, loc, SSRErrorMessages);\n}\nconst SSRErrorMessages = {\n  [65]: `Unsafe attribute name for SSR.`,\n  [66]: `Missing the 'to' prop on teleport element.`,\n  [67]: `Invalid AST node during SSR transform.`\n};\n\nfunction ssrProcessTeleport(node, context) {\n  const targetProp = findProp(node, \"to\");\n  if (!targetProp) {\n    context.onError(\n      createSSRCompilerError(66, node.loc)\n    );\n    return;\n  }\n  let target;\n  if (targetProp.type === 6) {\n    target = targetProp.value && createSimpleExpression(targetProp.value.content, true);\n  } else {\n    target = targetProp.exp;\n  }\n  if (!target) {\n    context.onError(\n      createSSRCompilerError(\n        66,\n        targetProp.loc\n      )\n    );\n    return;\n  }\n  const disabledProp = findProp(\n    node,\n    \"disabled\",\n    false,\n    true\n    /* allow empty */\n  );\n  const disabled = disabledProp ? disabledProp.type === 6 ? `true` : disabledProp.exp || `false` : `false`;\n  const contentRenderFn = createFunctionExpression(\n    [`_push`],\n    void 0,\n    // Body is added later\n    true,\n    // newline\n    false,\n    // isSlot\n    node.loc\n  );\n  contentRenderFn.body = processChildrenAsStatement(node, context);\n  context.pushStatement(\n    createCallExpression(context.helper(SSR_RENDER_TELEPORT), [\n      `_push`,\n      contentRenderFn,\n      target,\n      disabled,\n      `_parent`\n    ])\n  );\n}\n\nconst wipMap$3 = /* @__PURE__ */ new WeakMap();\nfunction ssrTransformSuspense(node, context) {\n  return () => {\n    if (node.children.length) {\n      const wipEntry = {\n        slotsExp: null,\n        // to be immediately set\n        wipSlots: []\n      };\n      wipMap$3.set(node, wipEntry);\n      wipEntry.slotsExp = buildSlots(\n        node,\n        context,\n        (_props, _vForExp, children, loc) => {\n          const fn = createFunctionExpression(\n            [],\n            void 0,\n            // no return, assign body later\n            true,\n            // newline\n            false,\n            // suspense slots are not treated as normal slots\n            loc\n          );\n          wipEntry.wipSlots.push({\n            fn,\n            children\n          });\n          return fn;\n        }\n      ).slots;\n    }\n  };\n}\nfunction ssrProcessSuspense(node, context) {\n  const wipEntry = wipMap$3.get(node);\n  if (!wipEntry) {\n    return;\n  }\n  const { slotsExp, wipSlots } = wipEntry;\n  for (let i = 0; i < wipSlots.length; i++) {\n    const slot = wipSlots[i];\n    slot.fn.body = processChildrenAsStatement(slot, context);\n  }\n  context.pushStatement(\n    createCallExpression(context.helper(SSR_RENDER_SUSPENSE), [\n      `_push`,\n      slotsExp\n    ])\n  );\n}\n\nconst rawChildrenMap = /* @__PURE__ */ new WeakMap();\nconst ssrTransformElement = (node, context) => {\n  if (node.type !== 1 || node.tagType !== 0) {\n    return;\n  }\n  return function ssrPostTransformElement() {\n    const openTag = [`<${node.tag}`];\n    const needTagForRuntime = node.tag === \"textarea\" || node.tag.indexOf(\"-\") > 0;\n    const hasDynamicVBind = hasDynamicKeyVBind(node);\n    const hasCustomDir = node.props.some(\n      (p) => p.type === 7 && !isBuiltInDirective(p.name)\n    );\n    const needMergeProps = hasDynamicVBind || hasCustomDir;\n    if (needMergeProps) {\n      const { props, directives } = buildProps(\n        node,\n        context,\n        node.props,\n        false,\n        false,\n        true\n      );\n      if (props || directives.length) {\n        const mergedProps = buildSSRProps(props, directives, context);\n        const propsExp = createCallExpression(\n          context.helper(SSR_RENDER_ATTRS),\n          [mergedProps]\n        );\n        if (node.tag === \"textarea\") {\n          const existingText = node.children[0];\n          if (!existingText || existingText.type !== 5) {\n            const tempId = `_temp${context.temps++}`;\n            propsExp.arguments = [\n              createAssignmentExpression(\n                createSimpleExpression(tempId, false),\n                mergedProps\n              )\n            ];\n            rawChildrenMap.set(\n              node,\n              createCallExpression(context.helper(SSR_INTERPOLATE), [\n                createConditionalExpression(\n                  createSimpleExpression(`\"value\" in ${tempId}`, false),\n                  createSimpleExpression(`${tempId}.value`, false),\n                  createSimpleExpression(\n                    existingText ? existingText.content : ``,\n                    true\n                  ),\n                  false\n                )\n              ])\n            );\n          }\n        } else if (node.tag === \"input\") {\n          const vModel = findVModel(node);\n          if (vModel) {\n            const tempId = `_temp${context.temps++}`;\n            const tempExp = createSimpleExpression(tempId, false);\n            propsExp.arguments = [\n              createSequenceExpression([\n                createAssignmentExpression(tempExp, mergedProps),\n                createCallExpression(context.helper(MERGE_PROPS), [\n                  tempExp,\n                  createCallExpression(\n                    context.helper(SSR_GET_DYNAMIC_MODEL_PROPS),\n                    [\n                      tempExp,\n                      // existing props\n                      vModel.exp\n                      // model\n                    ]\n                  )\n                ])\n              ])\n            ];\n          }\n        }\n        if (needTagForRuntime) {\n          propsExp.arguments.push(`\"${node.tag}\"`);\n        }\n        openTag.push(propsExp);\n      }\n    }\n    let dynamicClassBinding = void 0;\n    let staticClassBinding = void 0;\n    let dynamicStyleBinding = void 0;\n    for (let i = 0; i < node.props.length; i++) {\n      const prop = node.props[i];\n      if (node.tag === \"input\" && isTrueFalseValue(prop)) {\n        continue;\n      }\n      if (prop.type === 7) {\n        if (prop.name === \"html\" && prop.exp) {\n          rawChildrenMap.set(node, prop.exp);\n        } else if (prop.name === \"text\" && prop.exp) {\n          node.children = [createInterpolation(prop.exp, prop.loc)];\n        } else if (prop.name === \"slot\") {\n          context.onError(\n            createCompilerError(40, prop.loc)\n          );\n        } else if (isTextareaWithValue(node, prop) && prop.exp) {\n          if (!needMergeProps) {\n            node.children = [createInterpolation(prop.exp, prop.loc)];\n          }\n        } else if (!needMergeProps && prop.name !== \"on\") {\n          const directiveTransform = context.directiveTransforms[prop.name];\n          if (directiveTransform) {\n            const { props, ssrTagParts } = directiveTransform(\n              prop,\n              node,\n              context\n            );\n            if (ssrTagParts) {\n              openTag.push(...ssrTagParts);\n            }\n            for (let j = 0; j < props.length; j++) {\n              const { key, value } = props[j];\n              if (isStaticExp(key)) {\n                let attrName = key.content;\n                if (attrName === \"key\" || attrName === \"ref\") {\n                  continue;\n                }\n                if (attrName === \"class\") {\n                  openTag.push(\n                    ` class=\"`,\n                    dynamicClassBinding = createCallExpression(\n                      context.helper(SSR_RENDER_CLASS),\n                      [value]\n                    ),\n                    `\"`\n                  );\n                } else if (attrName === \"style\") {\n                  if (dynamicStyleBinding) {\n                    mergeCall(dynamicStyleBinding, value);\n                  } else {\n                    openTag.push(\n                      ` style=\"`,\n                      dynamicStyleBinding = createCallExpression(\n                        context.helper(SSR_RENDER_STYLE),\n                        [value]\n                      ),\n                      `\"`\n                    );\n                  }\n                } else {\n                  attrName = node.tag.indexOf(\"-\") > 0 ? attrName : propsToAttrMap[attrName] || attrName.toLowerCase();\n                  if (isBooleanAttr(attrName)) {\n                    openTag.push(\n                      createConditionalExpression(\n                        createCallExpression(\n                          context.helper(SSR_INCLUDE_BOOLEAN_ATTR),\n                          [value]\n                        ),\n                        createSimpleExpression(\" \" + attrName, true),\n                        createSimpleExpression(\"\", true),\n                        false\n                      )\n                    );\n                  } else if (isSSRSafeAttrName(attrName)) {\n                    openTag.push(\n                      createCallExpression(context.helper(SSR_RENDER_ATTR), [\n                        key,\n                        value\n                      ])\n                    );\n                  } else {\n                    context.onError(\n                      createSSRCompilerError(\n                        65,\n                        key.loc\n                      )\n                    );\n                  }\n                }\n              } else {\n                const args = [key, value];\n                if (needTagForRuntime) {\n                  args.push(`\"${node.tag}\"`);\n                }\n                openTag.push(\n                  createCallExpression(\n                    context.helper(SSR_RENDER_DYNAMIC_ATTR),\n                    args\n                  )\n                );\n              }\n            }\n          }\n        }\n      } else {\n        const name = prop.name;\n        if (node.tag === \"textarea\" && name === \"value\" && prop.value) {\n          rawChildrenMap.set(node, escapeHtml(prop.value.content));\n        } else if (!needMergeProps) {\n          if (name === \"key\" || name === \"ref\") {\n            continue;\n          }\n          if (name === \"class\" && prop.value) {\n            staticClassBinding = JSON.stringify(prop.value.content);\n          }\n          openTag.push(\n            ` ${prop.name}` + (prop.value ? `=\"${escapeHtml(prop.value.content)}\"` : ``)\n          );\n        }\n      }\n    }\n    if (dynamicClassBinding && staticClassBinding) {\n      mergeCall(dynamicClassBinding, staticClassBinding);\n      removeStaticBinding(openTag, \"class\");\n    }\n    if (context.scopeId) {\n      openTag.push(` ${context.scopeId}`);\n    }\n    node.ssrCodegenNode = createTemplateLiteral(openTag);\n  };\n};\nfunction buildSSRProps(props, directives, context) {\n  let mergePropsArgs = [];\n  if (props) {\n    if (props.type === 14) {\n      mergePropsArgs = props.arguments;\n    } else {\n      mergePropsArgs.push(props);\n    }\n  }\n  if (directives.length) {\n    for (const dir of directives) {\n      mergePropsArgs.push(\n        createCallExpression(context.helper(SSR_GET_DIRECTIVE_PROPS), [\n          `_ctx`,\n          ...buildDirectiveArgs(dir, context).elements\n        ])\n      );\n    }\n  }\n  return mergePropsArgs.length > 1 ? createCallExpression(context.helper(MERGE_PROPS), mergePropsArgs) : mergePropsArgs[0];\n}\nfunction isTrueFalseValue(prop) {\n  if (prop.type === 7) {\n    return prop.name === \"bind\" && prop.arg && isStaticExp(prop.arg) && (prop.arg.content === \"true-value\" || prop.arg.content === \"false-value\");\n  } else {\n    return prop.name === \"true-value\" || prop.name === \"false-value\";\n  }\n}\nfunction isTextareaWithValue(node, prop) {\n  return !!(node.tag === \"textarea\" && prop.name === \"bind\" && isStaticArgOf(prop.arg, \"value\"));\n}\nfunction mergeCall(call, arg) {\n  const existing = call.arguments[0];\n  if (existing.type === 17) {\n    existing.elements.push(arg);\n  } else {\n    call.arguments[0] = createArrayExpression([existing, arg]);\n  }\n}\nfunction removeStaticBinding(tag, binding) {\n  const regExp = new RegExp(`^ ${binding}=\".+\"$`);\n  const i = tag.findIndex((e) => typeof e === \"string\" && regExp.test(e));\n  if (i > -1) {\n    tag.splice(i, 1);\n  }\n}\nfunction findVModel(node) {\n  return node.props.find(\n    (p) => p.type === 7 && p.name === \"model\" && p.exp\n  );\n}\nfunction ssrProcessElement(node, context) {\n  const isVoidTag = context.options.isVoidTag || NO;\n  const elementsToAdd = node.ssrCodegenNode.elements;\n  for (let j = 0; j < elementsToAdd.length; j++) {\n    context.pushStringPart(elementsToAdd[j]);\n  }\n  if (context.withSlotScopeId) {\n    context.pushStringPart(createSimpleExpression(`_scopeId`, false));\n  }\n  context.pushStringPart(`>`);\n  const rawChildren = rawChildrenMap.get(node);\n  if (rawChildren) {\n    context.pushStringPart(rawChildren);\n  } else if (node.children.length) {\n    processChildren(node, context);\n  }\n  if (!isVoidTag(node.tag)) {\n    context.pushStringPart(`</${node.tag}>`);\n  }\n}\n\nconst wipMap$2 = /* @__PURE__ */ new WeakMap();\nfunction ssrTransformTransitionGroup(node, context) {\n  return () => {\n    const tag = findProp(node, \"tag\");\n    if (tag) {\n      const otherProps = node.props.filter((p) => p !== tag);\n      const { props, directives } = buildProps(\n        node,\n        context,\n        otherProps,\n        true,\n        false,\n        true\n      );\n      let propsExp = null;\n      if (props || directives.length) {\n        propsExp = createCallExpression(context.helper(SSR_RENDER_ATTRS), [\n          buildSSRProps(props, directives, context)\n        ]);\n      }\n      wipMap$2.set(node, {\n        tag,\n        propsExp,\n        scopeId: context.scopeId || null\n      });\n    }\n  };\n}\nfunction ssrProcessTransitionGroup(node, context) {\n  const entry = wipMap$2.get(node);\n  if (entry) {\n    const { tag, propsExp, scopeId } = entry;\n    if (tag.type === 7) {\n      context.pushStringPart(`<`);\n      context.pushStringPart(tag.exp);\n      if (propsExp) {\n        context.pushStringPart(propsExp);\n      }\n      if (scopeId) {\n        context.pushStringPart(` ${scopeId}`);\n      }\n      context.pushStringPart(`>`);\n      processChildren(\n        node,\n        context,\n        false,\n        /**\n         * TransitionGroup has the special runtime behavior of flattening and\n         * concatenating all children into a single fragment (in order for them to\n         * be patched using the same key map) so we need to account for that here\n         * by disabling nested fragment wrappers from being generated.\n         */\n        true,\n        /**\n         * TransitionGroup filters out comment children at runtime and thus\n         * doesn't expect comments to be present during hydration. We need to\n         * account for that by disabling the empty comment that is otherwise\n         * rendered for a falsy v-if that has no v-else specified. (#6715)\n         */\n        true\n      );\n      context.pushStringPart(`</`);\n      context.pushStringPart(tag.exp);\n      context.pushStringPart(`>`);\n    } else {\n      context.pushStringPart(`<${tag.value.content}`);\n      if (propsExp) {\n        context.pushStringPart(propsExp);\n      }\n      if (scopeId) {\n        context.pushStringPart(` ${scopeId}`);\n      }\n      context.pushStringPart(`>`);\n      processChildren(node, context, false, true);\n      context.pushStringPart(`</${tag.value.content}>`);\n    }\n  } else {\n    processChildren(node, context, true, true, true);\n  }\n}\n\nconst wipMap$1 = /* @__PURE__ */ new WeakMap();\nfunction ssrTransformTransition(node, context) {\n  return () => {\n    const appear = findProp(node, \"appear\", false, true);\n    wipMap$1.set(node, !!appear);\n  };\n}\nfunction ssrProcessTransition(node, context) {\n  node.children = node.children.filter((c) => c.type !== 3);\n  const appear = wipMap$1.get(node);\n  if (appear) {\n    context.pushStringPart(`<template>`);\n    processChildren(node, context, false, true);\n    context.pushStringPart(`</template>`);\n  } else {\n    processChildren(node, context, false, true);\n  }\n}\n\nvar __defProp$8 = Object.defineProperty;\nvar __defProps$7 = Object.defineProperties;\nvar __getOwnPropDescs$7 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$8 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$8 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$8 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$8 = (obj, key, value) => key in obj ? __defProp$8(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$8 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$8.call(b, prop))\n      __defNormalProp$8(a, prop, b[prop]);\n  if (__getOwnPropSymbols$8)\n    for (var prop of __getOwnPropSymbols$8(b)) {\n      if (__propIsEnum$8.call(b, prop))\n        __defNormalProp$8(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$7 = (a, b) => __defProps$7(a, __getOwnPropDescs$7(b));\nconst wipMap = /* @__PURE__ */ new WeakMap();\nconst WIP_SLOT = Symbol();\nconst componentTypeMap = /* @__PURE__ */ new WeakMap();\nconst ssrTransformComponent = (node, context) => {\n  if (node.type !== 1 || node.tagType !== 1) {\n    return;\n  }\n  const component = resolveComponentType(\n    node,\n    context,\n    true\n    /* ssr */\n  );\n  const isDynamicComponent = isObject$2(component) && component.callee === RESOLVE_DYNAMIC_COMPONENT;\n  componentTypeMap.set(node, component);\n  if (isSymbol$1(component)) {\n    if (component === SUSPENSE) {\n      return ssrTransformSuspense(node, context);\n    } else if (component === TRANSITION_GROUP) {\n      return ssrTransformTransitionGroup(node, context);\n    } else if (component === TRANSITION) {\n      return ssrTransformTransition(node);\n    }\n    return;\n  }\n  const vnodeBranches = [];\n  const clonedNode = clone(node);\n  return function ssrPostTransformComponent() {\n    if (clonedNode.children.length) {\n      buildSlots(clonedNode, context, (props, vFor, children) => {\n        vnodeBranches.push(\n          createVNodeSlotBranch(props, vFor, children, context)\n        );\n        return createFunctionExpression(void 0);\n      });\n    }\n    let propsExp = `null`;\n    if (node.props.length) {\n      const { props, directives } = buildProps(\n        node,\n        context,\n        void 0,\n        true,\n        isDynamicComponent\n      );\n      if (props || directives.length) {\n        propsExp = buildSSRProps(props, directives, context);\n      }\n    }\n    const wipEntries = [];\n    wipMap.set(node, wipEntries);\n    const buildSSRSlotFn = (props, _vForExp, children, loc) => {\n      const param0 = props && stringifyExpression(props) || `_`;\n      const fn = createFunctionExpression(\n        [param0, `_push`, `_parent`, `_scopeId`],\n        void 0,\n        // no return, assign body later\n        true,\n        // newline\n        true,\n        // isSlot\n        loc\n      );\n      wipEntries.push({\n        type: WIP_SLOT,\n        fn,\n        children,\n        // also collect the corresponding vnode branch built earlier\n        vnodeBranch: vnodeBranches[wipEntries.length]\n      });\n      return fn;\n    };\n    const slots = node.children.length ? buildSlots(node, context, buildSSRSlotFn).slots : `null`;\n    if (typeof component !== \"string\") {\n      node.ssrCodegenNode = createCallExpression(\n        context.helper(SSR_RENDER_VNODE),\n        [\n          `_push`,\n          createCallExpression(context.helper(CREATE_VNODE), [\n            component,\n            propsExp,\n            slots\n          ]),\n          `_parent`\n        ]\n      );\n    } else {\n      node.ssrCodegenNode = createCallExpression(\n        context.helper(SSR_RENDER_COMPONENT),\n        [component, propsExp, slots, `_parent`]\n      );\n    }\n  };\n};\nfunction ssrProcessComponent(node, context, parent) {\n  const component = componentTypeMap.get(node);\n  if (!node.ssrCodegenNode) {\n    if (component === TELEPORT) {\n      return ssrProcessTeleport(node, context);\n    } else if (component === SUSPENSE) {\n      return ssrProcessSuspense(node, context);\n    } else if (component === TRANSITION_GROUP) {\n      return ssrProcessTransitionGroup(node, context);\n    } else {\n      if (parent.type === WIP_SLOT) {\n        context.pushStringPart(``);\n      }\n      if (component === TRANSITION) {\n        return ssrProcessTransition(node, context);\n      }\n      processChildren(node, context);\n    }\n  } else {\n    const wipEntries = wipMap.get(node) || [];\n    for (let i = 0; i < wipEntries.length; i++) {\n      const { fn, vnodeBranch } = wipEntries[i];\n      fn.body = createIfStatement(\n        createSimpleExpression(`_push`, false),\n        processChildrenAsStatement(\n          wipEntries[i],\n          context,\n          false,\n          true\n        ),\n        vnodeBranch\n      );\n    }\n    if (context.withSlotScopeId) {\n      node.ssrCodegenNode.arguments.push(`_scopeId`);\n    }\n    if (typeof component === \"string\") {\n      context.pushStatement(\n        createCallExpression(`_push`, [node.ssrCodegenNode])\n      );\n    } else {\n      context.pushStatement(node.ssrCodegenNode);\n    }\n  }\n}\nconst rawOptionsMap = /* @__PURE__ */ new WeakMap();\nconst [baseNodeTransforms, baseDirectiveTransforms] = getBaseTransformPreset(true);\nconst vnodeNodeTransforms = [...baseNodeTransforms, ...DOMNodeTransforms];\nconst vnodeDirectiveTransforms = __spreadValues$8(__spreadValues$8({}, baseDirectiveTransforms), DOMDirectiveTransforms);\nfunction createVNodeSlotBranch(slotProps, vFor, children, parentContext) {\n  const rawOptions = rawOptionsMap.get(parentContext.root);\n  const subOptions = __spreadProps$7(__spreadValues$8({}, rawOptions), {\n    // overwrite with vnode-based transforms\n    nodeTransforms: [\n      ...vnodeNodeTransforms,\n      ...rawOptions.nodeTransforms || []\n    ],\n    directiveTransforms: __spreadValues$8(__spreadValues$8({}, vnodeDirectiveTransforms), rawOptions.directiveTransforms || {})\n  });\n  const wrapperProps = [];\n  if (slotProps) {\n    wrapperProps.push({\n      type: 7,\n      name: \"slot\",\n      exp: slotProps,\n      arg: void 0,\n      modifiers: [],\n      loc: locStub\n    });\n  }\n  if (vFor) {\n    wrapperProps.push(extend({}, vFor));\n  }\n  const wrapperNode = {\n    type: 1,\n    ns: 0,\n    tag: \"template\",\n    tagType: 3,\n    props: wrapperProps,\n    children,\n    loc: locStub,\n    codegenNode: void 0\n  };\n  subTransform(wrapperNode, subOptions, parentContext);\n  return createReturnStatement(children);\n}\nfunction subTransform(node, options, parentContext) {\n  const childRoot = createRoot([node]);\n  const childContext = createTransformContext(childRoot, options);\n  childContext.ssr = false;\n  childContext.scopes = __spreadValues$8({}, parentContext.scopes);\n  childContext.identifiers = __spreadValues$8({}, parentContext.identifiers);\n  childContext.imports = parentContext.imports;\n  traverseNode(childRoot, childContext);\n  [\"helpers\", \"components\", \"directives\"].forEach((key) => {\n    childContext[key].forEach((value, helperKey) => {\n      if (key === \"helpers\") {\n        const parentCount = parentContext.helpers.get(helperKey);\n        if (parentCount === void 0) {\n          parentContext.helpers.set(helperKey, value);\n        } else {\n          parentContext.helpers.set(helperKey, value + parentCount);\n        }\n      } else {\n        parentContext[key].add(value);\n      }\n    });\n  });\n}\nfunction clone(v) {\n  if (isArray$3(v)) {\n    return v.map(clone);\n  } else if (isPlainObject(v)) {\n    const res = {};\n    for (const key in v) {\n      res[key] = clone(v[key]);\n    }\n    return res;\n  } else {\n    return v;\n  }\n}\n\nfunction ssrCodegenTransform(ast, options) {\n  const context = createSSRTransformContext(ast, options);\n  if (options.ssrCssVars) {\n    const cssContext = createTransformContext(createRoot([]), options);\n    const varsExp = processExpression(\n      createSimpleExpression(options.ssrCssVars, false),\n      cssContext\n    );\n    context.body.push(\n      createCompoundExpression([`const _cssVars = { style: `, varsExp, `}`])\n    );\n    Array.from(cssContext.helpers.keys()).forEach((helper) => {\n      ast.helpers.add(helper);\n    });\n  }\n  const isFragment = ast.children.length > 1 && ast.children.some((c) => !isText$1(c));\n  processChildren(ast, context, isFragment);\n  ast.codegenNode = createBlockStatement(context.body);\n  ast.ssrHelpers = Array.from(\n    /* @__PURE__ */ new Set([\n      ...Array.from(ast.helpers).filter((h) => h in ssrHelpers),\n      ...context.helpers\n    ])\n  );\n  ast.helpers = new Set(Array.from(ast.helpers).filter((h) => !(h in ssrHelpers)));\n}\nfunction createSSRTransformContext(root, options, helpers = /* @__PURE__ */ new Set(), withSlotScopeId = false) {\n  const body = [];\n  let currentString = null;\n  return {\n    root,\n    options,\n    body,\n    helpers,\n    withSlotScopeId,\n    onError: options.onError || ((e) => {\n      throw e;\n    }),\n    helper(name) {\n      helpers.add(name);\n      return name;\n    },\n    pushStringPart(part) {\n      if (!currentString) {\n        const currentCall = createCallExpression(`_push`);\n        body.push(currentCall);\n        currentString = createTemplateLiteral([]);\n        currentCall.arguments.push(currentString);\n      }\n      const bufferedElements = currentString.elements;\n      const lastItem = bufferedElements[bufferedElements.length - 1];\n      if (isString$2(part) && isString$2(lastItem)) {\n        bufferedElements[bufferedElements.length - 1] += part;\n      } else {\n        bufferedElements.push(part);\n      }\n    },\n    pushStatement(statement) {\n      currentString = null;\n      body.push(statement);\n    }\n  };\n}\nfunction createChildContext(parent, withSlotScopeId = parent.withSlotScopeId) {\n  return createSSRTransformContext(\n    parent.root,\n    parent.options,\n    parent.helpers,\n    withSlotScopeId\n  );\n}\nfunction processChildren(parent, context, asFragment = false, disableNestedFragments = false, disableCommentAsIfAlternate = false) {\n  if (asFragment) {\n    context.pushStringPart(`<!--[-->`);\n  }\n  const { children } = parent;\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    switch (child.type) {\n      case 1:\n        switch (child.tagType) {\n          case 0:\n            ssrProcessElement(child, context);\n            break;\n          case 1:\n            ssrProcessComponent(child, context, parent);\n            break;\n          case 2:\n            ssrProcessSlotOutlet(child, context);\n            break;\n          case 3:\n            break;\n          default:\n            context.onError(\n              createSSRCompilerError(\n                67,\n                child.loc\n              )\n            );\n            const exhaustiveCheck2 = child;\n            return exhaustiveCheck2;\n        }\n        break;\n      case 2:\n        context.pushStringPart(escapeHtml(child.content));\n        break;\n      case 3:\n        context.pushStringPart(`<!--${child.content}-->`);\n        break;\n      case 5:\n        context.pushStringPart(\n          createCallExpression(context.helper(SSR_INTERPOLATE), [\n            child.content\n          ])\n        );\n        break;\n      case 9:\n        ssrProcessIf(\n          child,\n          context,\n          disableNestedFragments,\n          disableCommentAsIfAlternate\n        );\n        break;\n      case 11:\n        ssrProcessFor(child, context, disableNestedFragments);\n        break;\n      case 10:\n        break;\n      case 12:\n      case 8:\n        break;\n      default:\n        context.onError(\n          createSSRCompilerError(\n            67,\n            child.loc\n          )\n        );\n        const exhaustiveCheck = child;\n        return exhaustiveCheck;\n    }\n  }\n  if (asFragment) {\n    context.pushStringPart(`<!--]-->`);\n  }\n}\nfunction processChildrenAsStatement(parent, parentContext, asFragment = false, withSlotScopeId = parentContext.withSlotScopeId) {\n  const childContext = createChildContext(parentContext, withSlotScopeId);\n  processChildren(parent, childContext, asFragment);\n  return createBlockStatement(childContext.body);\n}\n\nconst ssrTransformModel = (dir, node, context) => {\n  const model = dir.exp;\n  function checkDuplicatedValue() {\n    const value = findProp(node, \"value\");\n    if (value) {\n      context.onError(\n        createDOMCompilerError(\n          60,\n          value.loc\n        )\n      );\n    }\n  }\n  function processOption(plainNode) {\n    if (plainNode.tag === \"option\") {\n      if (plainNode.props.findIndex((p) => p.name === \"selected\") === -1) {\n        const value = findValueBinding(plainNode);\n        plainNode.ssrCodegenNode.elements.push(\n          createConditionalExpression(\n            createCallExpression(context.helper(SSR_INCLUDE_BOOLEAN_ATTR), [\n              createConditionalExpression(\n                createCallExpression(`Array.isArray`, [model]),\n                createCallExpression(context.helper(SSR_LOOSE_CONTAIN), [\n                  model,\n                  value\n                ]),\n                createCallExpression(context.helper(SSR_LOOSE_EQUAL), [\n                  model,\n                  value\n                ])\n              )\n            ]),\n            createSimpleExpression(\" selected\", true),\n            createSimpleExpression(\"\", true),\n            false\n          )\n        );\n      }\n    } else if (plainNode.tag === \"optgroup\") {\n      plainNode.children.forEach(\n        (option) => processOption(option)\n      );\n    }\n  }\n  if (node.tagType === 0) {\n    const res = { props: [] };\n    const defaultProps = [\n      // default value binding for text type inputs\n      createObjectProperty(`value`, model)\n    ];\n    if (node.tag === \"input\") {\n      const type = findProp(node, \"type\");\n      if (type) {\n        const value = findValueBinding(node);\n        if (type.type === 7) {\n          res.ssrTagParts = [\n            createCallExpression(context.helper(SSR_RENDER_DYNAMIC_MODEL), [\n              type.exp,\n              model,\n              value\n            ])\n          ];\n        } else if (type.value) {\n          switch (type.value.content) {\n            case \"radio\":\n              res.props = [\n                createObjectProperty(\n                  `checked`,\n                  createCallExpression(context.helper(SSR_LOOSE_EQUAL), [\n                    model,\n                    value\n                  ])\n                )\n              ];\n              break;\n            case \"checkbox\":\n              const trueValueBinding = findProp(node, \"true-value\");\n              if (trueValueBinding) {\n                const trueValue = trueValueBinding.type === 6 ? JSON.stringify(trueValueBinding.value.content) : trueValueBinding.exp;\n                res.props = [\n                  createObjectProperty(\n                    `checked`,\n                    createCallExpression(context.helper(SSR_LOOSE_EQUAL), [\n                      model,\n                      trueValue\n                    ])\n                  )\n                ];\n              } else {\n                res.props = [\n                  createObjectProperty(\n                    `checked`,\n                    createConditionalExpression(\n                      createCallExpression(`Array.isArray`, [model]),\n                      createCallExpression(context.helper(SSR_LOOSE_CONTAIN), [\n                        model,\n                        value\n                      ]),\n                      model\n                    )\n                  )\n                ];\n              }\n              break;\n            case \"file\":\n              context.onError(\n                createDOMCompilerError(\n                  59,\n                  dir.loc\n                )\n              );\n              break;\n            default:\n              checkDuplicatedValue();\n              res.props = defaultProps;\n              break;\n          }\n        }\n      } else if (hasDynamicKeyVBind(node)) ; else {\n        checkDuplicatedValue();\n        res.props = defaultProps;\n      }\n    } else if (node.tag === \"textarea\") {\n      checkDuplicatedValue();\n      node.children = [createInterpolation(model, model.loc)];\n    } else if (node.tag === \"select\") {\n      node.children.forEach((child) => {\n        if (child.type === 1) {\n          processOption(child);\n        }\n      });\n    } else {\n      context.onError(\n        createDOMCompilerError(\n          57,\n          dir.loc\n        )\n      );\n    }\n    return res;\n  } else {\n    return transformModel$1(dir, node, context);\n  }\n};\nfunction findValueBinding(node) {\n  const valueBinding = findProp(node, \"value\");\n  return valueBinding ? valueBinding.type === 7 ? valueBinding.exp : createSimpleExpression(valueBinding.value.content, true) : createSimpleExpression(`null`, false);\n}\n\nconst ssrTransformShow = (dir, node, context) => {\n  if (!dir.exp) {\n    context.onError(\n      createDOMCompilerError(61)\n    );\n  }\n  return {\n    props: [\n      createObjectProperty(\n        `style`,\n        createConditionalExpression(\n          dir.exp,\n          createSimpleExpression(`null`, false),\n          createObjectExpression([\n            createObjectProperty(\n              `display`,\n              createSimpleExpression(`none`, true)\n            )\n          ]),\n          false\n        )\n      )\n    ]\n  };\n};\n\nconst filterChild = (node) => node.children.filter((n) => n.type !== 3);\nconst hasSingleChild = (node) => filterChild(node).length === 1;\nconst ssrInjectFallthroughAttrs = (node, context) => {\n  if (node.type === 0) {\n    context.identifiers._attrs = 1;\n  }\n  if (node.type === 1 && node.tagType === 1 && (node.tag === \"transition\" || node.tag === \"Transition\" || node.tag === \"KeepAlive\" || node.tag === \"keep-alive\")) {\n    const rootChildren = filterChild(context.root);\n    if (rootChildren.length === 1 && rootChildren[0] === node) {\n      if (hasSingleChild(node)) {\n        injectFallthroughAttrs(node.children[0]);\n      }\n      return;\n    }\n  }\n  const parent = context.parent;\n  if (!parent || parent.type !== 0) {\n    return;\n  }\n  if (node.type === 10 && hasSingleChild(node)) {\n    let hasEncounteredIf = false;\n    for (const c of filterChild(parent)) {\n      if (c.type === 9 || c.type === 1 && findDir(c, \"if\")) {\n        if (hasEncounteredIf)\n          return;\n        hasEncounteredIf = true;\n      } else if (\n        // node before v-if\n        !hasEncounteredIf || // non else nodes\n        !(c.type === 1 && findDir(c, /else/, true))\n      ) {\n        return;\n      }\n    }\n    injectFallthroughAttrs(node.children[0]);\n  } else if (hasSingleChild(parent)) {\n    injectFallthroughAttrs(node);\n  }\n};\nfunction injectFallthroughAttrs(node) {\n  if (node.type === 1 && (node.tagType === 0 || node.tagType === 1) && !findDir(node, \"for\")) {\n    node.props.push({\n      type: 7,\n      name: \"bind\",\n      arg: void 0,\n      exp: createSimpleExpression(`_attrs`, false),\n      modifiers: [],\n      loc: locStub\n    });\n  }\n}\n\nconst ssrInjectCssVars = (node, context) => {\n  if (!context.ssrCssVars) {\n    return;\n  }\n  if (node.type === 0) {\n    context.identifiers._cssVars = 1;\n  }\n  const parent = context.parent;\n  if (!parent || parent.type !== 0) {\n    return;\n  }\n  if (node.type === 10) {\n    for (const child of node.children) {\n      injectCssVars(child);\n    }\n  } else {\n    injectCssVars(node);\n  }\n};\nfunction injectCssVars(node) {\n  if (node.type === 1 && (node.tagType === 0 || node.tagType === 1) && !findDir(node, \"for\")) {\n    if (node.tag === \"suspense\" || node.tag === \"Suspense\") {\n      for (const child of node.children) {\n        if (child.type === 1 && child.tagType === 3) {\n          child.children.forEach(injectCssVars);\n        } else {\n          injectCssVars(child);\n        }\n      }\n    } else {\n      node.props.push({\n        type: 7,\n        name: \"bind\",\n        arg: void 0,\n        exp: createSimpleExpression(`_cssVars`, false),\n        modifiers: [],\n        loc: locStub\n      });\n    }\n  }\n}\n\nvar __defProp$7 = Object.defineProperty;\nvar __defProps$6 = Object.defineProperties;\nvar __getOwnPropDescs$6 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$7 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$7 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$7 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$7 = (obj, key, value) => key in obj ? __defProp$7(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$7 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$7.call(b, prop))\n      __defNormalProp$7(a, prop, b[prop]);\n  if (__getOwnPropSymbols$7)\n    for (var prop of __getOwnPropSymbols$7(b)) {\n      if (__propIsEnum$7.call(b, prop))\n        __defNormalProp$7(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$6 = (a, b) => __defProps$6(a, __getOwnPropDescs$6(b));\nfunction compile(source, options = {}) {\n  options = __spreadProps$6(__spreadValues$7(__spreadValues$7({}, options), parserOptions), {\n    ssr: true,\n    inSSR: true,\n    scopeId: options.mode === \"function\" ? null : options.scopeId,\n    // always prefix since compiler-ssr doesn't have size concern\n    prefixIdentifiers: true,\n    // disable optimizations that are unnecessary for ssr\n    cacheHandlers: false,\n    hoistStatic: false\n  });\n  const ast = typeof source === \"string\" ? baseParse(source, options) : source;\n  rawOptionsMap.set(ast, options);\n  transform(ast, __spreadProps$6(__spreadValues$7({}, options), {\n    hoistStatic: false,\n    nodeTransforms: [\n      ssrTransformIf,\n      ssrTransformFor,\n      trackVForSlotScopes,\n      transformExpression,\n      ssrTransformSlotOutlet,\n      ssrInjectFallthroughAttrs,\n      ssrInjectCssVars,\n      ssrTransformElement,\n      ssrTransformComponent,\n      trackSlotScopes,\n      transformStyle,\n      ...options.nodeTransforms || []\n      // user transforms\n    ],\n    directiveTransforms: __spreadValues$7({\n      // reusing core v-bind\n      bind: transformBind,\n      on: transformOn$1,\n      // model and show have dedicated SSR handling\n      model: ssrTransformModel,\n      show: ssrTransformShow,\n      // the following are ignored during SSR\n      // on: noopDirectiveTransform,\n      cloak: noopDirectiveTransform,\n      once: noopDirectiveTransform,\n      memo: noopDirectiveTransform\n    }, options.directiveTransforms || {})\n  }));\n  ssrCodegenTransform(ast, options);\n  return generate(ast, options);\n}\n\nvar CompilerSSR = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  compile: compile\n});\n\nvar _polyfillNode_fs = {};\n\nvar _polyfillNode_fs$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  default: _polyfillNode_fs\n});\n\nvar require$$0$2 = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_fs$1);\n\nvar require$$1 = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_path);\n\nvar require$$0$1 = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_util$1);\n\nconst hasWarned = {};\nfunction warnOnce$3(msg) {\n  const isNodeProd = typeof process !== \"undefined\" && process.env.NODE_ENV === \"production\";\n  if (!isNodeProd && true && !hasWarned[msg]) {\n    hasWarned[msg] = true;\n    warn(msg);\n  }\n}\nfunction warn(msg) {\n  console.warn(\n    `\\x1B[1m\\x1B[33m[@vue/compiler-sfc]\\x1B[0m\\x1B[33m ${msg}\\x1B[0m\n`\n  );\n}\n\nvar __defProp$6 = Object.defineProperty;\nvar __defProps$5 = Object.defineProperties;\nvar __getOwnPropDescs$5 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$6 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$6 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$6 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$6 = (obj, key, value) => key in obj ? __defProp$6(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$6 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$6.call(b, prop))\n      __defNormalProp$6(a, prop, b[prop]);\n  if (__getOwnPropSymbols$6)\n    for (var prop of __getOwnPropSymbols$6(b)) {\n      if (__propIsEnum$6.call(b, prop))\n        __defNormalProp$6(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$5 = (a, b) => __defProps$5(a, __getOwnPropDescs$5(b));\nfunction preprocess$1({ source, filename, preprocessOptions }, preprocessor) {\n  let res = \"\";\n  let err = null;\n  preprocessor.render(\n    source,\n    __spreadValues$6({ filename }, preprocessOptions),\n    (_err, _res) => {\n      if (_err)\n        err = _err;\n      res = _res;\n    }\n  );\n  if (err)\n    throw err;\n  return res;\n}\nfunction compileTemplate(options) {\n  const { preprocessLang, preprocessCustomRequire } = options;\n  if (preprocessLang && !preprocessCustomRequire) {\n    throw new Error(\n      `[@vue/compiler-sfc] Template preprocessing in the browser build must provide the \\`preprocessCustomRequire\\` option to return the in-browser version of the preprocessor in the shape of { render(): string }.`\n    );\n  }\n  const preprocessor = preprocessLang ? preprocessCustomRequire ? preprocessCustomRequire(preprocessLang) : void 0  : false;\n  if (preprocessor) {\n    try {\n      return doCompileTemplate(__spreadProps$5(__spreadValues$6({}, options), {\n        source: preprocess$1(options, preprocessor),\n        ast: void 0\n        // invalidate AST if template goes through preprocessor\n      }));\n    } catch (e) {\n      return {\n        code: `export default function render() {}`,\n        source: options.source,\n        tips: [],\n        errors: [e]\n      };\n    }\n  } else if (preprocessLang) {\n    return {\n      code: `export default function render() {}`,\n      source: options.source,\n      tips: [\n        `Component ${options.filename} uses lang ${preprocessLang} for template. Please install the language preprocessor.`\n      ],\n      errors: [\n        `Component ${options.filename} uses lang ${preprocessLang} for template, however it is not installed.`\n      ]\n    };\n  } else {\n    return doCompileTemplate(options);\n  }\n}\nfunction doCompileTemplate({\n  filename,\n  id,\n  scoped,\n  slotted,\n  inMap,\n  source,\n  ast: inAST,\n  ssr = false,\n  ssrCssVars,\n  isProd = false,\n  compiler,\n  compilerOptions = {},\n  transformAssetUrls\n}) {\n  const errors = [];\n  const warnings = [];\n  let nodeTransforms = [];\n  if (isObject$2(transformAssetUrls)) {\n    const assetOptions = normalizeOptions(transformAssetUrls);\n    nodeTransforms = [\n      createAssetUrlTransformWithOptions(assetOptions),\n      createSrcsetTransformWithOptions(assetOptions)\n    ];\n  } else if (transformAssetUrls !== false) {\n    nodeTransforms = [transformAssetUrl, transformSrcset];\n  }\n  if (ssr && !ssrCssVars) {\n    warnOnce$3(\n      `compileTemplate is called with \\`ssr: true\\` but no corresponding \\`cssVars\\` option.\\`.`\n    );\n  }\n  if (!id) {\n    warnOnce$3(`compileTemplate now requires the \\`id\\` option.\\`.`);\n    id = \"\";\n  }\n  const shortId = id.replace(/^data-v-/, \"\");\n  const longId = `data-v-${shortId}`;\n  const defaultCompiler = ssr ? CompilerSSR : CompilerDOM;\n  compiler = compiler || defaultCompiler;\n  if (compiler !== defaultCompiler) {\n    inAST = void 0;\n  }\n  if (inAST == null ? void 0 : inAST.transformed) {\n    const newAST = (ssr ? CompilerDOM : compiler).parse(inAST.source, __spreadProps$5(__spreadValues$6({\n      prefixIdentifiers: true\n    }, compilerOptions), {\n      parseMode: \"sfc\",\n      onError: (e) => errors.push(e)\n    }));\n    const template = newAST.children.find(\n      (node) => node.type === 1 && node.tag === \"template\"\n    );\n    inAST = createRoot(template.children, inAST.source);\n  }\n  let { code, ast, preamble, map } = compiler.compile(inAST || source, __spreadProps$5(__spreadValues$6({\n    mode: \"module\",\n    prefixIdentifiers: true,\n    hoistStatic: true,\n    cacheHandlers: true,\n    ssrCssVars: ssr && ssrCssVars && ssrCssVars.length ? genCssVarsFromList(ssrCssVars, shortId, isProd, true) : \"\",\n    scopeId: scoped ? longId : void 0,\n    slotted,\n    sourceMap: true\n  }, compilerOptions), {\n    hmr: !isProd,\n    nodeTransforms: nodeTransforms.concat(compilerOptions.nodeTransforms || []),\n    filename,\n    onError: (e) => errors.push(e),\n    onWarn: (w) => warnings.push(w)\n  }));\n  if (inMap && !inAST) {\n    if (map) {\n      map = mapLines(inMap, map);\n    }\n    if (errors.length) {\n      patchErrors(errors, source, inMap);\n    }\n  }\n  const tips = warnings.map((w) => {\n    let msg = w.message;\n    if (w.loc) {\n      msg += `\n${generateCodeFrame(\n        (inAST == null ? void 0 : inAST.source) || source,\n        w.loc.start.offset,\n        w.loc.end.offset\n      )}`;\n    }\n    return msg;\n  });\n  return { code, ast, preamble, source, errors, tips, map };\n}\nfunction mapLines(oldMap, newMap) {\n  if (!oldMap)\n    return newMap;\n  if (!newMap)\n    return oldMap;\n  const oldMapConsumer = new SourceMapConsumer$5(oldMap);\n  const newMapConsumer = new SourceMapConsumer$5(newMap);\n  const mergedMapGenerator = new SourceMapGenerator$6();\n  newMapConsumer.eachMapping((m) => {\n    if (m.originalLine == null) {\n      return;\n    }\n    const origPosInOldMap = oldMapConsumer.originalPositionFor({\n      line: m.originalLine,\n      column: m.originalColumn\n    });\n    if (origPosInOldMap.source == null) {\n      return;\n    }\n    mergedMapGenerator.addMapping({\n      generated: {\n        line: m.generatedLine,\n        column: m.generatedColumn\n      },\n      original: {\n        line: origPosInOldMap.line,\n        // map line\n        // use current column, since the oldMap produced by @vue/compiler-sfc\n        // does not\n        column: m.originalColumn\n      },\n      source: origPosInOldMap.source,\n      name: origPosInOldMap.name\n    });\n  });\n  const generator = mergedMapGenerator;\n  oldMapConsumer.sources.forEach((sourceFile) => {\n    generator._sources.add(sourceFile);\n    const sourceContent = oldMapConsumer.sourceContentFor(sourceFile);\n    if (sourceContent != null) {\n      mergedMapGenerator.setSourceContent(sourceFile, sourceContent);\n    }\n  });\n  generator._sourceRoot = oldMap.sourceRoot;\n  generator._file = oldMap.file;\n  return generator.toJSON();\n}\nfunction patchErrors(errors, source, inMap) {\n  const originalSource = inMap.sourcesContent[0];\n  const offset = originalSource.indexOf(source);\n  const lineOffset = originalSource.slice(0, offset).split(/\\r?\\n/).length - 1;\n  errors.forEach((err) => {\n    if (err.loc) {\n      err.loc.start.line += lineOffset;\n      err.loc.start.offset += offset;\n      if (err.loc.end !== err.loc.start) {\n        err.loc.end.line += lineOffset;\n        err.loc.end.offset += offset;\n      }\n    }\n  });\n}\n\nvar picocolors = {exports: {}};\n\n// MIT lisence\n// from https://github.com/substack/tty-browserify/blob/1ba769a6429d242f36226538835b4034bf6b7886/index.js\n\nfunction isatty() {\n  return false;\n}\n\nfunction ReadStream() {\n  throw new Error('tty.ReadStream is not implemented');\n}\n\nfunction WriteStream() {\n  throw new Error('tty.ReadStream is not implemented');\n}\n\nvar _polyfillNode_tty = {\n  isatty: isatty,\n  ReadStream: ReadStream,\n  WriteStream: WriteStream\n};\n\nvar _polyfillNode_tty$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ReadStream: ReadStream,\n  WriteStream: WriteStream,\n  default: _polyfillNode_tty,\n  isatty: isatty\n});\n\nvar require$$0 = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_tty$1);\n\nlet tty = require$$0;\n\nlet isColorSupported =\n\t!(\"NO_COLOR\" in ({}) || browser$1.argv.includes(\"--no-color\")) &&\n\t(\"FORCE_COLOR\" in ({}) ||\n\t\tbrowser$1.argv.includes(\"--color\") ||\n\t\t\"\" === \"win32\" ||\n\t\t(tty.isatty(1) && browser$1.env.TERM !== \"dumb\") ||\n\t\t\"CI\" in ({}));\n\nlet formatter =\n\t(open, close, replace = open) =>\n\tinput => {\n\t\tlet string = \"\" + input;\n\t\tlet index = string.indexOf(close, open.length);\n\t\treturn ~index\n\t\t\t? open + replaceClose(string, close, replace, index) + close\n\t\t\t: open + string + close\n\t};\n\nlet replaceClose = (string, close, replace, index) => {\n\tlet start = string.substring(0, index) + replace;\n\tlet end = string.substring(index + close.length);\n\tlet nextIndex = end.indexOf(close);\n\treturn ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end\n};\n\nlet createColors = (enabled = isColorSupported) => ({\n\tisColorSupported: enabled,\n\treset: enabled ? s => `\\x1b[0m${s}\\x1b[0m` : String,\n\tbold: enabled ? formatter(\"\\x1b[1m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[1m\") : String,\n\tdim: enabled ? formatter(\"\\x1b[2m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[2m\") : String,\n\titalic: enabled ? formatter(\"\\x1b[3m\", \"\\x1b[23m\") : String,\n\tunderline: enabled ? formatter(\"\\x1b[4m\", \"\\x1b[24m\") : String,\n\tinverse: enabled ? formatter(\"\\x1b[7m\", \"\\x1b[27m\") : String,\n\thidden: enabled ? formatter(\"\\x1b[8m\", \"\\x1b[28m\") : String,\n\tstrikethrough: enabled ? formatter(\"\\x1b[9m\", \"\\x1b[29m\") : String,\n\tblack: enabled ? formatter(\"\\x1b[30m\", \"\\x1b[39m\") : String,\n\tred: enabled ? formatter(\"\\x1b[31m\", \"\\x1b[39m\") : String,\n\tgreen: enabled ? formatter(\"\\x1b[32m\", \"\\x1b[39m\") : String,\n\tyellow: enabled ? formatter(\"\\x1b[33m\", \"\\x1b[39m\") : String,\n\tblue: enabled ? formatter(\"\\x1b[34m\", \"\\x1b[39m\") : String,\n\tmagenta: enabled ? formatter(\"\\x1b[35m\", \"\\x1b[39m\") : String,\n\tcyan: enabled ? formatter(\"\\x1b[36m\", \"\\x1b[39m\") : String,\n\twhite: enabled ? formatter(\"\\x1b[37m\", \"\\x1b[39m\") : String,\n\tgray: enabled ? formatter(\"\\x1b[90m\", \"\\x1b[39m\") : String,\n\tbgBlack: enabled ? formatter(\"\\x1b[40m\", \"\\x1b[49m\") : String,\n\tbgRed: enabled ? formatter(\"\\x1b[41m\", \"\\x1b[49m\") : String,\n\tbgGreen: enabled ? formatter(\"\\x1b[42m\", \"\\x1b[49m\") : String,\n\tbgYellow: enabled ? formatter(\"\\x1b[43m\", \"\\x1b[49m\") : String,\n\tbgBlue: enabled ? formatter(\"\\x1b[44m\", \"\\x1b[49m\") : String,\n\tbgMagenta: enabled ? formatter(\"\\x1b[45m\", \"\\x1b[49m\") : String,\n\tbgCyan: enabled ? formatter(\"\\x1b[46m\", \"\\x1b[49m\") : String,\n\tbgWhite: enabled ? formatter(\"\\x1b[47m\", \"\\x1b[49m\") : String,\n});\n\npicocolors.exports = createColors();\npicocolors.exports.createColors = createColors;\n\nvar picocolorsExports = picocolors.exports;\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0);\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0);\nconst BACKSLASH = '\\\\'.charCodeAt(0);\nconst SLASH = '/'.charCodeAt(0);\nconst NEWLINE = '\\n'.charCodeAt(0);\nconst SPACE = ' '.charCodeAt(0);\nconst FEED = '\\f'.charCodeAt(0);\nconst TAB = '\\t'.charCodeAt(0);\nconst CR = '\\r'.charCodeAt(0);\nconst OPEN_SQUARE = '['.charCodeAt(0);\nconst CLOSE_SQUARE = ']'.charCodeAt(0);\nconst OPEN_PARENTHESES = '('.charCodeAt(0);\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0);\nconst OPEN_CURLY = '{'.charCodeAt(0);\nconst CLOSE_CURLY = '}'.charCodeAt(0);\nconst SEMICOLON = ';'.charCodeAt(0);\nconst ASTERISK = '*'.charCodeAt(0);\nconst COLON = ':'.charCodeAt(0);\nconst AT = '@'.charCodeAt(0);\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g;\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g;\nconst RE_BAD_BRACKET = /.[\\r\\n\"'(/\\\\]/;\nconst RE_HEX_ESCAPE = /[\\da-f]/i;\n\nvar tokenize$1 = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf();\n  let ignore = options.ignoreErrors;\n\n  let code, next, quote, content, escape;\n  let escaped, escapePos, prev, n, currentToken;\n\n  let length = css.length;\n  let pos = 0;\n  let buffer = [];\n  let returned = [];\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false;\n\n    code = css.charCodeAt(pos);\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos;\n        do {\n          next += 1;\n          code = css.charCodeAt(next);\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)];\n        pos = next - 1;\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code);\n        currentToken = [controlChar, controlChar, pos];\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : '';\n        n = css.charCodeAt(pos + 1);\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos;\n          do {\n            escaped = false;\n            next = css.indexOf(')', next + 1);\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos;\n                break\n              } else {\n                unclosed('bracket');\n              }\n            }\n            escapePos = next;\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1;\n              escaped = !escaped;\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next];\n\n          pos = next;\n        } else {\n          next = css.indexOf(')', pos + 1);\n          content = css.slice(pos, next + 1);\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos];\n          } else {\n            currentToken = ['brackets', content, pos, next];\n            pos = next;\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"';\n        next = pos;\n        do {\n          escaped = false;\n          next = css.indexOf(quote, next + 1);\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1;\n              break\n            } else {\n              unclosed('string');\n            }\n          }\n          escapePos = next;\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1;\n            escaped = !escaped;\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next];\n        pos = next;\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1;\n        RE_AT_END.test(css);\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1;\n        } else {\n          next = RE_AT_END.lastIndex - 2;\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next];\n\n        pos = next;\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos;\n        escape = true;\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1;\n          escape = !escape;\n        }\n        code = css.charCodeAt(next + 1);\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1;\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1;\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1;\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next];\n\n        pos = next;\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1;\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length;\n            } else {\n              unclosed('comment');\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next];\n          pos = next;\n        } else {\n          RE_WORD_END.lastIndex = pos + 1;\n          RE_WORD_END.test(css);\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1;\n          } else {\n            next = RE_WORD_END.lastIndex - 2;\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next];\n          buffer.push(currentToken);\n          pos = next;\n        }\n\n        break\n      }\n    }\n\n    pos++;\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token);\n  }\n\n  return {\n    back,\n    endOfFile,\n    nextToken,\n    position\n  }\n};\n\nlet pico$1 = picocolorsExports;\n\nlet tokenizer$1 = tokenize$1;\n\nlet Input$5;\n\nfunction registerInput(dependant) {\n  Input$5 = dependant;\n}\n\nconst HIGHLIGHT_THEME = {\n  ';': pico$1.yellow,\n  ':': pico$1.yellow,\n  '(': pico$1.cyan,\n  ')': pico$1.cyan,\n  '[': pico$1.yellow,\n  ']': pico$1.yellow,\n  '{': pico$1.yellow,\n  '}': pico$1.yellow,\n  'at-word': pico$1.cyan,\n  'brackets': pico$1.cyan,\n  'call': pico$1.cyan,\n  'class': pico$1.yellow,\n  'comment': pico$1.gray,\n  'hash': pico$1.magenta,\n  'string': pico$1.green\n};\n\nfunction getTokenType([type, value], processor) {\n  if (type === 'word') {\n    if (value[0] === '.') {\n      return 'class'\n    }\n    if (value[0] === '#') {\n      return 'hash'\n    }\n  }\n\n  if (!processor.endOfFile()) {\n    let next = processor.nextToken();\n    processor.back(next);\n    if (next[0] === 'brackets' || next[0] === '(') return 'call'\n  }\n\n  return type\n}\n\nfunction terminalHighlight$2(css) {\n  let processor = tokenizer$1(new Input$5(css), { ignoreErrors: true });\n  let result = '';\n  while (!processor.endOfFile()) {\n    let token = processor.nextToken();\n    let color = HIGHLIGHT_THEME[getTokenType(token, processor)];\n    if (color) {\n      result += token[1]\n        .split(/\\r?\\n/)\n        .map(i => color(i))\n        .join('\\n');\n    } else {\n      result += token[1];\n    }\n  }\n  return result\n}\n\nterminalHighlight$2.registerInput = registerInput;\n\nvar terminalHighlight_1 = terminalHighlight$2;\n\nlet pico = picocolorsExports;\n\nlet terminalHighlight$1 = terminalHighlight_1;\n\nlet CssSyntaxError$3 = class CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message);\n    this.name = 'CssSyntaxError';\n    this.reason = message;\n\n    if (file) {\n      this.file = file;\n    }\n    if (source) {\n      this.source = source;\n    }\n    if (plugin) {\n      this.plugin = plugin;\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      if (typeof line === 'number') {\n        this.line = line;\n        this.column = column;\n      } else {\n        this.line = line.line;\n        this.column = line.column;\n        this.endLine = column.line;\n        this.endColumn = column.column;\n      }\n    }\n\n    this.setMessage();\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError);\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : '';\n    this.message += this.file ? this.file : '<css input>';\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column;\n    }\n    this.message += ': ' + this.reason;\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source;\n    if (color == null) color = pico.isColorSupported;\n    if (terminalHighlight$1) {\n      if (color) css = terminalHighlight$1(css);\n    }\n\n    let lines = css.split(/\\r?\\n/);\n    let start = Math.max(this.line - 3, 0);\n    let end = Math.min(this.line + 2, lines.length);\n\n    let maxWidth = String(end).length;\n\n    let mark, aside;\n    if (color) {\n      let { bold, gray, red } = pico.createColors(true);\n      mark = text => bold(red(text));\n      aside = text => gray(text);\n    } else {\n      mark = aside = str => str;\n    }\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index;\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | ';\n        if (number === this.line) {\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ');\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\n        }\n        return ' ' + aside(gutter) + line\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode();\n    if (code) {\n      code = '\\n\\n' + code + '\\n';\n    }\n    return this.name + ': ' + this.message + code\n  }\n};\n\nvar cssSyntaxError = CssSyntaxError$3;\nCssSyntaxError$3.default = CssSyntaxError$3;\n\nvar symbols = {};\n\nsymbols.isClean = Symbol('isClean');\n\nsymbols.my = Symbol('my');\n\nconst DEFAULT_RAW = {\n  after: '\\n',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  beforeDecl: '\\n',\n  beforeOpen: ' ',\n  beforeRule: '\\n',\n  colon: ': ',\n  commentLeft: ' ',\n  commentRight: ' ',\n  emptyBody: '',\n  indent: '    ',\n  semicolon: false\n};\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nlet Stringifier$2 = class Stringifier {\n  constructor(builder) {\n    this.builder = builder;\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name;\n    let params = node.params ? this.rawValue(node, 'params') : '';\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName;\n    } else if (params) {\n      name += ' ';\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params);\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '');\n      this.builder(name + params + end, node);\n    }\n  }\n\n  beforeAfter(node, detect) {\n    let value;\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl');\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment');\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule');\n    } else {\n      value = this.raw(node, null, 'beforeClose');\n    }\n\n    let buf = node.parent;\n    let depth = 0;\n    while (buf && buf.type !== 'root') {\n      depth += 1;\n      buf = buf.parent;\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent');\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent;\n      }\n    }\n\n    return value\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen');\n    this.builder(start + between + '{', node, 'start');\n\n    let after;\n    if (node.nodes && node.nodes.length) {\n      this.body(node);\n      after = this.raw(node, 'after');\n    } else {\n      after = this.raw(node, 'after', 'emptyBody');\n    }\n\n    if (after) this.builder(after);\n    this.builder('}', node, 'end');\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1;\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1;\n    }\n\n    let semicolon = this.raw(node, 'semicolon');\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i];\n      let before = this.raw(child, 'before');\n      if (before) this.builder(before);\n      this.stringify(child, last !== i || semicolon);\n    }\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft');\n    let right = this.raw(node, 'right', 'commentRight');\n    this.builder('/*' + left + node.text + right + '*/', node);\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon');\n    let string = node.prop + between + this.rawValue(node, 'value');\n\n    if (node.important) {\n      string += node.raws.important || ' !important';\n    }\n\n    if (semicolon) string += ';';\n    this.builder(string, node);\n  }\n\n  document(node) {\n    this.body(node);\n  }\n\n  raw(node, own, detect) {\n    let value;\n    if (!detect) detect = own;\n\n    // Already had\n    if (own) {\n      value = node.raws[own];\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent;\n\n    if (detect === 'before') {\n      // Hack for first rule in CSS\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n\n      // `root` nodes in `document` should use only their own raws\n      if (parent && parent.type === 'document') {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root();\n    if (!root.rawCache) root.rawCache = {};\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect);\n      if (this[method]) {\n        value = this[method](root, node);\n      } else {\n        root.walk(i => {\n          value = i.raws[own];\n          if (typeof value !== 'undefined') return false\n        });\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect];\n\n    root.rawCache[detect] = value;\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value;\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after;\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '');\n          }\n          return false\n        }\n      }\n    });\n    if (value) value = value.replace(/\\S/g, '');\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value;\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before;\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '');\n        }\n        return false\n      }\n    });\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl');\n    } else if (value) {\n      value = value.replace(/\\S/g, '');\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value;\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before;\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '');\n        }\n        return false\n      }\n    });\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule');\n    } else if (value) {\n      value = value.replace(/\\S/g, '');\n    }\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value;\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between;\n        if (typeof value !== 'undefined') return false\n      }\n    });\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value;\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before;\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '');\n          }\n          return false\n        }\n      }\n    });\n    if (value) value = value.replace(/\\S/g, '');\n    return value\n  }\n\n  rawColon(root) {\n    let value;\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '');\n        return false\n      }\n    });\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value;\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after;\n        if (typeof value !== 'undefined') return false\n      }\n    });\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value;\n    root.walk(i => {\n      let p = i.parent;\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n');\n          value = parts[parts.length - 1];\n          value = value.replace(/\\S/g, '');\n          return false\n        }\n      }\n    });\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value;\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon;\n        if (typeof value !== 'undefined') return false\n      }\n    });\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop];\n    let raw = node.raws[prop];\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n\n  root(node) {\n    this.body(node);\n    if (node.raws.after) this.builder(node.raws.after);\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'));\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end');\n    }\n  }\n\n  stringify(node, semicolon) {\n    /* c8 ignore start */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    /* c8 ignore stop */\n    this[node.type](node, semicolon);\n  }\n};\n\nvar stringifier = Stringifier$2;\nStringifier$2.default = Stringifier$2;\n\nlet Stringifier$1 = stringifier;\n\nfunction stringify$4(node, builder) {\n  let str = new Stringifier$1(builder);\n  str.stringify(node);\n}\n\nvar stringify_1 = stringify$4;\nstringify$4.default = stringify$4;\n\nlet { isClean: isClean$2, my: my$2 } = symbols;\nlet CssSyntaxError$2 = cssSyntaxError;\nlet Stringifier = stringifier;\nlet stringify$3 = stringify_1;\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor();\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i];\n    let type = typeof value;\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent;\n    } else if (i === 'source') {\n      cloned[i] = value;\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned));\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value);\n      cloned[i] = value;\n    }\n  }\n\n  return cloned\n}\n\nlet Node$4 = class Node {\n  constructor(defaults = {}) {\n    this.raws = {};\n    this[isClean$2] = false;\n    this[my$2] = true;\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = [];\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone());\n          } else {\n            this.append(node);\n          }\n        }\n      } else {\n        this[name] = defaults[name];\n      }\n    }\n  }\n\n  addToError(error) {\n    error.postcssNode = this;\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source;\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      );\n    }\n    return error\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add);\n    return this\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name];\n    }\n    return this\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add);\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before;\n    delete this.raws.after;\n    if (!keepBetween) delete this.raws.between;\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this);\n    for (let name in overrides) {\n      cloned[name] = overrides[name];\n    }\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides);\n    this.parent.insertAfter(this, cloned);\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides);\n    this.parent.insertBefore(this, cloned);\n    return cloned\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let { end, start } = this.rangeBy(opts);\n      return this.source.input.error(\n        message,\n        { column: start.column, line: start.line },\n        { column: end.column, line: end.line },\n        opts\n      )\n    }\n    return new CssSyntaxError$2(message)\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value;\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          /* c8 ignore next */\n          prop === 'text'\n        ) {\n          node.markDirty();\n        }\n        return true\n      }\n    }\n  }\n\n  markDirty() {\n    if (this[isClean$2]) {\n      this[isClean$2] = false;\n      let next = this;\n      while ((next = next.parent)) {\n        next[isClean$2] = false;\n      }\n    }\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this);\n    return this.parent.nodes[index + 1]\n  }\n\n  positionBy(opts, stringRepresentation) {\n    let pos = this.source.start;\n    if (opts.index) {\n      pos = this.positionInside(opts.index, stringRepresentation);\n    } else if (opts.word) {\n      stringRepresentation = this.toString();\n      let index = stringRepresentation.indexOf(opts.word);\n      if (index !== -1) pos = this.positionInside(index, stringRepresentation);\n    }\n    return pos\n  }\n\n  positionInside(index, stringRepresentation) {\n    let string = stringRepresentation || this.toString();\n    let column = this.source.start.column;\n    let line = this.source.start.line;\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1;\n        line += 1;\n      } else {\n        column += 1;\n      }\n    }\n\n    return { column, line }\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this);\n    return this.parent.nodes[index - 1]\n  }\n\n  rangeBy(opts) {\n    let start = {\n      column: this.source.start.column,\n      line: this.source.start.line\n    };\n    let end = this.source.end\n      ? {\n        column: this.source.end.column + 1,\n        line: this.source.end.line\n      }\n      : {\n        column: start.column + 1,\n        line: start.line\n      };\n\n    if (opts.word) {\n      let stringRepresentation = this.toString();\n      let index = stringRepresentation.indexOf(opts.word);\n      if (index !== -1) {\n        start = this.positionInside(index, stringRepresentation);\n        end = this.positionInside(index + opts.word.length, stringRepresentation);\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          column: opts.start.column,\n          line: opts.start.line\n        };\n      } else if (opts.index) {\n        start = this.positionInside(opts.index);\n      }\n\n      if (opts.end) {\n        end = {\n          column: opts.end.column,\n          line: opts.end.line\n        };\n      } else if (typeof opts.endIndex === 'number') {\n        end = this.positionInside(opts.endIndex);\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1);\n      }\n    }\n\n    if (\n      end.line < start.line ||\n      (end.line === start.line && end.column <= start.column)\n    ) {\n      end = { column: start.column + 1, line: start.line };\n    }\n\n    return { end, start }\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier();\n    return str.raw(this, prop, defaultType)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n    this.parent = undefined;\n    return this\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this;\n      let foundSelf = false;\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true;\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node);\n          bookmark = node;\n        } else {\n          this.parent.insertBefore(bookmark, node);\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove();\n      }\n    }\n\n    return this\n  }\n\n  root() {\n    let result = this;\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent;\n    }\n    return result\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {};\n    let emitInputs = inputs == null;\n    inputs = inputs || new Map();\n    let inputsNextIndex = 0;\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name];\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        });\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs);\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input);\n        if (inputId == null) {\n          inputId = inputsNextIndex;\n          inputs.set(value.input, inputsNextIndex);\n          inputsNextIndex++;\n        }\n        fixed[name] = {\n          end: value.end,\n          inputId,\n          start: value.start\n        };\n      } else {\n        fixed[name] = value;\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON());\n    }\n\n    return fixed\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor());\n    }\n    return this.proxyCache\n  }\n\n  toString(stringifier = stringify$3) {\n    if (stringifier.stringify) stringifier = stringifier.stringify;\n    let result = '';\n    stringifier(this, i => {\n      result += i;\n    });\n    return result\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this };\n    for (let i in opts) data[i] = opts[i];\n    return result.warn(text, data)\n  }\n\n  get proxyOf() {\n    return this\n  }\n};\n\nvar node$2 = Node$4;\nNode$4.default = Node$4;\n\nlet Node$3 = node$2;\n\nlet Declaration$4 = class Declaration extends Node$3 {\n  constructor(defaults) {\n    if (\n      defaults &&\n      typeof defaults.value !== 'undefined' &&\n      typeof defaults.value !== 'string'\n    ) {\n      defaults = { ...defaults, value: String(defaults.value) };\n    }\n    super(defaults);\n    this.type = 'decl';\n  }\n\n  get variable() {\n    return this.prop.startsWith('--') || this.prop[0] === '$'\n  }\n};\n\nvar declaration = Declaration$4;\nDeclaration$4.default = Declaration$4;\n\nvar require$$2 = /*@__PURE__*/getAugmentedNamespace(_polyfillNode_url$1);\n\nlet urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict';\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = '';\n    let i = size;\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0];\n    }\n    return id\n  }\n};\nlet nanoid$1 = (size = 21) => {\n  let id = '';\n  let i = size;\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0];\n  }\n  return id\n};\nvar nonSecure = { nanoid: nanoid$1, customAlphabet };\n\nlet { SourceMapConsumer: SourceMapConsumer$4, SourceMapGenerator: SourceMapGenerator$5 } = sourceMap$2;\nlet { existsSync, readFileSync } = require$$0$2;\nlet { dirname: dirname$1, join } = require$$1;\n\nfunction fromBase64(str) {\n  if (Buffer$1) {\n    return Buffer$1.from(str, 'base64').toString()\n  } else {\n    /* c8 ignore next 2 */\n    return window.atob(str)\n  }\n}\n\nlet PreviousMap$2 = class PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return\n    this.loadAnnotation(css);\n    this.inline = this.startWith(this.annotation, 'data:');\n\n    let prev = opts.map ? opts.map.prev : undefined;\n    let text = this.loadMap(opts.from, prev);\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from;\n    }\n    if (this.mapFile) this.root = dirname$1(this.mapFile);\n    if (text) this.text = text;\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer$4(this.text);\n    }\n    return this.consumerCache\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/;\n    let baseUri = /^data:application\\/json;base64,/;\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/;\n    let uri = /^data:application\\/json,/;\n\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length))\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1];\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false\n    return (\n      typeof map.mappings === 'string' ||\n      typeof map._mappings === 'string' ||\n      Array.isArray(map.sections)\n    )\n  }\n\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm);\n    if (!comments) return\n\n    // sourceMappingURLs from comments, strings, etc.\n    let start = css.lastIndexOf(comments.pop());\n    let end = css.indexOf('*/', start);\n\n    if (start > -1 && end > -1) {\n      // Locate the last sourceMappingURL to avoid pickin\n      this.annotation = this.getAnnotationURL(css.substring(start, end));\n    }\n  }\n\n  loadFile(path) {\n    this.root = dirname$1(path);\n    if (existsSync(path)) {\n      this.mapFile = path;\n      return readFileSync(path, 'utf-8').toString().trim()\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file);\n        if (prevPath) {\n          let map = this.loadFile(prevPath);\n          if (!map) {\n            throw new Error(\n              'Unable to load previous source map: ' + prevPath.toString()\n            )\n          }\n          return map\n        }\n      } else if (prev instanceof SourceMapConsumer$4) {\n        return SourceMapGenerator$5.fromSourceMap(prev).toString()\n      } else if (prev instanceof SourceMapGenerator$5) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString()\n        )\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation;\n      if (file) map = join(dirname$1(file), map);\n      return this.loadFile(map)\n    }\n  }\n\n  startWith(string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  withContent() {\n    return !!(\n      this.consumer().sourcesContent &&\n      this.consumer().sourcesContent.length > 0\n    )\n  }\n};\n\nvar previousMap = PreviousMap$2;\nPreviousMap$2.default = PreviousMap$2;\n\nlet { SourceMapConsumer: SourceMapConsumer$3, SourceMapGenerator: SourceMapGenerator$4 } = sourceMap$2;\nlet { fileURLToPath, pathToFileURL: pathToFileURL$1 } = require$$2;\nlet { isAbsolute, resolve: resolve$1 } = require$$1;\nlet { nanoid } = nonSecure;\n\nlet terminalHighlight = terminalHighlight_1;\nlet CssSyntaxError$1 = cssSyntaxError;\nlet PreviousMap$1 = previousMap;\n\nlet fromOffsetCache = Symbol('fromOffsetCache');\n\nlet sourceMapAvailable$1 = Boolean(SourceMapConsumer$3 && SourceMapGenerator$4);\nlet pathAvailable$1 = Boolean(resolve$1 && isAbsolute);\n\nlet Input$4 = class Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString();\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true;\n      this.css = this.css.slice(1);\n    } else {\n      this.hasBOM = false;\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable$1 ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from;\n      } else {\n        this.file = resolve$1(opts.from);\n      }\n    }\n\n    if (pathAvailable$1 && sourceMapAvailable$1) {\n      let map = new PreviousMap$1(this.css, opts);\n      if (map.text) {\n        this.map = map;\n        let file = map.consumer().file;\n        if (!this.file && file) this.file = this.mapResolve(file);\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>';\n    }\n    if (this.map) this.map.file = this.from;\n  }\n\n  error(message, line, column, opts = {}) {\n    let result, endLine, endColumn;\n\n    if (line && typeof line === 'object') {\n      let start = line;\n      let end = column;\n      if (typeof start.offset === 'number') {\n        let pos = this.fromOffset(start.offset);\n        line = pos.line;\n        column = pos.col;\n      } else {\n        line = start.line;\n        column = start.column;\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset);\n        endLine = pos.line;\n        endColumn = pos.col;\n      } else {\n        endLine = end.line;\n        endColumn = end.column;\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line);\n      line = pos.line;\n      column = pos.col;\n    }\n\n    let origin = this.origin(line, column, endLine, endColumn);\n    if (origin) {\n      result = new CssSyntaxError$1(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { column: origin.column, line: origin.line },\n        origin.endLine === undefined\n          ? origin.column\n          : { column: origin.endColumn, line: origin.endLine },\n        origin.source,\n        origin.file,\n        opts.plugin\n      );\n    } else {\n      result = new CssSyntaxError$1(\n        message,\n        endLine === undefined ? line : { column, line },\n        endLine === undefined ? column : { column: endColumn, line: endLine },\n        this.css,\n        this.file,\n        opts.plugin\n      );\n    }\n\n    result.input = { column, endColumn, endLine, line, source: this.css };\n    if (this.file) {\n      if (pathToFileURL$1) {\n        result.input.url = pathToFileURL$1(this.file).toString();\n      }\n      result.input.file = this.file;\n    }\n\n    return result\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex;\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n');\n      lineToIndex = new Array(lines.length);\n      let prevIndex = 0;\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex;\n        prevIndex += lines[i].length + 1;\n      }\n\n      this[fromOffsetCache] = lineToIndex;\n    } else {\n      lineToIndex = this[fromOffsetCache];\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1];\n\n    let min = 0;\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1;\n    } else {\n      let max = lineToIndex.length - 2;\n      let mid;\n      while (min < max) {\n        mid = min + ((max - min) >> 1);\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1;\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1;\n        } else {\n          min = mid;\n          break\n        }\n      }\n    }\n    return {\n      col: offset - lineToIndex[min] + 1,\n      line: min + 1\n    }\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve$1(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    let consumer = this.map.consumer();\n\n    let from = consumer.originalPositionFor({ column, line });\n    if (!from.source) return false\n\n    let to;\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ column: endColumn, line: endLine });\n    }\n\n    let fromUrl;\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL$1(from.source);\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL$1(this.map.mapFile)\n      );\n    }\n\n    let result = {\n      column: from.column,\n      endColumn: to && to.column,\n      endLine: to && to.line,\n      line: from.line,\n      url: fromUrl.toString()\n    };\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl);\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source);\n    if (source) result.source = source;\n\n    return result\n  }\n\n  toJSON() {\n    let json = {};\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name];\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map };\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined;\n      }\n    }\n    return json\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n};\n\nvar input = Input$4;\nInput$4.default = Input$4;\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input$4);\n}\n\nlet { SourceMapConsumer: SourceMapConsumer$2, SourceMapGenerator: SourceMapGenerator$3 } = sourceMap$2;\nlet { dirname, relative, resolve, sep } = require$$1;\nlet { pathToFileURL } = require$$2;\n\nlet Input$3 = input;\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer$2 && SourceMapGenerator$3);\nlet pathAvailable = Boolean(dirname && resolve && relative && sep);\n\nlet MapGenerator$2 = class MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify;\n    this.mapOpts = opts.map || {};\n    this.root = root;\n    this.opts = opts;\n    this.css = cssString;\n    this.originalCSS = cssString;\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute;\n\n    this.memoizedFileURLs = new Map();\n    this.memoizedPaths = new Map();\n    this.memoizedURLs = new Map();\n  }\n\n  addAnnotation() {\n    let content;\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString());\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation;\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root);\n    } else {\n      content = this.outputFile() + '.map';\n    }\n    let eol = '\\n';\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n';\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */';\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file));\n      let root = prev.root || dirname(prev.file);\n      let map;\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer$2(prev.text);\n        if (map.sourcesContent) {\n          map.sourcesContent = null;\n        }\n      } else {\n        map = prev.consumer();\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)));\n    }\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node;\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i];\n        if (node.type !== 'comment') continue\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i);\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/\\n*?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '');\n    }\n  }\n\n  generate() {\n    this.clearAnnotation();\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = '';\n      this.stringify(this.root, i => {\n        result += i;\n      });\n      return [result]\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString();\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer();\n      prev.file = this.outputFile();\n      this.map = SourceMapGenerator$3.fromSourceMap(prev, {\n        ignoreInvalidMapping: true\n      });\n    } else {\n      this.map = new SourceMapGenerator$3({\n        file: this.outputFile(),\n        ignoreInvalidMapping: true\n      });\n      this.map.addMapping({\n        generated: { column: 0, line: 1 },\n        original: { column: 0, line: 1 },\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>'\n      });\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent();\n    if (this.root && this.previous().length > 0) this.applyPrevMaps();\n    if (this.isAnnotation()) this.addAnnotation();\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  generateString() {\n    this.css = '';\n    this.map = new SourceMapGenerator$3({\n      file: this.outputFile(),\n      ignoreInvalidMapping: true\n    });\n\n    let line = 1;\n    let column = 1;\n\n    let noSource = '<no source>';\n    let mapping = {\n      generated: { column: 0, line: 0 },\n      original: { column: 0, line: 0 },\n      source: ''\n    };\n\n    let lines, last;\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str;\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line;\n        mapping.generated.column = column - 1;\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node);\n          mapping.original.line = node.source.start.line;\n          mapping.original.column = node.source.start.column - 1;\n          this.map.addMapping(mapping);\n        } else {\n          mapping.source = noSource;\n          mapping.original.line = 1;\n          mapping.original.column = 0;\n          this.map.addMapping(mapping);\n        }\n      }\n\n      lines = str.match(/\\n/g);\n      if (lines) {\n        line += lines.length;\n        last = str.lastIndexOf('\\n');\n        column = str.length - last;\n      } else {\n        column += str.length;\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} };\n        let childless =\n          node.type === 'decl' || (node.type === 'atrule' && !node.nodes);\n        if (!childless || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node);\n            mapping.original.line = node.source.end.line;\n            mapping.original.column = node.source.end.column - 1;\n            mapping.generated.line = line;\n            mapping.generated.column = column - 2;\n            this.map.addMapping(mapping);\n          } else {\n            mapping.source = noSource;\n            mapping.original.line = 1;\n            mapping.original.column = 0;\n            mapping.generated.line = line;\n            mapping.generated.column = column - 1;\n            this.map.addMapping(mapping);\n          }\n        }\n      }\n    });\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation;\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  path(file) {\n    if (this.mapOpts.absolute) return file\n    if (file.charCodeAt(0) === 60 /* `<` */) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    let cached = this.memoizedPaths.get(file);\n    if (cached) return cached\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.';\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation));\n    }\n\n    let path = relative(from, file);\n    this.memoizedPaths.set(file, path);\n\n    return path\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = [];\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map;\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map);\n            }\n          }\n        });\n      } else {\n        let input = new Input$3(this.originalCSS, this.opts);\n        if (input.map) this.previousMaps.push(input.map);\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  setSourcesContent() {\n    let already = {};\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from;\n          if (from && !already[from]) {\n            already[from] = true;\n            let fromUrl = this.usesFileUrls\n              ? this.toFileUrl(from)\n              : this.toUrl(this.path(from));\n            this.map.setSourceContent(fromUrl, node.source.input.css);\n          }\n        }\n      });\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>';\n      this.map.setSourceContent(from, this.css);\n    }\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node.source.input.from)\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  toBase64(str) {\n    if (Buffer$1) {\n      return Buffer$1.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  toFileUrl(path) {\n    let cached = this.memoizedFileURLs.get(path);\n    if (cached) return cached\n\n    if (pathToFileURL) {\n      let fileURL = pathToFileURL(path).toString();\n      this.memoizedFileURLs.set(path, fileURL);\n\n      return fileURL\n    } else {\n      throw new Error(\n        '`map.absolute` option is not available in this PostCSS build'\n      )\n    }\n  }\n\n  toUrl(path) {\n    let cached = this.memoizedURLs.get(path);\n    if (cached) return cached\n\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/');\n    }\n\n    let url = encodeURI(path).replace(/[#?]/g, encodeURIComponent);\n    this.memoizedURLs.set(path, url);\n\n    return url\n  }\n};\n\nvar mapGenerator = MapGenerator$2;\n\nlet Node$2 = node$2;\n\nlet Comment$4 = class Comment extends Node$2 {\n  constructor(defaults) {\n    super(defaults);\n    this.type = 'comment';\n  }\n};\n\nvar comment$3 = Comment$4;\nComment$4.default = Comment$4;\n\nlet { isClean: isClean$1, my: my$1 } = symbols;\nlet Declaration$3 = declaration;\nlet Comment$3 = comment$3;\nlet Node$1 = node$2;\n\nlet parse$4, Rule$4, AtRule$4, Root$6;\n\nfunction cleanSource(nodes) {\n  return nodes.map(i => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes);\n    delete i.source;\n    return i\n  })\n}\n\nfunction markDirtyUp(node) {\n  node[isClean$1] = false;\n  if (node.proxyOf.nodes) {\n    for (let i of node.proxyOf.nodes) {\n      markDirtyUp(i);\n    }\n  }\n}\n\nlet Container$7 = class Container extends Node$1 {\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last);\n      for (let node of nodes) this.proxyOf.nodes.push(node);\n    }\n\n    this.markDirty();\n\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween);\n    if (this.nodes) {\n      for (let node of this.nodes) node.cleanRaws(keepBetween);\n    }\n  }\n\n  each(callback) {\n    if (!this.proxyOf.nodes) return undefined\n    let iterator = this.getIterator();\n\n    let index, result;\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index = this.indexes[iterator];\n      result = callback(this.proxyOf.nodes[index], index);\n      if (result === false) break\n\n      this.indexes[iterator] += 1;\n    }\n\n    delete this.indexes[iterator];\n    return result\n  }\n\n  every(condition) {\n    return this.nodes.every(condition)\n  }\n\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0;\n    if (!this.indexes) this.indexes = {};\n\n    this.lastEach += 1;\n    let iterator = this.lastEach;\n    this.indexes[iterator] = 0;\n\n    return iterator\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (!node[prop]) {\n          return node[prop]\n        } else if (\n          prop === 'each' ||\n          (typeof prop === 'string' && prop.startsWith('walk'))\n        ) {\n          return (...args) => {\n            return node[prop](\n              ...args.map(i => {\n                if (typeof i === 'function') {\n                  return (child, index) => i(child.toProxy(), index)\n                } else {\n                  return i\n                }\n              })\n            )\n          }\n        } else if (prop === 'every' || prop === 'some') {\n          return cb => {\n            return node[prop]((child, ...other) =>\n              cb(child.toProxy(), ...other)\n            )\n          }\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else if (prop === 'nodes') {\n          return node.nodes.map(i => i.toProxy())\n        } else if (prop === 'first' || prop === 'last') {\n          return node[prop].toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value;\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n          node.markDirty();\n        }\n        return true\n      }\n    }\n  }\n\n  index(child) {\n    if (typeof child === 'number') return child\n    if (child.proxyOf) child = child.proxyOf;\n    return this.proxyOf.nodes.indexOf(child)\n  }\n\n  insertAfter(exist, add) {\n    let existIndex = this.index(exist);\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse();\n    existIndex = this.index(exist);\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node);\n\n    let index;\n    for (let id in this.indexes) {\n      index = this.indexes[id];\n      if (existIndex < index) {\n        this.indexes[id] = index + nodes.length;\n      }\n    }\n\n    this.markDirty();\n\n    return this\n  }\n\n  insertBefore(exist, add) {\n    let existIndex = this.index(exist);\n    let type = existIndex === 0 ? 'prepend' : false;\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex], type).reverse();\n    existIndex = this.index(exist);\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex, 0, node);\n\n    let index;\n    for (let id in this.indexes) {\n      index = this.indexes[id];\n      if (existIndex <= index) {\n        this.indexes[id] = index + nodes.length;\n      }\n    }\n\n    this.markDirty();\n\n    return this\n  }\n\n  normalize(nodes, sample) {\n    if (typeof nodes === 'string') {\n      nodes = cleanSource(parse$4(nodes).nodes);\n    } else if (typeof nodes === 'undefined') {\n      nodes = [];\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0);\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore');\n      }\n    } else if (nodes.type === 'root' && this.type !== 'document') {\n      nodes = nodes.nodes.slice(0);\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore');\n      }\n    } else if (nodes.type) {\n      nodes = [nodes];\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation')\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value);\n      }\n      nodes = [new Declaration$3(nodes)];\n    } else if (nodes.selector) {\n      nodes = [new Rule$4(nodes)];\n    } else if (nodes.name) {\n      nodes = [new AtRule$4(nodes)];\n    } else if (nodes.text) {\n      nodes = [new Comment$3(nodes)];\n    } else {\n      throw new Error('Unknown node type in node creation')\n    }\n\n    let processed = nodes.map(i => {\n      /* c8 ignore next */\n      if (!i[my$1]) Container.rebuild(i);\n      i = i.proxyOf;\n      if (i.parent) i.parent.removeChild(i);\n      if (i[isClean$1]) markDirtyUp(i);\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/\\S/g, '');\n        }\n      }\n      i.parent = this.proxyOf;\n      return i\n    });\n\n    return processed\n  }\n\n  prepend(...children) {\n    children = children.reverse();\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, 'prepend').reverse();\n      for (let node of nodes) this.proxyOf.nodes.unshift(node);\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length;\n      }\n    }\n\n    this.markDirty();\n\n    return this\n  }\n\n  push(child) {\n    child.parent = this;\n    this.proxyOf.nodes.push(child);\n    return this\n  }\n\n  removeAll() {\n    for (let node of this.proxyOf.nodes) node.parent = undefined;\n    this.proxyOf.nodes = [];\n\n    this.markDirty();\n\n    return this\n  }\n\n  removeChild(child) {\n    child = this.index(child);\n    this.proxyOf.nodes[child].parent = undefined;\n    this.proxyOf.nodes.splice(child, 1);\n\n    let index;\n    for (let id in this.indexes) {\n      index = this.indexes[id];\n      if (index >= child) {\n        this.indexes[id] = index - 1;\n      }\n    }\n\n    this.markDirty();\n\n    return this\n  }\n\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts;\n      opts = {};\n    }\n\n    this.walkDecls(decl => {\n      if (opts.props && !opts.props.includes(decl.prop)) return\n      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n      decl.value = decl.value.replace(pattern, callback);\n    });\n\n    this.markDirty();\n\n    return this\n  }\n\n  some(condition) {\n    return this.nodes.some(condition)\n  }\n\n  walk(callback) {\n    return this.each((child, i) => {\n      let result;\n      try {\n        result = callback(child, i);\n      } catch (e) {\n        throw child.addToError(e)\n      }\n      if (result !== false && child.walk) {\n        result = child.walk(callback);\n      }\n\n      return result\n    })\n  }\n\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name;\n      return this.walk((child, i) => {\n        if (child.type === 'atrule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === 'comment') {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop;\n      return this.walk((child, i) => {\n        if (child.type === 'decl') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector;\n\n      return this.walk((child, i) => {\n        if (child.type === 'rule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  get first() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[0]\n  }\n\n  get last() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n  }\n};\n\nContainer$7.registerParse = dependant => {\n  parse$4 = dependant;\n};\n\nContainer$7.registerRule = dependant => {\n  Rule$4 = dependant;\n};\n\nContainer$7.registerAtRule = dependant => {\n  AtRule$4 = dependant;\n};\n\nContainer$7.registerRoot = dependant => {\n  Root$6 = dependant;\n};\n\nvar container$1 = Container$7;\nContainer$7.default = Container$7;\n\n/* c8 ignore start */\nContainer$7.rebuild = node => {\n  if (node.type === 'atrule') {\n    Object.setPrototypeOf(node, AtRule$4.prototype);\n  } else if (node.type === 'rule') {\n    Object.setPrototypeOf(node, Rule$4.prototype);\n  } else if (node.type === 'decl') {\n    Object.setPrototypeOf(node, Declaration$3.prototype);\n  } else if (node.type === 'comment') {\n    Object.setPrototypeOf(node, Comment$3.prototype);\n  } else if (node.type === 'root') {\n    Object.setPrototypeOf(node, Root$6.prototype);\n  }\n\n  node[my$1] = true;\n\n  if (node.nodes) {\n    node.nodes.forEach(child => {\n      Container$7.rebuild(child);\n    });\n  }\n};\n\nlet Container$6 = container$1;\n\nlet LazyResult$4, Processor$3;\n\nlet Document$3 = class Document extends Container$6 {\n  constructor(defaults) {\n    // type needs to be passed to super, otherwise child roots won't be normalized correctly\n    super({ type: 'document', ...defaults });\n\n    if (!this.nodes) {\n      this.nodes = [];\n    }\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult$4(new Processor$3(), this, opts);\n\n    return lazy.stringify()\n  }\n};\n\nDocument$3.registerLazyResult = dependant => {\n  LazyResult$4 = dependant;\n};\n\nDocument$3.registerProcessor = dependant => {\n  Processor$3 = dependant;\n};\n\nvar document = Document$3;\nDocument$3.default = Document$3;\n\n/* eslint-disable no-console */\n\nlet printed = {};\n\nvar warnOnce$2 = function warnOnce(message) {\n  if (printed[message]) return\n  printed[message] = true;\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message);\n  }\n};\n\nlet Warning$2 = class Warning {\n  constructor(text, opts = {}) {\n    this.type = 'warning';\n    this.text = text;\n\n    if (opts.node && opts.node.source) {\n      let range = opts.node.rangeBy(opts);\n      this.line = range.start.line;\n      this.column = range.start.column;\n      this.endLine = range.end.line;\n      this.endColumn = range.end.column;\n    }\n\n    for (let opt in opts) this[opt] = opts[opt];\n  }\n\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        index: this.index,\n        plugin: this.plugin,\n        word: this.word\n      }).message\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text\n    }\n\n    return this.text\n  }\n};\n\nvar warning = Warning$2;\nWarning$2.default = Warning$2;\n\nlet Warning$1 = warning;\n\nlet Result$3 = class Result {\n  constructor(processor, root, opts) {\n    this.processor = processor;\n    this.messages = [];\n    this.root = root;\n    this.opts = opts;\n    this.css = undefined;\n    this.map = undefined;\n  }\n\n  toString() {\n    return this.css\n  }\n\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin;\n      }\n    }\n\n    let warning = new Warning$1(text, opts);\n    this.messages.push(warning);\n\n    return warning\n  }\n\n  warnings() {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n\n  get content() {\n    return this.css\n  }\n};\n\nvar result = Result$3;\nResult$3.default = Result$3;\n\nlet Container$5 = container$1;\n\nlet AtRule$3 = class AtRule extends Container$5 {\n  constructor(defaults) {\n    super(defaults);\n    this.type = 'atrule';\n  }\n\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = [];\n    return super.append(...children)\n  }\n\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = [];\n    return super.prepend(...children)\n  }\n};\n\nvar atRule = AtRule$3;\nAtRule$3.default = AtRule$3;\n\nContainer$5.registerAtRule(AtRule$3);\n\nlet Container$4 = container$1;\n\nlet LazyResult$3, Processor$2;\n\nlet Root$5 = class Root extends Container$4 {\n  constructor(defaults) {\n    super(defaults);\n    this.type = 'root';\n    if (!this.nodes) this.nodes = [];\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child);\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before;\n        } else {\n          delete sample.raws.before;\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before;\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child);\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before;\n    }\n\n    return super.removeChild(child)\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult$3(new Processor$2(), this, opts);\n    return lazy.stringify()\n  }\n};\n\nRoot$5.registerLazyResult = dependant => {\n  LazyResult$3 = dependant;\n};\n\nRoot$5.registerProcessor = dependant => {\n  Processor$2 = dependant;\n};\n\nvar root$2 = Root$5;\nRoot$5.default = Root$5;\n\nContainer$4.registerRoot(Root$5);\n\nlet list$2 = {\n  comma(string) {\n    return list$2.split(string, [','], true)\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t'];\n    return list$2.split(string, spaces)\n  },\n\n  split(string, separators, last) {\n    let array = [];\n    let current = '';\n    let split = false;\n\n    let func = 0;\n    let inQuote = false;\n    let prevQuote = '';\n    let escape = false;\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false;\n      } else if (letter === '\\\\') {\n        escape = true;\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false;\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true;\n        prevQuote = letter;\n      } else if (letter === '(') {\n        func += 1;\n      } else if (letter === ')') {\n        if (func > 0) func -= 1;\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true;\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim());\n        current = '';\n        split = false;\n      } else {\n        current += letter;\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim());\n    return array\n  }\n};\n\nvar list_1 = list$2;\nlist$2.default = list$2;\n\nlet Container$3 = container$1;\nlet list$1 = list_1;\n\nlet Rule$3 = class Rule extends Container$3 {\n  constructor(defaults) {\n    super(defaults);\n    this.type = 'rule';\n    if (!this.nodes) this.nodes = [];\n  }\n\n  get selectors() {\n    return list$1.comma(this.selector)\n  }\n\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null;\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen');\n    this.selector = values.join(sep);\n  }\n};\n\nvar rule = Rule$3;\nRule$3.default = Rule$3;\n\nContainer$3.registerRule(Rule$3);\n\nlet Declaration$2 = declaration;\nlet tokenizer = tokenize$1;\nlet Comment$2 = comment$3;\nlet AtRule$2 = atRule;\nlet Root$4 = root$2;\nlet Rule$2 = rule;\n\nconst SAFE_COMMENT_NEIGHBOR = {\n  empty: true,\n  space: true\n};\n\nfunction findLastWithPosition(tokens) {\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    let token = tokens[i];\n    let pos = token[3] || token[2];\n    if (pos) return pos\n  }\n}\n\nlet Parser$1 = class Parser {\n  constructor(input) {\n    this.input = input;\n\n    this.root = new Root$4();\n    this.current = this.root;\n    this.spaces = '';\n    this.semicolon = false;\n\n    this.createTokenizer();\n    this.root.source = { input, start: { column: 1, line: 1, offset: 0 } };\n  }\n\n  atrule(token) {\n    let node = new AtRule$2();\n    node.name = token[1].slice(1);\n    if (node.name === '') {\n      this.unnamedAtrule(node, token);\n    }\n    this.init(node, token[2]);\n\n    let type;\n    let prev;\n    let shift;\n    let last = false;\n    let open = false;\n    let params = [];\n    let brackets = [];\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken();\n      type = token[0];\n\n      if (type === '(' || type === '[') {\n        brackets.push(type === '(' ? ')' : ']');\n      } else if (type === '{' && brackets.length > 0) {\n        brackets.push('}');\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop();\n      }\n\n      if (brackets.length === 0) {\n        if (type === ';') {\n          node.source.end = this.getPosition(token[2]);\n          node.source.end.offset++;\n          this.semicolon = true;\n          break\n        } else if (type === '{') {\n          open = true;\n          break\n        } else if (type === '}') {\n          if (params.length > 0) {\n            shift = params.length - 1;\n            prev = params[shift];\n            while (prev && prev[0] === 'space') {\n              prev = params[--shift];\n            }\n            if (prev) {\n              node.source.end = this.getPosition(prev[3] || prev[2]);\n              node.source.end.offset++;\n            }\n          }\n          this.end(token);\n          break\n        } else {\n          params.push(token);\n        }\n      } else {\n        params.push(token);\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true;\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params);\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params);\n      this.raw(node, 'params', params);\n      if (last) {\n        token = params[params.length - 1];\n        node.source.end = this.getPosition(token[3] || token[2]);\n        node.source.end.offset++;\n        this.spaces = node.raws.between;\n        node.raws.between = '';\n      }\n    } else {\n      node.raws.afterName = '';\n      node.params = '';\n    }\n\n    if (open) {\n      node.nodes = [];\n      this.current = node;\n    }\n  }\n\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens);\n    if (colon === false) return\n\n    let founded = 0;\n    let token;\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j];\n      if (token[0] !== 'space') {\n        founded += 1;\n        if (founded === 2) break\n      }\n    }\n    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n    // And because we need it after that one we do +1 to get the next one.\n    throw this.input.error(\n      'Missed semicolon',\n      token[0] === 'word' ? token[3] + 1 : token[2]\n    )\n  }\n\n  colon(tokens) {\n    let brackets = 0;\n    let token, type, prev;\n    for (let [i, element] of tokens.entries()) {\n      token = element;\n      type = token[0];\n\n      if (type === '(') {\n        brackets += 1;\n      }\n      if (type === ')') {\n        brackets -= 1;\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token);\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token;\n    }\n    return false\n  }\n\n  comment(token) {\n    let node = new Comment$2();\n    this.init(node, token[2]);\n    node.source.end = this.getPosition(token[3] || token[2]);\n    node.source.end.offset++;\n\n    let text = token[1].slice(2, -2);\n    if (/^\\s*$/.test(text)) {\n      node.text = '';\n      node.raws.left = text;\n      node.raws.right = '';\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/);\n      node.text = match[2];\n      node.raws.left = match[1];\n      node.raws.right = match[3];\n    }\n  }\n\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input);\n  }\n\n  decl(tokens, customProperty) {\n    let node = new Declaration$2();\n    this.init(node, tokens[0][2]);\n\n    let last = tokens[tokens.length - 1];\n    if (last[0] === ';') {\n      this.semicolon = true;\n      tokens.pop();\n    }\n\n    node.source.end = this.getPosition(\n      last[3] || last[2] || findLastWithPosition(tokens)\n    );\n    node.source.end.offset++;\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens);\n      node.raws.before += tokens.shift()[1];\n    }\n    node.source.start = this.getPosition(tokens[0][2]);\n\n    node.prop = '';\n    while (tokens.length) {\n      let type = tokens[0][0];\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1];\n    }\n\n    node.raws.between = '';\n\n    let token;\n    while (tokens.length) {\n      token = tokens.shift();\n\n      if (token[0] === ':') {\n        node.raws.between += token[1];\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token]);\n        }\n        node.raws.between += token[1];\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0];\n      node.prop = node.prop.slice(1);\n    }\n\n    let firstSpaces = [];\n    let next;\n    while (tokens.length) {\n      next = tokens[0][0];\n      if (next !== 'space' && next !== 'comment') break\n      firstSpaces.push(tokens.shift());\n    }\n\n    this.precheckMissedSemicolon(tokens);\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i];\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true;\n        let string = this.stringFrom(tokens, i);\n        string = this.spacesFromEnd(tokens) + string;\n        if (string !== ' !important') node.raws.important = string;\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0);\n        let str = '';\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0];\n          if (str.trim().indexOf('!') === 0 && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str;\n        }\n        if (str.trim().indexOf('!') === 0) {\n          node.important = true;\n          node.raws.important = str;\n          tokens = cache;\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment');\n\n    if (hasWord) {\n      node.raws.between += firstSpaces.map(i => i[1]).join('');\n      firstSpaces = [];\n    }\n    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty);\n\n    if (node.value.includes(':') && !customProperty) {\n      this.checkMissedSemicolon(tokens);\n    }\n  }\n\n  doubleColon(token) {\n    throw this.input.error(\n      'Double colon',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  emptyRule(token) {\n    let node = new Rule$2();\n    this.init(node, token[2]);\n    node.selector = '';\n    node.raws.between = '';\n    this.current = node;\n  }\n\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon;\n    }\n    this.semicolon = false;\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n    this.spaces = '';\n\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2]);\n      this.current.source.end.offset++;\n      this.current = this.current.parent;\n    } else {\n      this.unexpectedClose(token);\n    }\n  }\n\n  endFile() {\n    if (this.current.parent) this.unclosedBlock();\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon;\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces;\n    this.root.source.end = this.getPosition(this.tokenizer.position());\n  }\n\n  freeSemicolon(token) {\n    this.spaces += token[1];\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1];\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces;\n        this.spaces = '';\n      }\n    }\n  }\n\n  // Helpers\n\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset);\n    return {\n      column: pos.col,\n      line: pos.line,\n      offset\n    }\n  }\n\n  init(node, offset) {\n    this.current.push(node);\n    node.source = {\n      input: this.input,\n      start: this.getPosition(offset)\n    };\n    node.raws.before = this.spaces;\n    this.spaces = '';\n    if (node.type !== 'comment') this.semicolon = false;\n  }\n\n  other(start) {\n    let end = false;\n    let type = null;\n    let colon = false;\n    let bracket = null;\n    let brackets = [];\n    let customProperty = start[1].startsWith('--');\n\n    let tokens = [];\n    let token = start;\n    while (token) {\n      type = token[0];\n      tokens.push(token);\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token;\n        brackets.push(type === '(' ? ')' : ']');\n      } else if (customProperty && colon && type === '{') {\n        if (!bracket) bracket = token;\n        brackets.push('}');\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens, customProperty);\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens);\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop());\n          end = true;\n          break\n        } else if (type === ':') {\n          colon = true;\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop();\n        if (brackets.length === 0) bracket = null;\n      }\n\n      token = this.tokenizer.nextToken();\n    }\n\n    if (this.tokenizer.endOfFile()) end = true;\n    if (brackets.length > 0) this.unclosedBracket(bracket);\n\n    if (end && colon) {\n      if (!customProperty) {\n        while (tokens.length) {\n          token = tokens[tokens.length - 1][0];\n          if (token !== 'space' && token !== 'comment') break\n          this.tokenizer.back(tokens.pop());\n        }\n      }\n      this.decl(tokens, customProperty);\n    } else {\n      this.unknownWord(tokens);\n    }\n  }\n\n  parse() {\n    let token;\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken();\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1];\n          break\n\n        case ';':\n          this.freeSemicolon(token);\n          break\n\n        case '}':\n          this.end(token);\n          break\n\n        case 'comment':\n          this.comment(token);\n          break\n\n        case 'at-word':\n          this.atrule(token);\n          break\n\n        case '{':\n          this.emptyRule(token);\n          break\n\n        default:\n          this.other(token);\n          break\n      }\n    }\n    this.endFile();\n  }\n\n  precheckMissedSemicolon(/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  raw(node, prop, tokens, customProperty) {\n    let token, type;\n    let length = tokens.length;\n    let value = '';\n    let clean = true;\n    let next, prev;\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i];\n      type = token[0];\n      if (type === 'space' && i === length - 1 && !customProperty) {\n        clean = false;\n      } else if (type === 'comment') {\n        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty';\n        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty';\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n          if (value.slice(-1) === ',') {\n            clean = false;\n          } else {\n            value += token[1];\n          }\n        } else {\n          clean = false;\n        }\n      } else {\n        value += token[1];\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '');\n      node.raws[prop] = { raw, value };\n    }\n    node[prop] = value;\n  }\n\n  rule(tokens) {\n    tokens.pop();\n\n    let node = new Rule$2();\n    this.init(node, tokens[0][2]);\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens);\n    this.raw(node, 'selector', tokens);\n    this.current = node;\n  }\n\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType;\n    let spaces = '';\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0];\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces;\n    }\n    return spaces\n  }\n\n  // Errors\n\n  spacesAndCommentsFromStart(tokens) {\n    let next;\n    let spaces = '';\n    while (tokens.length) {\n      next = tokens[0][0];\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1];\n    }\n    return spaces\n  }\n\n  spacesFromEnd(tokens) {\n    let lastTokenType;\n    let spaces = '';\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0];\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces;\n    }\n    return spaces\n  }\n\n  stringFrom(tokens, from) {\n    let result = '';\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1];\n    }\n    tokens.splice(from, tokens.length - from);\n    return result\n  }\n\n  unclosedBlock() {\n    let pos = this.current.source.start;\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      'Unclosed bracket',\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    )\n  }\n\n  unexpectedClose(token) {\n    throw this.input.error(\n      'Unexpected }',\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    )\n  }\n\n  unknownWord(tokens) {\n    throw this.input.error(\n      'Unknown word',\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    )\n  }\n\n  unnamedAtrule(node, token) {\n    throw this.input.error(\n      'At-rule without name',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n};\n\nvar parser$1 = Parser$1;\n\nlet Container$2 = container$1;\nlet Parser = parser$1;\nlet Input$2 = input;\n\nfunction parse$3(css, opts) {\n  let input = new Input$2(css, opts);\n  let parser = new Parser(input);\n  try {\n    parser.parse();\n  } catch (e) {\n    if (browser$1.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser';\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser';\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser';\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nvar parse_1 = parse$3;\nparse$3.default = parse$3;\n\nContainer$2.registerParse(parse$3);\n\nlet { isClean, my } = symbols;\nlet MapGenerator$1 = mapGenerator;\nlet stringify$2 = stringify_1;\nlet Container$1 = container$1;\nlet Document$2 = document;\nlet warnOnce$1 = warnOnce$2;\nlet Result$2 = result;\nlet parse$2 = parse_1;\nlet Root$3 = root$2;\n\nconst TYPE_TO_CLASS_NAME = {\n  atrule: 'AtRule',\n  comment: 'Comment',\n  decl: 'Declaration',\n  document: 'Document',\n  root: 'Root',\n  rule: 'Rule'\n};\n\nconst PLUGIN_PROPS = {\n  AtRule: true,\n  AtRuleExit: true,\n  Comment: true,\n  CommentExit: true,\n  Declaration: true,\n  DeclarationExit: true,\n  Document: true,\n  DocumentExit: true,\n  Once: true,\n  OnceExit: true,\n  postcssPlugin: true,\n  prepare: true,\n  Root: true,\n  RootExit: true,\n  Rule: true,\n  RuleExit: true\n};\n\nconst NOT_VISITORS = {\n  Once: true,\n  postcssPlugin: true,\n  prepare: true\n};\n\nconst CHILDREN = 0;\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false;\n  let type = TYPE_TO_CLASS_NAME[node.type];\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase();\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase();\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events;\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit'];\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit'];\n  } else {\n    events = getEvents(node);\n  }\n\n  return {\n    eventIndex: 0,\n    events,\n    iterator: 0,\n    node,\n    visitorIndex: 0,\n    visitors: []\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false;\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i));\n  return node\n}\n\nlet postcss$2 = {};\n\nlet LazyResult$2 = class LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false;\n    this.processed = false;\n\n    let root;\n    if (\n      typeof css === 'object' &&\n      css !== null &&\n      (css.type === 'root' || css.type === 'document')\n    ) {\n      root = cleanMarks(css);\n    } else if (css instanceof LazyResult || css instanceof Result$2) {\n      root = cleanMarks(css.root);\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {};\n        if (!opts.map.inline) opts.map.inline = false;\n        opts.map.prev = css.map;\n      }\n    } else {\n      let parser = parse$2;\n      if (opts.syntax) parser = opts.syntax.parse;\n      if (opts.parser) parser = opts.parser;\n      if (parser.parse) parser = parser.parse;\n\n      try {\n        root = parser(css, opts);\n      } catch (error) {\n        this.processed = true;\n        this.error = error;\n      }\n\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container$1.rebuild(root);\n      }\n    }\n\n    this.result = new Result$2(processor, root, opts);\n    this.helpers = { ...postcss$2, postcss: postcss$2, result: this.result };\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    });\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync();\n    }\n    return this.processing\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin;\n    try {\n      if (node) node.addToError(error);\n      this.error = error;\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin;\n        error.setMessage();\n      } else if (plugin.postcssVersion) {\n        if (browser$1.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin;\n          let pluginVer = plugin.postcssVersion;\n          let runtimeVer = this.result.processor.version;\n          let a = pluginVer.split('.');\n          let b = runtimeVer.split('.');\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            );\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err);\n    }\n    return error\n  }\n\n  prepareVisitors() {\n    this.listeners = {};\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = [];\n      this.listeners[type].push([plugin, cb]);\n    };\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter]);\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  );\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event]);\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0;\n  }\n\n  async runAsync() {\n    this.plugin = 0;\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i];\n      let promise = this.runOnRoot(plugin);\n      if (isPromise(promise)) {\n        try {\n          await promise;\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors();\n    if (this.hasListener) {\n      let root = this.result.root;\n      while (!root[isClean]) {\n        root[isClean] = true;\n        let stack = [toStack(root)];\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack);\n          if (isPromise(promise)) {\n            try {\n              await promise;\n            } catch (e) {\n              let node = stack[stack.length - 1].node;\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin;\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot =>\n                visitor(subRoot, this.helpers)\n              );\n\n              await Promise.all(roots);\n            } else {\n              await visitor(root, this.helpers);\n            }\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true;\n    return this.stringify()\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin;\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root =>\n            plugin.Once(root, this.helpers)\n          );\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots)\n          }\n\n          return roots\n        }\n\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true;\n\n    this.sync();\n\n    let opts = this.result.opts;\n    let str = stringify$2;\n    if (opts.syntax) str = opts.syntax.stringify;\n    if (opts.stringifier) str = opts.stringifier;\n    if (str.stringify) str = str.stringify;\n\n    let map = new MapGenerator$1(str, this.result.root, this.result.opts);\n    let data = map.generate();\n    this.result.css = data[0];\n    this.result.map = data[1];\n\n    return this.result\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true;\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin);\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors();\n    if (this.hasListener) {\n      let root = this.result.root;\n      while (!root[isClean]) {\n        root[isClean] = true;\n        this.walkSync(root);\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot);\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root);\n        }\n      }\n    }\n\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (browser$1.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce$1(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        );\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this.css\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin;\n      let promise;\n      try {\n        promise = visitor(node, this.helpers);\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1];\n    let { node, visitors } = visit;\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop();\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex];\n      visit.visitorIndex += 1;\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = [];\n        visit.visitorIndex = 0;\n      }\n      this.result.lastPlugin = plugin;\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator;\n      let child;\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1;\n        if (!child[isClean]) {\n          child[isClean] = true;\n          stack.push(toStack(child));\n          return\n        }\n      }\n      visit.iterator = 0;\n      delete node.indexes[iterator];\n    }\n\n    let events = visit.events;\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex];\n      visit.eventIndex += 1;\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true;\n          visit.iterator = node.getIterator();\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event];\n        return\n      }\n    }\n    stack.pop();\n  }\n\n  walkSync(node) {\n    node[isClean] = true;\n    let events = getEvents(node);\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child);\n          });\n        }\n      } else {\n        let visitors = this.listeners[event];\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n\n  get content() {\n    return this.stringify().content\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n};\n\nLazyResult$2.registerPostcss = dependant => {\n  postcss$2 = dependant;\n};\n\nvar lazyResult = LazyResult$2;\nLazyResult$2.default = LazyResult$2;\n\nRoot$3.registerLazyResult(LazyResult$2);\nDocument$2.registerLazyResult(LazyResult$2);\n\nlet MapGenerator = mapGenerator;\nlet stringify$1 = stringify_1;\nlet warnOnce = warnOnce$2;\nlet parse$1 = parse_1;\nconst Result$1 = result;\n\nlet NoWorkResult$1 = class NoWorkResult {\n  constructor(processor, css, opts) {\n    css = css.toString();\n    this.stringified = false;\n\n    this._processor = processor;\n    this._css = css;\n    this._opts = opts;\n    this._map = undefined;\n    let root;\n\n    let str = stringify$1;\n    this.result = new Result$1(this._processor, root, this._opts);\n    this.result.css = css;\n\n    let self = this;\n    Object.defineProperty(this.result, 'root', {\n      get() {\n        return self.root\n      }\n    });\n\n    let map = new MapGenerator(str, root, this._opts, css);\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate();\n      if (generatedCSS) {\n        this.result.css = generatedCSS;\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap;\n      }\n    } else {\n      map.clearAnnotation();\n      this.result.css = map.css;\n    }\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    return Promise.resolve(this.result)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (browser$1.env.NODE_ENV !== 'production') {\n      if (!('from' in this._opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        );\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this._css\n  }\n\n  warnings() {\n    return []\n  }\n\n  get content() {\n    return this.result.css\n  }\n\n  get css() {\n    return this.result.css\n  }\n\n  get map() {\n    return this.result.map\n  }\n\n  get messages() {\n    return []\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    if (this._root) {\n      return this._root\n    }\n\n    let root;\n    let parser = parse$1;\n\n    try {\n      root = parser(this._css, this._opts);\n    } catch (error) {\n      this.error = error;\n    }\n\n    if (this.error) {\n      throw this.error\n    } else {\n      this._root = root;\n      return root\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'NoWorkResult'\n  }\n};\n\nvar noWorkResult = NoWorkResult$1;\nNoWorkResult$1.default = NoWorkResult$1;\n\nlet NoWorkResult = noWorkResult;\nlet LazyResult$1 = lazyResult;\nlet Document$1 = document;\nlet Root$2 = root$2;\n\nlet Processor$1 = class Processor {\n  constructor(plugins = []) {\n    this.version = '8.4.38';\n    this.plugins = this.normalize(plugins);\n  }\n\n  normalize(plugins) {\n    let normalized = [];\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i();\n      } else if (i.postcss) {\n        i = i.postcss;\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins);\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i);\n      } else if (typeof i === 'function') {\n        normalized.push(i);\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (browser$1.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n              'one of the syntax/parser/stringifier options as outlined ' +\n              'in your PostCSS runner documentation.'\n          )\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n\n  process(css, opts = {}) {\n    if (\n      !this.plugins.length &&\n      !opts.parser &&\n      !opts.stringifier &&\n      !opts.syntax\n    ) {\n      return new NoWorkResult(this, css, opts)\n    } else {\n      return new LazyResult$1(this, css, opts)\n    }\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]));\n    return this\n  }\n};\n\nvar processor$1 = Processor$1;\nProcessor$1.default = Processor$1;\n\nRoot$2.registerProcessor(Processor$1);\nDocument$1.registerProcessor(Processor$1);\n\nlet Declaration$1 = declaration;\nlet PreviousMap = previousMap;\nlet Comment$1 = comment$3;\nlet AtRule$1 = atRule;\nlet Input$1 = input;\nlet Root$1 = root$2;\nlet Rule$1 = rule;\n\nfunction fromJSON$1(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON$1(n))\n\n  let { inputs: ownInputs, ...defaults } = json;\n  if (ownInputs) {\n    inputs = [];\n    for (let input of ownInputs) {\n      let inputHydrated = { ...input, __proto__: Input$1.prototype };\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap.prototype\n        };\n      }\n      inputs.push(inputHydrated);\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON$1(n, inputs));\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source;\n    defaults.source = source;\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId];\n    }\n  }\n  if (defaults.type === 'root') {\n    return new Root$1(defaults)\n  } else if (defaults.type === 'decl') {\n    return new Declaration$1(defaults)\n  } else if (defaults.type === 'rule') {\n    return new Rule$1(defaults)\n  } else if (defaults.type === 'comment') {\n    return new Comment$1(defaults)\n  } else if (defaults.type === 'atrule') {\n    return new AtRule$1(defaults)\n  } else {\n    throw new Error('Unknown node type: ' + json.type)\n  }\n}\n\nvar fromJSON_1 = fromJSON$1;\nfromJSON$1.default = fromJSON$1;\n\nlet CssSyntaxError = cssSyntaxError;\nlet Declaration = declaration;\nlet LazyResult = lazyResult;\nlet Container = container$1;\nlet Processor = processor$1;\nlet stringify = stringify_1;\nlet fromJSON = fromJSON_1;\nlet Document = document;\nlet Warning = warning;\nlet Comment = comment$3;\nlet AtRule = atRule;\nlet Result = result;\nlet Input = input;\nlet parse = parse_1;\nlet list = list_1;\nlet Rule = rule;\nlet Root = root$2;\nlet Node = node$2;\n\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0];\n  }\n  return new Processor(plugins)\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  let warningPrinted = false;\n  function creator(...args) {\n    // eslint-disable-next-line no-console\n    if (console && console.warn && !warningPrinted) {\n      warningPrinted = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        name +\n          ': postcss.plugin was deprecated. Migration guide:\\n' +\n          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n      );\n      if (browser$1.env.LANG && browser$1.env.LANG.startsWith('cn')) {\n        /* c8 ignore next 7 */\n        // eslint-disable-next-line no-console\n        console.warn(\n          name +\n            ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\n            'https://www.w3ctech.com/topic/2226'\n        );\n      }\n    }\n    let transformer = initializer(...args);\n    transformer.postcssPlugin = name;\n    transformer.postcssVersion = new Processor().version;\n    return transformer\n  }\n\n  let cache;\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator();\n      return cache\n    }\n  });\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  };\n\n  return creator\n};\n\npostcss.stringify = stringify;\npostcss.parse = parse;\npostcss.fromJSON = fromJSON;\npostcss.list = list;\n\npostcss.comment = defaults => new Comment(defaults);\npostcss.atRule = defaults => new AtRule(defaults);\npostcss.decl = defaults => new Declaration(defaults);\npostcss.rule = defaults => new Rule(defaults);\npostcss.root = defaults => new Root(defaults);\npostcss.document = defaults => new Document(defaults);\n\npostcss.CssSyntaxError = CssSyntaxError;\npostcss.Declaration = Declaration;\npostcss.Container = Container;\npostcss.Processor = Processor;\npostcss.Document = Document;\npostcss.Comment = Comment;\npostcss.Warning = Warning;\npostcss.AtRule = AtRule;\npostcss.Result = Result;\npostcss.Input = Input;\npostcss.Rule = Rule;\npostcss.Root = Root;\npostcss.Node = Node;\n\nLazyResult.registerPostcss(postcss);\n\nvar postcss_1 = postcss;\npostcss.default = postcss;\n\nvar postcss$1 = /*@__PURE__*/getDefaultExportFromCjs(postcss_1);\n\npostcss$1.stringify;\npostcss$1.fromJSON;\npostcss$1.plugin;\npostcss$1.parse;\npostcss$1.list;\n\npostcss$1.document;\npostcss$1.comment;\npostcss$1.atRule;\npostcss$1.rule;\npostcss$1.decl;\npostcss$1.root;\n\npostcss$1.CssSyntaxError;\npostcss$1.Declaration;\npostcss$1.Container;\npostcss$1.Processor;\npostcss$1.Document;\npostcss$1.Comment;\npostcss$1.Warning;\npostcss$1.AtRule;\npostcss$1.Result;\npostcss$1.Input;\npostcss$1.Rule;\npostcss$1.Root;\npostcss$1.Node;\n\nconst trimPlugin = () => {\n  return {\n    postcssPlugin: \"vue-sfc-trim\",\n    Once(root) {\n      root.walk(({ type, raws }) => {\n        if (type === \"rule\" || type === \"atrule\") {\n          if (raws.before)\n            raws.before = \"\\n\";\n          if (\"after\" in raws && raws.after)\n            raws.after = \"\\n\";\n        }\n      });\n    }\n  };\n};\ntrimPlugin.postcss = true;\n\nvar dist = {exports: {}};\n\nvar processor = {exports: {}};\n\nvar parser = {exports: {}};\n\nvar root$1 = {exports: {}};\n\nvar container = {exports: {}};\n\nvar node$1 = {exports: {}};\n\nvar util$6 = {};\n\nvar unesc = {exports: {}};\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = unesc;\n\t// Many thanks for this post which made this migration much easier.\n\t// https://mathiasbynens.be/notes/css-escapes\n\n\t/**\n\t * \n\t * @param {string} str \n\t * @returns {[string, number]|undefined}\n\t */\n\tfunction gobbleHex(str) {\n\t  var lower = str.toLowerCase();\n\t  var hex = '';\n\t  var spaceTerminated = false;\n\t  for (var i = 0; i < 6 && lower[i] !== undefined; i++) {\n\t    var code = lower.charCodeAt(i);\n\t    // check to see if we are dealing with a valid hex char [a-f|0-9]\n\t    var valid = code >= 97 && code <= 102 || code >= 48 && code <= 57;\n\t    // https://drafts.csswg.org/css-syntax/#consume-escaped-code-point\n\t    spaceTerminated = code === 32;\n\t    if (!valid) {\n\t      break;\n\t    }\n\t    hex += lower[i];\n\t  }\n\t  if (hex.length === 0) {\n\t    return undefined;\n\t  }\n\t  var codePoint = parseInt(hex, 16);\n\t  var isSurrogate = codePoint >= 0xD800 && codePoint <= 0xDFFF;\n\t  // Add special case for\n\t  // \"If this number is zero, or is for a surrogate, or is greater than the maximum allowed code point\"\n\t  // https://drafts.csswg.org/css-syntax/#maximum-allowed-code-point\n\t  if (isSurrogate || codePoint === 0x0000 || codePoint > 0x10FFFF) {\n\t    return [\"\\uFFFD\", hex.length + (spaceTerminated ? 1 : 0)];\n\t  }\n\t  return [String.fromCodePoint(codePoint), hex.length + (spaceTerminated ? 1 : 0)];\n\t}\n\tvar CONTAINS_ESCAPE = /\\\\/;\n\tfunction unesc(str) {\n\t  var needToProcess = CONTAINS_ESCAPE.test(str);\n\t  if (!needToProcess) {\n\t    return str;\n\t  }\n\t  var ret = \"\";\n\t  for (var i = 0; i < str.length; i++) {\n\t    if (str[i] === \"\\\\\") {\n\t      var gobbled = gobbleHex(str.slice(i + 1, i + 7));\n\t      if (gobbled !== undefined) {\n\t        ret += gobbled[0];\n\t        i += gobbled[1];\n\t        continue;\n\t      }\n\n\t      // Retain a pair of \\\\ if double escaped `\\\\\\\\`\n\t      // https://github.com/postcss/postcss-selector-parser/commit/268c9a7656fb53f543dc620aa5b73a30ec3ff20e\n\t      if (str[i + 1] === \"\\\\\") {\n\t        ret += \"\\\\\";\n\t        i++;\n\t        continue;\n\t      }\n\n\t      // if \\\\ is at the end of the string retain it\n\t      // https://github.com/postcss/postcss-selector-parser/commit/01a6b346e3612ce1ab20219acc26abdc259ccefb\n\t      if (str.length === i + 1) {\n\t        ret += str[i];\n\t      }\n\t      continue;\n\t    }\n\t    ret += str[i];\n\t  }\n\t  return ret;\n\t}\n\tmodule.exports = exports.default; \n} (unesc, unesc.exports));\n\nvar unescExports = unesc.exports;\n\nvar getProp = {exports: {}};\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = getProp;\n\tfunction getProp(obj) {\n\t  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t    props[_key - 1] = arguments[_key];\n\t  }\n\t  while (props.length > 0) {\n\t    var prop = props.shift();\n\t    if (!obj[prop]) {\n\t      return undefined;\n\t    }\n\t    obj = obj[prop];\n\t  }\n\t  return obj;\n\t}\n\tmodule.exports = exports.default; \n} (getProp, getProp.exports));\n\nvar getPropExports = getProp.exports;\n\nvar ensureObject = {exports: {}};\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = ensureObject;\n\tfunction ensureObject(obj) {\n\t  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t    props[_key - 1] = arguments[_key];\n\t  }\n\t  while (props.length > 0) {\n\t    var prop = props.shift();\n\t    if (!obj[prop]) {\n\t      obj[prop] = {};\n\t    }\n\t    obj = obj[prop];\n\t  }\n\t}\n\tmodule.exports = exports.default; \n} (ensureObject, ensureObject.exports));\n\nvar ensureObjectExports = ensureObject.exports;\n\nvar stripComments = {exports: {}};\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = stripComments;\n\tfunction stripComments(str) {\n\t  var s = \"\";\n\t  var commentStart = str.indexOf(\"/*\");\n\t  var lastEnd = 0;\n\t  while (commentStart >= 0) {\n\t    s = s + str.slice(lastEnd, commentStart);\n\t    var commentEnd = str.indexOf(\"*/\", commentStart + 2);\n\t    if (commentEnd < 0) {\n\t      return s;\n\t    }\n\t    lastEnd = commentEnd + 2;\n\t    commentStart = str.indexOf(\"/*\", lastEnd);\n\t  }\n\t  s = s + str.slice(lastEnd);\n\t  return s;\n\t}\n\tmodule.exports = exports.default; \n} (stripComments, stripComments.exports));\n\nvar stripCommentsExports = stripComments.exports;\n\nutil$6.__esModule = true;\nutil$6.unesc = util$6.stripComments = util$6.getProp = util$6.ensureObject = void 0;\nvar _unesc = _interopRequireDefault$1(unescExports);\nutil$6.unesc = _unesc[\"default\"];\nvar _getProp = _interopRequireDefault$1(getPropExports);\nutil$6.getProp = _getProp[\"default\"];\nvar _ensureObject = _interopRequireDefault$1(ensureObjectExports);\nutil$6.ensureObject = _ensureObject[\"default\"];\nvar _stripComments = _interopRequireDefault$1(stripCommentsExports);\nutil$6.stripComments = _stripComments[\"default\"];\nfunction _interopRequireDefault$1(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\tvar _util = util$6;\n\tfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\tfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\tvar cloneNode = function cloneNode(obj, parent) {\n\t  if (typeof obj !== 'object' || obj === null) {\n\t    return obj;\n\t  }\n\t  var cloned = new obj.constructor();\n\t  for (var i in obj) {\n\t    if (!obj.hasOwnProperty(i)) {\n\t      continue;\n\t    }\n\t    var value = obj[i];\n\t    var type = typeof value;\n\t    if (i === 'parent' && type === 'object') {\n\t      if (parent) {\n\t        cloned[i] = parent;\n\t      }\n\t    } else if (value instanceof Array) {\n\t      cloned[i] = value.map(function (j) {\n\t        return cloneNode(j, cloned);\n\t      });\n\t    } else {\n\t      cloned[i] = cloneNode(value, cloned);\n\t    }\n\t  }\n\t  return cloned;\n\t};\n\tvar Node = /*#__PURE__*/function () {\n\t  function Node(opts) {\n\t    if (opts === void 0) {\n\t      opts = {};\n\t    }\n\t    Object.assign(this, opts);\n\t    this.spaces = this.spaces || {};\n\t    this.spaces.before = this.spaces.before || '';\n\t    this.spaces.after = this.spaces.after || '';\n\t  }\n\t  var _proto = Node.prototype;\n\t  _proto.remove = function remove() {\n\t    if (this.parent) {\n\t      this.parent.removeChild(this);\n\t    }\n\t    this.parent = undefined;\n\t    return this;\n\t  };\n\t  _proto.replaceWith = function replaceWith() {\n\t    if (this.parent) {\n\t      for (var index in arguments) {\n\t        this.parent.insertBefore(this, arguments[index]);\n\t      }\n\t      this.remove();\n\t    }\n\t    return this;\n\t  };\n\t  _proto.next = function next() {\n\t    return this.parent.at(this.parent.index(this) + 1);\n\t  };\n\t  _proto.prev = function prev() {\n\t    return this.parent.at(this.parent.index(this) - 1);\n\t  };\n\t  _proto.clone = function clone(overrides) {\n\t    if (overrides === void 0) {\n\t      overrides = {};\n\t    }\n\t    var cloned = cloneNode(this);\n\t    for (var name in overrides) {\n\t      cloned[name] = overrides[name];\n\t    }\n\t    return cloned;\n\t  }\n\n\t  /**\n\t   * Some non-standard syntax doesn't follow normal escaping rules for css.\n\t   * This allows non standard syntax to be appended to an existing property\n\t   * by specifying the escaped value. By specifying the escaped value,\n\t   * illegal characters are allowed to be directly inserted into css output.\n\t   * @param {string} name the property to set\n\t   * @param {any} value the unescaped value of the property\n\t   * @param {string} valueEscaped optional. the escaped value of the property.\n\t   */;\n\t  _proto.appendToPropertyAndEscape = function appendToPropertyAndEscape(name, value, valueEscaped) {\n\t    if (!this.raws) {\n\t      this.raws = {};\n\t    }\n\t    var originalValue = this[name];\n\t    var originalEscaped = this.raws[name];\n\t    this[name] = originalValue + value; // this may trigger a setter that updates raws, so it has to be set first.\n\t    if (originalEscaped || valueEscaped !== value) {\n\t      this.raws[name] = (originalEscaped || originalValue) + valueEscaped;\n\t    } else {\n\t      delete this.raws[name]; // delete any escaped value that was created by the setter.\n\t    }\n\t  }\n\n\t  /**\n\t   * Some non-standard syntax doesn't follow normal escaping rules for css.\n\t   * This allows the escaped value to be specified directly, allowing illegal\n\t   * characters to be directly inserted into css output.\n\t   * @param {string} name the property to set\n\t   * @param {any} value the unescaped value of the property\n\t   * @param {string} valueEscaped the escaped value of the property.\n\t   */;\n\t  _proto.setPropertyAndEscape = function setPropertyAndEscape(name, value, valueEscaped) {\n\t    if (!this.raws) {\n\t      this.raws = {};\n\t    }\n\t    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\n\t    this.raws[name] = valueEscaped;\n\t  }\n\n\t  /**\n\t   * When you want a value to passed through to CSS directly. This method\n\t   * deletes the corresponding raw value causing the stringifier to fallback\n\t   * to the unescaped value.\n\t   * @param {string} name the property to set.\n\t   * @param {any} value The value that is both escaped and unescaped.\n\t   */;\n\t  _proto.setPropertyWithoutEscape = function setPropertyWithoutEscape(name, value) {\n\t    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\n\t    if (this.raws) {\n\t      delete this.raws[name];\n\t    }\n\t  }\n\n\t  /**\n\t   *\n\t   * @param {number} line The number (starting with 1)\n\t   * @param {number} column The column number (starting with 1)\n\t   */;\n\t  _proto.isAtPosition = function isAtPosition(line, column) {\n\t    if (this.source && this.source.start && this.source.end) {\n\t      if (this.source.start.line > line) {\n\t        return false;\n\t      }\n\t      if (this.source.end.line < line) {\n\t        return false;\n\t      }\n\t      if (this.source.start.line === line && this.source.start.column > column) {\n\t        return false;\n\t      }\n\t      if (this.source.end.line === line && this.source.end.column < column) {\n\t        return false;\n\t      }\n\t      return true;\n\t    }\n\t    return undefined;\n\t  };\n\t  _proto.stringifyProperty = function stringifyProperty(name) {\n\t    return this.raws && this.raws[name] || this[name];\n\t  };\n\t  _proto.valueToString = function valueToString() {\n\t    return String(this.stringifyProperty(\"value\"));\n\t  };\n\t  _proto.toString = function toString() {\n\t    return [this.rawSpaceBefore, this.valueToString(), this.rawSpaceAfter].join('');\n\t  };\n\t  _createClass(Node, [{\n\t    key: \"rawSpaceBefore\",\n\t    get: function get() {\n\t      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.before;\n\t      if (rawSpace === undefined) {\n\t        rawSpace = this.spaces && this.spaces.before;\n\t      }\n\t      return rawSpace || \"\";\n\t    },\n\t    set: function set(raw) {\n\t      (0, _util.ensureObject)(this, \"raws\", \"spaces\");\n\t      this.raws.spaces.before = raw;\n\t    }\n\t  }, {\n\t    key: \"rawSpaceAfter\",\n\t    get: function get() {\n\t      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.after;\n\t      if (rawSpace === undefined) {\n\t        rawSpace = this.spaces.after;\n\t      }\n\t      return rawSpace || \"\";\n\t    },\n\t    set: function set(raw) {\n\t      (0, _util.ensureObject)(this, \"raws\", \"spaces\");\n\t      this.raws.spaces.after = raw;\n\t    }\n\t  }]);\n\t  return Node;\n\t}();\n\texports[\"default\"] = Node;\n\tmodule.exports = exports.default; \n} (node$1, node$1.exports));\n\nvar nodeExports = node$1.exports;\n\nvar types = {};\n\ntypes.__esModule = true;\ntypes.UNIVERSAL = types.TAG = types.STRING = types.SELECTOR = types.ROOT = types.PSEUDO = types.NESTING = types.ID = types.COMMENT = types.COMBINATOR = types.CLASS = types.ATTRIBUTE = void 0;\nvar TAG = 'tag';\ntypes.TAG = TAG;\nvar STRING = 'string';\ntypes.STRING = STRING;\nvar SELECTOR = 'selector';\ntypes.SELECTOR = SELECTOR;\nvar ROOT = 'root';\ntypes.ROOT = ROOT;\nvar PSEUDO = 'pseudo';\ntypes.PSEUDO = PSEUDO;\nvar NESTING = 'nesting';\ntypes.NESTING = NESTING;\nvar ID = 'id';\ntypes.ID = ID;\nvar COMMENT = 'comment';\ntypes.COMMENT = COMMENT;\nvar COMBINATOR = 'combinator';\ntypes.COMBINATOR = COMBINATOR;\nvar CLASS = 'class';\ntypes.CLASS = CLASS;\nvar ATTRIBUTE = 'attribute';\ntypes.ATTRIBUTE = ATTRIBUTE;\nvar UNIVERSAL = 'universal';\ntypes.UNIVERSAL = UNIVERSAL;\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\tvar _node = _interopRequireDefault(nodeExports);\n\tvar types$1 = _interopRequireWildcard(types);\n\tfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\tfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\tfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\tfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\tfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\tfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\tfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\tvar Container = /*#__PURE__*/function (_Node) {\n\t  _inheritsLoose(Container, _Node);\n\t  function Container(opts) {\n\t    var _this;\n\t    _this = _Node.call(this, opts) || this;\n\t    if (!_this.nodes) {\n\t      _this.nodes = [];\n\t    }\n\t    return _this;\n\t  }\n\t  var _proto = Container.prototype;\n\t  _proto.append = function append(selector) {\n\t    selector.parent = this;\n\t    this.nodes.push(selector);\n\t    return this;\n\t  };\n\t  _proto.prepend = function prepend(selector) {\n\t    selector.parent = this;\n\t    this.nodes.unshift(selector);\n\t    return this;\n\t  };\n\t  _proto.at = function at(index) {\n\t    return this.nodes[index];\n\t  };\n\t  _proto.index = function index(child) {\n\t    if (typeof child === 'number') {\n\t      return child;\n\t    }\n\t    return this.nodes.indexOf(child);\n\t  };\n\t  _proto.removeChild = function removeChild(child) {\n\t    child = this.index(child);\n\t    this.at(child).parent = undefined;\n\t    this.nodes.splice(child, 1);\n\t    var index;\n\t    for (var id in this.indexes) {\n\t      index = this.indexes[id];\n\t      if (index >= child) {\n\t        this.indexes[id] = index - 1;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  _proto.removeAll = function removeAll() {\n\t    for (var _iterator = _createForOfIteratorHelperLoose(this.nodes), _step; !(_step = _iterator()).done;) {\n\t      var node = _step.value;\n\t      node.parent = undefined;\n\t    }\n\t    this.nodes = [];\n\t    return this;\n\t  };\n\t  _proto.empty = function empty() {\n\t    return this.removeAll();\n\t  };\n\t  _proto.insertAfter = function insertAfter(oldNode, newNode) {\n\t    newNode.parent = this;\n\t    var oldIndex = this.index(oldNode);\n\t    this.nodes.splice(oldIndex + 1, 0, newNode);\n\t    newNode.parent = this;\n\t    var index;\n\t    for (var id in this.indexes) {\n\t      index = this.indexes[id];\n\t      if (oldIndex <= index) {\n\t        this.indexes[id] = index + 1;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  _proto.insertBefore = function insertBefore(oldNode, newNode) {\n\t    newNode.parent = this;\n\t    var oldIndex = this.index(oldNode);\n\t    this.nodes.splice(oldIndex, 0, newNode);\n\t    newNode.parent = this;\n\t    var index;\n\t    for (var id in this.indexes) {\n\t      index = this.indexes[id];\n\t      if (index <= oldIndex) {\n\t        this.indexes[id] = index + 1;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  _proto._findChildAtPosition = function _findChildAtPosition(line, col) {\n\t    var found = undefined;\n\t    this.each(function (node) {\n\t      if (node.atPosition) {\n\t        var foundChild = node.atPosition(line, col);\n\t        if (foundChild) {\n\t          found = foundChild;\n\t          return false;\n\t        }\n\t      } else if (node.isAtPosition(line, col)) {\n\t        found = node;\n\t        return false;\n\t      }\n\t    });\n\t    return found;\n\t  }\n\n\t  /**\n\t   * Return the most specific node at the line and column number given.\n\t   * The source location is based on the original parsed location, locations aren't\n\t   * updated as selector nodes are mutated.\n\t   * \n\t   * Note that this location is relative to the location of the first character\n\t   * of the selector, and not the location of the selector in the overall document\n\t   * when used in conjunction with postcss.\n\t   *\n\t   * If not found, returns undefined.\n\t   * @param {number} line The line number of the node to find. (1-based index)\n\t   * @param {number} col  The column number of the node to find. (1-based index)\n\t   */;\n\t  _proto.atPosition = function atPosition(line, col) {\n\t    if (this.isAtPosition(line, col)) {\n\t      return this._findChildAtPosition(line, col) || this;\n\t    } else {\n\t      return undefined;\n\t    }\n\t  };\n\t  _proto._inferEndPosition = function _inferEndPosition() {\n\t    if (this.last && this.last.source && this.last.source.end) {\n\t      this.source = this.source || {};\n\t      this.source.end = this.source.end || {};\n\t      Object.assign(this.source.end, this.last.source.end);\n\t    }\n\t  };\n\t  _proto.each = function each(callback) {\n\t    if (!this.lastEach) {\n\t      this.lastEach = 0;\n\t    }\n\t    if (!this.indexes) {\n\t      this.indexes = {};\n\t    }\n\t    this.lastEach++;\n\t    var id = this.lastEach;\n\t    this.indexes[id] = 0;\n\t    if (!this.length) {\n\t      return undefined;\n\t    }\n\t    var index, result;\n\t    while (this.indexes[id] < this.length) {\n\t      index = this.indexes[id];\n\t      result = callback(this.at(index), index);\n\t      if (result === false) {\n\t        break;\n\t      }\n\t      this.indexes[id] += 1;\n\t    }\n\t    delete this.indexes[id];\n\t    if (result === false) {\n\t      return false;\n\t    }\n\t  };\n\t  _proto.walk = function walk(callback) {\n\t    return this.each(function (node, i) {\n\t      var result = callback(node, i);\n\t      if (result !== false && node.length) {\n\t        result = node.walk(callback);\n\t      }\n\t      if (result === false) {\n\t        return false;\n\t      }\n\t    });\n\t  };\n\t  _proto.walkAttributes = function walkAttributes(callback) {\n\t    var _this2 = this;\n\t    return this.walk(function (selector) {\n\t      if (selector.type === types$1.ATTRIBUTE) {\n\t        return callback.call(_this2, selector);\n\t      }\n\t    });\n\t  };\n\t  _proto.walkClasses = function walkClasses(callback) {\n\t    var _this3 = this;\n\t    return this.walk(function (selector) {\n\t      if (selector.type === types$1.CLASS) {\n\t        return callback.call(_this3, selector);\n\t      }\n\t    });\n\t  };\n\t  _proto.walkCombinators = function walkCombinators(callback) {\n\t    var _this4 = this;\n\t    return this.walk(function (selector) {\n\t      if (selector.type === types$1.COMBINATOR) {\n\t        return callback.call(_this4, selector);\n\t      }\n\t    });\n\t  };\n\t  _proto.walkComments = function walkComments(callback) {\n\t    var _this5 = this;\n\t    return this.walk(function (selector) {\n\t      if (selector.type === types$1.COMMENT) {\n\t        return callback.call(_this5, selector);\n\t      }\n\t    });\n\t  };\n\t  _proto.walkIds = function walkIds(callback) {\n\t    var _this6 = this;\n\t    return this.walk(function (selector) {\n\t      if (selector.type === types$1.ID) {\n\t        return callback.call(_this6, selector);\n\t      }\n\t    });\n\t  };\n\t  _proto.walkNesting = function walkNesting(callback) {\n\t    var _this7 = this;\n\t    return this.walk(function (selector) {\n\t      if (selector.type === types$1.NESTING) {\n\t        return callback.call(_this7, selector);\n\t      }\n\t    });\n\t  };\n\t  _proto.walkPseudos = function walkPseudos(callback) {\n\t    var _this8 = this;\n\t    return this.walk(function (selector) {\n\t      if (selector.type === types$1.PSEUDO) {\n\t        return callback.call(_this8, selector);\n\t      }\n\t    });\n\t  };\n\t  _proto.walkTags = function walkTags(callback) {\n\t    var _this9 = this;\n\t    return this.walk(function (selector) {\n\t      if (selector.type === types$1.TAG) {\n\t        return callback.call(_this9, selector);\n\t      }\n\t    });\n\t  };\n\t  _proto.walkUniversals = function walkUniversals(callback) {\n\t    var _this10 = this;\n\t    return this.walk(function (selector) {\n\t      if (selector.type === types$1.UNIVERSAL) {\n\t        return callback.call(_this10, selector);\n\t      }\n\t    });\n\t  };\n\t  _proto.split = function split(callback) {\n\t    var _this11 = this;\n\t    var current = [];\n\t    return this.reduce(function (memo, node, index) {\n\t      var split = callback.call(_this11, node);\n\t      current.push(node);\n\t      if (split) {\n\t        memo.push(current);\n\t        current = [];\n\t      } else if (index === _this11.length - 1) {\n\t        memo.push(current);\n\t      }\n\t      return memo;\n\t    }, []);\n\t  };\n\t  _proto.map = function map(callback) {\n\t    return this.nodes.map(callback);\n\t  };\n\t  _proto.reduce = function reduce(callback, memo) {\n\t    return this.nodes.reduce(callback, memo);\n\t  };\n\t  _proto.every = function every(callback) {\n\t    return this.nodes.every(callback);\n\t  };\n\t  _proto.some = function some(callback) {\n\t    return this.nodes.some(callback);\n\t  };\n\t  _proto.filter = function filter(callback) {\n\t    return this.nodes.filter(callback);\n\t  };\n\t  _proto.sort = function sort(callback) {\n\t    return this.nodes.sort(callback);\n\t  };\n\t  _proto.toString = function toString() {\n\t    return this.map(String).join('');\n\t  };\n\t  _createClass(Container, [{\n\t    key: \"first\",\n\t    get: function get() {\n\t      return this.at(0);\n\t    }\n\t  }, {\n\t    key: \"last\",\n\t    get: function get() {\n\t      return this.at(this.length - 1);\n\t    }\n\t  }, {\n\t    key: \"length\",\n\t    get: function get() {\n\t      return this.nodes.length;\n\t    }\n\t  }]);\n\t  return Container;\n\t}(_node[\"default\"]);\n\texports[\"default\"] = Container;\n\tmodule.exports = exports.default; \n} (container, container.exports));\n\nvar containerExports = container.exports;\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\tvar _container = _interopRequireDefault(containerExports);\n\tvar _types = types;\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\tfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\tfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\tvar Root = /*#__PURE__*/function (_Container) {\n\t  _inheritsLoose(Root, _Container);\n\t  function Root(opts) {\n\t    var _this;\n\t    _this = _Container.call(this, opts) || this;\n\t    _this.type = _types.ROOT;\n\t    return _this;\n\t  }\n\t  var _proto = Root.prototype;\n\t  _proto.toString = function toString() {\n\t    var str = this.reduce(function (memo, selector) {\n\t      memo.push(String(selector));\n\t      return memo;\n\t    }, []).join(',');\n\t    return this.trailingComma ? str + ',' : str;\n\t  };\n\t  _proto.error = function error(message, options) {\n\t    if (this._error) {\n\t      return this._error(message, options);\n\t    } else {\n\t      return new Error(message);\n\t    }\n\t  };\n\t  _createClass(Root, [{\n\t    key: \"errorGenerator\",\n\t    set: function set(handler) {\n\t      this._error = handler;\n\t    }\n\t  }]);\n\t  return Root;\n\t}(_container[\"default\"]);\n\texports[\"default\"] = Root;\n\tmodule.exports = exports.default; \n} (root$1, root$1.exports));\n\nvar rootExports = root$1.exports;\n\nvar selector$1 = {exports: {}};\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\tvar _container = _interopRequireDefault(containerExports);\n\tvar _types = types;\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\tvar Selector = /*#__PURE__*/function (_Container) {\n\t  _inheritsLoose(Selector, _Container);\n\t  function Selector(opts) {\n\t    var _this;\n\t    _this = _Container.call(this, opts) || this;\n\t    _this.type = _types.SELECTOR;\n\t    return _this;\n\t  }\n\t  return Selector;\n\t}(_container[\"default\"]);\n\texports[\"default\"] = Selector;\n\tmodule.exports = exports.default; \n} (selector$1, selector$1.exports));\n\nvar selectorExports = selector$1.exports;\n\nvar className$1 = {exports: {}};\n\n/*! https://mths.be/cssesc v3.0.0 by @mathias */\n\nvar object = {};\nvar hasOwnProperty$1 = object.hasOwnProperty;\nvar merge$2 = function merge(options, defaults) {\n\tif (!options) {\n\t\treturn defaults;\n\t}\n\tvar result = {};\n\tfor (var key in defaults) {\n\t\t// `if (defaults.hasOwnProperty(key) { … }` is not needed here, since\n\t\t// only recognized option names are used.\n\t\tresult[key] = hasOwnProperty$1.call(options, key) ? options[key] : defaults[key];\n\t}\n\treturn result;\n};\n\nvar regexAnySingleEscape = /[ -,\\.\\/:-@\\[-\\^`\\{-~]/;\nvar regexSingleEscape = /[ -,\\.\\/:-@\\[\\]\\^`\\{-~]/;\nvar regexExcessiveSpaces = /(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g;\n\n// https://mathiasbynens.be/notes/css-escapes#css\nvar cssesc = function cssesc(string, options) {\n\toptions = merge$2(options, cssesc.options);\n\tif (options.quotes != 'single' && options.quotes != 'double') {\n\t\toptions.quotes = 'single';\n\t}\n\tvar quote = options.quotes == 'double' ? '\"' : '\\'';\n\tvar isIdentifier = options.isIdentifier;\n\n\tvar firstChar = string.charAt(0);\n\tvar output = '';\n\tvar counter = 0;\n\tvar length = string.length;\n\twhile (counter < length) {\n\t\tvar character = string.charAt(counter++);\n\t\tvar codePoint = character.charCodeAt();\n\t\tvar value = void 0;\n\t\t// If it’s not a printable ASCII character…\n\t\tif (codePoint < 0x20 || codePoint > 0x7E) {\n\t\t\tif (codePoint >= 0xD800 && codePoint <= 0xDBFF && counter < length) {\n\t\t\t\t// It’s a high surrogate, and there is a next character.\n\t\t\t\tvar extra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) {\n\t\t\t\t\t// next character is low surrogate\n\t\t\t\t\tcodePoint = ((codePoint & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000;\n\t\t\t\t} else {\n\t\t\t\t\t// It’s an unmatched surrogate; only append this code unit, in case\n\t\t\t\t\t// the next code unit is the high surrogate of a surrogate pair.\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t} else {\n\t\t\tif (options.escapeEverything) {\n\t\t\t\tif (regexAnySingleEscape.test(character)) {\n\t\t\t\t\tvalue = '\\\\' + character;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t\t}\n\t\t\t} else if (/[\\t\\n\\f\\r\\x0B]/.test(character)) {\n\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t} else if (character == '\\\\' || !isIdentifier && (character == '\"' && quote == character || character == '\\'' && quote == character) || isIdentifier && regexSingleEscape.test(character)) {\n\t\t\t\tvalue = '\\\\' + character;\n\t\t\t} else {\n\t\t\t\tvalue = character;\n\t\t\t}\n\t\t}\n\t\toutput += value;\n\t}\n\n\tif (isIdentifier) {\n\t\tif (/^-[-\\d]/.test(output)) {\n\t\t\toutput = '\\\\-' + output.slice(1);\n\t\t} else if (/\\d/.test(firstChar)) {\n\t\t\toutput = '\\\\3' + firstChar + ' ' + output.slice(1);\n\t\t}\n\t}\n\n\t// Remove spaces after `\\HEX` escapes that are not followed by a hex digit,\n\t// since they’re redundant. Note that this is only possible if the escape\n\t// sequence isn’t preceded by an odd number of backslashes.\n\toutput = output.replace(regexExcessiveSpaces, function ($0, $1, $2) {\n\t\tif ($1 && $1.length % 2) {\n\t\t\t// It’s not safe to remove the space, so don’t.\n\t\t\treturn $0;\n\t\t}\n\t\t// Strip the space.\n\t\treturn ($1 || '') + $2;\n\t});\n\n\tif (!isIdentifier && options.wrap) {\n\t\treturn quote + output + quote;\n\t}\n\treturn output;\n};\n\n// Expose default options (so they can be overridden globally).\ncssesc.options = {\n\t'escapeEverything': false,\n\t'isIdentifier': false,\n\t'quotes': 'single',\n\t'wrap': false\n};\n\ncssesc.version = '3.0.0';\n\nvar cssesc_1 = cssesc;\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\tvar _cssesc = _interopRequireDefault(cssesc_1);\n\tvar _util = util$6;\n\tvar _node = _interopRequireDefault(nodeExports);\n\tvar _types = types;\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\tfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\tfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\tvar ClassName = /*#__PURE__*/function (_Node) {\n\t  _inheritsLoose(ClassName, _Node);\n\t  function ClassName(opts) {\n\t    var _this;\n\t    _this = _Node.call(this, opts) || this;\n\t    _this.type = _types.CLASS;\n\t    _this._constructed = true;\n\t    return _this;\n\t  }\n\t  var _proto = ClassName.prototype;\n\t  _proto.valueToString = function valueToString() {\n\t    return '.' + _Node.prototype.valueToString.call(this);\n\t  };\n\t  _createClass(ClassName, [{\n\t    key: \"value\",\n\t    get: function get() {\n\t      return this._value;\n\t    },\n\t    set: function set(v) {\n\t      if (this._constructed) {\n\t        var escaped = (0, _cssesc[\"default\"])(v, {\n\t          isIdentifier: true\n\t        });\n\t        if (escaped !== v) {\n\t          (0, _util.ensureObject)(this, \"raws\");\n\t          this.raws.value = escaped;\n\t        } else if (this.raws) {\n\t          delete this.raws.value;\n\t        }\n\t      }\n\t      this._value = v;\n\t    }\n\t  }]);\n\t  return ClassName;\n\t}(_node[\"default\"]);\n\texports[\"default\"] = ClassName;\n\tmodule.exports = exports.default; \n} (className$1, className$1.exports));\n\nvar classNameExports = className$1.exports;\n\nvar comment$2 = {exports: {}};\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\tvar _node = _interopRequireDefault(nodeExports);\n\tvar _types = types;\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\tvar Comment = /*#__PURE__*/function (_Node) {\n\t  _inheritsLoose(Comment, _Node);\n\t  function Comment(opts) {\n\t    var _this;\n\t    _this = _Node.call(this, opts) || this;\n\t    _this.type = _types.COMMENT;\n\t    return _this;\n\t  }\n\t  return Comment;\n\t}(_node[\"default\"]);\n\texports[\"default\"] = Comment;\n\tmodule.exports = exports.default; \n} (comment$2, comment$2.exports));\n\nvar commentExports = comment$2.exports;\n\nvar id$1 = {exports: {}};\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\tvar _node = _interopRequireDefault(nodeExports);\n\tvar _types = types;\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\tvar ID = /*#__PURE__*/function (_Node) {\n\t  _inheritsLoose(ID, _Node);\n\t  function ID(opts) {\n\t    var _this;\n\t    _this = _Node.call(this, opts) || this;\n\t    _this.type = _types.ID;\n\t    return _this;\n\t  }\n\t  var _proto = ID.prototype;\n\t  _proto.valueToString = function valueToString() {\n\t    return '#' + _Node.prototype.valueToString.call(this);\n\t  };\n\t  return ID;\n\t}(_node[\"default\"]);\n\texports[\"default\"] = ID;\n\tmodule.exports = exports.default; \n} (id$1, id$1.exports));\n\nvar idExports = id$1.exports;\n\nvar tag$1 = {exports: {}};\n\nvar namespace = {exports: {}};\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\tvar _cssesc = _interopRequireDefault(cssesc_1);\n\tvar _util = util$6;\n\tvar _node = _interopRequireDefault(nodeExports);\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\tfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\tfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\tvar Namespace = /*#__PURE__*/function (_Node) {\n\t  _inheritsLoose(Namespace, _Node);\n\t  function Namespace() {\n\t    return _Node.apply(this, arguments) || this;\n\t  }\n\t  var _proto = Namespace.prototype;\n\t  _proto.qualifiedName = function qualifiedName(value) {\n\t    if (this.namespace) {\n\t      return this.namespaceString + \"|\" + value;\n\t    } else {\n\t      return value;\n\t    }\n\t  };\n\t  _proto.valueToString = function valueToString() {\n\t    return this.qualifiedName(_Node.prototype.valueToString.call(this));\n\t  };\n\t  _createClass(Namespace, [{\n\t    key: \"namespace\",\n\t    get: function get() {\n\t      return this._namespace;\n\t    },\n\t    set: function set(namespace) {\n\t      if (namespace === true || namespace === \"*\" || namespace === \"&\") {\n\t        this._namespace = namespace;\n\t        if (this.raws) {\n\t          delete this.raws.namespace;\n\t        }\n\t        return;\n\t      }\n\t      var escaped = (0, _cssesc[\"default\"])(namespace, {\n\t        isIdentifier: true\n\t      });\n\t      this._namespace = namespace;\n\t      if (escaped !== namespace) {\n\t        (0, _util.ensureObject)(this, \"raws\");\n\t        this.raws.namespace = escaped;\n\t      } else if (this.raws) {\n\t        delete this.raws.namespace;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"ns\",\n\t    get: function get() {\n\t      return this._namespace;\n\t    },\n\t    set: function set(namespace) {\n\t      this.namespace = namespace;\n\t    }\n\t  }, {\n\t    key: \"namespaceString\",\n\t    get: function get() {\n\t      if (this.namespace) {\n\t        var ns = this.stringifyProperty(\"namespace\");\n\t        if (ns === true) {\n\t          return '';\n\t        } else {\n\t          return ns;\n\t        }\n\t      } else {\n\t        return '';\n\t      }\n\t    }\n\t  }]);\n\t  return Namespace;\n\t}(_node[\"default\"]);\n\texports[\"default\"] = Namespace;\n\tmodule.exports = exports.default; \n} (namespace, namespace.exports));\n\nvar namespaceExports = namespace.exports;\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\tvar _namespace = _interopRequireDefault(namespaceExports);\n\tvar _types = types;\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\tvar Tag = /*#__PURE__*/function (_Namespace) {\n\t  _inheritsLoose(Tag, _Namespace);\n\t  function Tag(opts) {\n\t    var _this;\n\t    _this = _Namespace.call(this, opts) || this;\n\t    _this.type = _types.TAG;\n\t    return _this;\n\t  }\n\t  return Tag;\n\t}(_namespace[\"default\"]);\n\texports[\"default\"] = Tag;\n\tmodule.exports = exports.default; \n} (tag$1, tag$1.exports));\n\nvar tagExports = tag$1.exports;\n\nvar string$1 = {exports: {}};\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\tvar _node = _interopRequireDefault(nodeExports);\n\tvar _types = types;\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\tvar String = /*#__PURE__*/function (_Node) {\n\t  _inheritsLoose(String, _Node);\n\t  function String(opts) {\n\t    var _this;\n\t    _this = _Node.call(this, opts) || this;\n\t    _this.type = _types.STRING;\n\t    return _this;\n\t  }\n\t  return String;\n\t}(_node[\"default\"]);\n\texports[\"default\"] = String;\n\tmodule.exports = exports.default; \n} (string$1, string$1.exports));\n\nvar stringExports = string$1.exports;\n\nvar pseudo$1 = {exports: {}};\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\tvar _container = _interopRequireDefault(containerExports);\n\tvar _types = types;\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\tvar Pseudo = /*#__PURE__*/function (_Container) {\n\t  _inheritsLoose(Pseudo, _Container);\n\t  function Pseudo(opts) {\n\t    var _this;\n\t    _this = _Container.call(this, opts) || this;\n\t    _this.type = _types.PSEUDO;\n\t    return _this;\n\t  }\n\t  var _proto = Pseudo.prototype;\n\t  _proto.toString = function toString() {\n\t    var params = this.length ? '(' + this.map(String).join(',') + ')' : '';\n\t    return [this.rawSpaceBefore, this.stringifyProperty(\"value\"), params, this.rawSpaceAfter].join('');\n\t  };\n\t  return Pseudo;\n\t}(_container[\"default\"]);\n\texports[\"default\"] = Pseudo;\n\tmodule.exports = exports.default; \n} (pseudo$1, pseudo$1.exports));\n\nvar pseudoExports = pseudo$1.exports;\n\nvar attribute$1 = {};\n\n/**\n * For Node.js, simply re-export the core `util.deprecate` function.\n */\n\nvar node = require$$0$1.deprecate;\n\n(function (exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\texports.unescapeValue = unescapeValue;\n\tvar _cssesc = _interopRequireDefault(cssesc_1);\n\tvar _unesc = _interopRequireDefault(unescExports);\n\tvar _namespace = _interopRequireDefault(namespaceExports);\n\tvar _types = types;\n\tvar _CSSESC_QUOTE_OPTIONS;\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\tfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\tfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\tvar deprecate = node;\n\tvar WRAPPED_IN_QUOTES = /^('|\")([^]*)\\1$/;\n\tvar warnOfDeprecatedValueAssignment = deprecate(function () {}, \"Assigning an attribute a value containing characters that might need to be escaped is deprecated. \" + \"Call attribute.setValue() instead.\");\n\tvar warnOfDeprecatedQuotedAssignment = deprecate(function () {}, \"Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead.\");\n\tvar warnOfDeprecatedConstructor = deprecate(function () {}, \"Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.\");\n\tfunction unescapeValue(value) {\n\t  var deprecatedUsage = false;\n\t  var quoteMark = null;\n\t  var unescaped = value;\n\t  var m = unescaped.match(WRAPPED_IN_QUOTES);\n\t  if (m) {\n\t    quoteMark = m[1];\n\t    unescaped = m[2];\n\t  }\n\t  unescaped = (0, _unesc[\"default\"])(unescaped);\n\t  if (unescaped !== value) {\n\t    deprecatedUsage = true;\n\t  }\n\t  return {\n\t    deprecatedUsage: deprecatedUsage,\n\t    unescaped: unescaped,\n\t    quoteMark: quoteMark\n\t  };\n\t}\n\tfunction handleDeprecatedContructorOpts(opts) {\n\t  if (opts.quoteMark !== undefined) {\n\t    return opts;\n\t  }\n\t  if (opts.value === undefined) {\n\t    return opts;\n\t  }\n\t  warnOfDeprecatedConstructor();\n\t  var _unescapeValue = unescapeValue(opts.value),\n\t    quoteMark = _unescapeValue.quoteMark,\n\t    unescaped = _unescapeValue.unescaped;\n\t  if (!opts.raws) {\n\t    opts.raws = {};\n\t  }\n\t  if (opts.raws.value === undefined) {\n\t    opts.raws.value = opts.value;\n\t  }\n\t  opts.value = unescaped;\n\t  opts.quoteMark = quoteMark;\n\t  return opts;\n\t}\n\tvar Attribute = /*#__PURE__*/function (_Namespace) {\n\t  _inheritsLoose(Attribute, _Namespace);\n\t  function Attribute(opts) {\n\t    var _this;\n\t    if (opts === void 0) {\n\t      opts = {};\n\t    }\n\t    _this = _Namespace.call(this, handleDeprecatedContructorOpts(opts)) || this;\n\t    _this.type = _types.ATTRIBUTE;\n\t    _this.raws = _this.raws || {};\n\t    Object.defineProperty(_this.raws, 'unquoted', {\n\t      get: deprecate(function () {\n\t        return _this.value;\n\t      }, \"attr.raws.unquoted is deprecated. Call attr.value instead.\"),\n\t      set: deprecate(function () {\n\t        return _this.value;\n\t      }, \"Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.\")\n\t    });\n\t    _this._constructed = true;\n\t    return _this;\n\t  }\n\n\t  /**\n\t   * Returns the Attribute's value quoted such that it would be legal to use\n\t   * in the value of a css file. The original value's quotation setting\n\t   * used for stringification is left unchanged. See `setValue(value, options)`\n\t   * if you want to control the quote settings of a new value for the attribute.\n\t   *\n\t   * You can also change the quotation used for the current value by setting quoteMark.\n\t   *\n\t   * Options:\n\t   *   * quoteMark {'\"' | \"'\" | null} - Use this value to quote the value. If this\n\t   *     option is not set, the original value for quoteMark will be used. If\n\t   *     indeterminate, a double quote is used. The legal values are:\n\t   *     * `null` - the value will be unquoted and characters will be escaped as necessary.\n\t   *     * `'` - the value will be quoted with a single quote and single quotes are escaped.\n\t   *     * `\"` - the value will be quoted with a double quote and double quotes are escaped.\n\t   *   * preferCurrentQuoteMark {boolean} - if true, prefer the source quote mark\n\t   *     over the quoteMark option value.\n\t   *   * smart {boolean} - if true, will select a quote mark based on the value\n\t   *     and the other options specified here. See the `smartQuoteMark()`\n\t   *     method.\n\t   **/\n\t  var _proto = Attribute.prototype;\n\t  _proto.getQuotedValue = function getQuotedValue(options) {\n\t    if (options === void 0) {\n\t      options = {};\n\t    }\n\t    var quoteMark = this._determineQuoteMark(options);\n\t    var cssescopts = CSSESC_QUOTE_OPTIONS[quoteMark];\n\t    var escaped = (0, _cssesc[\"default\"])(this._value, cssescopts);\n\t    return escaped;\n\t  };\n\t  _proto._determineQuoteMark = function _determineQuoteMark(options) {\n\t    return options.smart ? this.smartQuoteMark(options) : this.preferredQuoteMark(options);\n\t  }\n\n\t  /**\n\t   * Set the unescaped value with the specified quotation options. The value\n\t   * provided must not include any wrapping quote marks -- those quotes will\n\t   * be interpreted as part of the value and escaped accordingly.\n\t   */;\n\t  _proto.setValue = function setValue(value, options) {\n\t    if (options === void 0) {\n\t      options = {};\n\t    }\n\t    this._value = value;\n\t    this._quoteMark = this._determineQuoteMark(options);\n\t    this._syncRawValue();\n\t  }\n\n\t  /**\n\t   * Intelligently select a quoteMark value based on the value's contents. If\n\t   * the value is a legal CSS ident, it will not be quoted. Otherwise a quote\n\t   * mark will be picked that minimizes the number of escapes.\n\t   *\n\t   * If there's no clear winner, the quote mark from these options is used,\n\t   * then the source quote mark (this is inverted if `preferCurrentQuoteMark` is\n\t   * true). If the quoteMark is unspecified, a double quote is used.\n\t   *\n\t   * @param options This takes the quoteMark and preferCurrentQuoteMark options\n\t   * from the quoteValue method.\n\t   */;\n\t  _proto.smartQuoteMark = function smartQuoteMark(options) {\n\t    var v = this.value;\n\t    var numSingleQuotes = v.replace(/[^']/g, '').length;\n\t    var numDoubleQuotes = v.replace(/[^\"]/g, '').length;\n\t    if (numSingleQuotes + numDoubleQuotes === 0) {\n\t      var escaped = (0, _cssesc[\"default\"])(v, {\n\t        isIdentifier: true\n\t      });\n\t      if (escaped === v) {\n\t        return Attribute.NO_QUOTE;\n\t      } else {\n\t        var pref = this.preferredQuoteMark(options);\n\t        if (pref === Attribute.NO_QUOTE) {\n\t          // pick a quote mark that isn't none and see if it's smaller\n\t          var quote = this.quoteMark || options.quoteMark || Attribute.DOUBLE_QUOTE;\n\t          var opts = CSSESC_QUOTE_OPTIONS[quote];\n\t          var quoteValue = (0, _cssesc[\"default\"])(v, opts);\n\t          if (quoteValue.length < escaped.length) {\n\t            return quote;\n\t          }\n\t        }\n\t        return pref;\n\t      }\n\t    } else if (numDoubleQuotes === numSingleQuotes) {\n\t      return this.preferredQuoteMark(options);\n\t    } else if (numDoubleQuotes < numSingleQuotes) {\n\t      return Attribute.DOUBLE_QUOTE;\n\t    } else {\n\t      return Attribute.SINGLE_QUOTE;\n\t    }\n\t  }\n\n\t  /**\n\t   * Selects the preferred quote mark based on the options and the current quote mark value.\n\t   * If you want the quote mark to depend on the attribute value, call `smartQuoteMark(opts)`\n\t   * instead.\n\t   */;\n\t  _proto.preferredQuoteMark = function preferredQuoteMark(options) {\n\t    var quoteMark = options.preferCurrentQuoteMark ? this.quoteMark : options.quoteMark;\n\t    if (quoteMark === undefined) {\n\t      quoteMark = options.preferCurrentQuoteMark ? options.quoteMark : this.quoteMark;\n\t    }\n\t    if (quoteMark === undefined) {\n\t      quoteMark = Attribute.DOUBLE_QUOTE;\n\t    }\n\t    return quoteMark;\n\t  };\n\t  _proto._syncRawValue = function _syncRawValue() {\n\t    var rawValue = (0, _cssesc[\"default\"])(this._value, CSSESC_QUOTE_OPTIONS[this.quoteMark]);\n\t    if (rawValue === this._value) {\n\t      if (this.raws) {\n\t        delete this.raws.value;\n\t      }\n\t    } else {\n\t      this.raws.value = rawValue;\n\t    }\n\t  };\n\t  _proto._handleEscapes = function _handleEscapes(prop, value) {\n\t    if (this._constructed) {\n\t      var escaped = (0, _cssesc[\"default\"])(value, {\n\t        isIdentifier: true\n\t      });\n\t      if (escaped !== value) {\n\t        this.raws[prop] = escaped;\n\t      } else {\n\t        delete this.raws[prop];\n\t      }\n\t    }\n\t  };\n\t  _proto._spacesFor = function _spacesFor(name) {\n\t    var attrSpaces = {\n\t      before: '',\n\t      after: ''\n\t    };\n\t    var spaces = this.spaces[name] || {};\n\t    var rawSpaces = this.raws.spaces && this.raws.spaces[name] || {};\n\t    return Object.assign(attrSpaces, spaces, rawSpaces);\n\t  };\n\t  _proto._stringFor = function _stringFor(name, spaceName, concat) {\n\t    if (spaceName === void 0) {\n\t      spaceName = name;\n\t    }\n\t    if (concat === void 0) {\n\t      concat = defaultAttrConcat;\n\t    }\n\t    var attrSpaces = this._spacesFor(spaceName);\n\t    return concat(this.stringifyProperty(name), attrSpaces);\n\t  }\n\n\t  /**\n\t   * returns the offset of the attribute part specified relative to the\n\t   * start of the node of the output string.\n\t   *\n\t   * * \"ns\" - alias for \"namespace\"\n\t   * * \"namespace\" - the namespace if it exists.\n\t   * * \"attribute\" - the attribute name\n\t   * * \"attributeNS\" - the start of the attribute or its namespace\n\t   * * \"operator\" - the match operator of the attribute\n\t   * * \"value\" - The value (string or identifier)\n\t   * * \"insensitive\" - the case insensitivity flag;\n\t   * @param part One of the possible values inside an attribute.\n\t   * @returns -1 if the name is invalid or the value doesn't exist in this attribute.\n\t   */;\n\t  _proto.offsetOf = function offsetOf(name) {\n\t    var count = 1;\n\t    var attributeSpaces = this._spacesFor(\"attribute\");\n\t    count += attributeSpaces.before.length;\n\t    if (name === \"namespace\" || name === \"ns\") {\n\t      return this.namespace ? count : -1;\n\t    }\n\t    if (name === \"attributeNS\") {\n\t      return count;\n\t    }\n\t    count += this.namespaceString.length;\n\t    if (this.namespace) {\n\t      count += 1;\n\t    }\n\t    if (name === \"attribute\") {\n\t      return count;\n\t    }\n\t    count += this.stringifyProperty(\"attribute\").length;\n\t    count += attributeSpaces.after.length;\n\t    var operatorSpaces = this._spacesFor(\"operator\");\n\t    count += operatorSpaces.before.length;\n\t    var operator = this.stringifyProperty(\"operator\");\n\t    if (name === \"operator\") {\n\t      return operator ? count : -1;\n\t    }\n\t    count += operator.length;\n\t    count += operatorSpaces.after.length;\n\t    var valueSpaces = this._spacesFor(\"value\");\n\t    count += valueSpaces.before.length;\n\t    var value = this.stringifyProperty(\"value\");\n\t    if (name === \"value\") {\n\t      return value ? count : -1;\n\t    }\n\t    count += value.length;\n\t    count += valueSpaces.after.length;\n\t    var insensitiveSpaces = this._spacesFor(\"insensitive\");\n\t    count += insensitiveSpaces.before.length;\n\t    if (name === \"insensitive\") {\n\t      return this.insensitive ? count : -1;\n\t    }\n\t    return -1;\n\t  };\n\t  _proto.toString = function toString() {\n\t    var _this2 = this;\n\t    var selector = [this.rawSpaceBefore, '['];\n\t    selector.push(this._stringFor('qualifiedAttribute', 'attribute'));\n\t    if (this.operator && (this.value || this.value === '')) {\n\t      selector.push(this._stringFor('operator'));\n\t      selector.push(this._stringFor('value'));\n\t      selector.push(this._stringFor('insensitiveFlag', 'insensitive', function (attrValue, attrSpaces) {\n\t        if (attrValue.length > 0 && !_this2.quoted && attrSpaces.before.length === 0 && !(_this2.spaces.value && _this2.spaces.value.after)) {\n\t          attrSpaces.before = \" \";\n\t        }\n\t        return defaultAttrConcat(attrValue, attrSpaces);\n\t      }));\n\t    }\n\t    selector.push(']');\n\t    selector.push(this.rawSpaceAfter);\n\t    return selector.join('');\n\t  };\n\t  _createClass(Attribute, [{\n\t    key: \"quoted\",\n\t    get: function get() {\n\t      var qm = this.quoteMark;\n\t      return qm === \"'\" || qm === '\"';\n\t    },\n\t    set: function set(value) {\n\t      warnOfDeprecatedQuotedAssignment();\n\t    }\n\n\t    /**\n\t     * returns a single (`'`) or double (`\"`) quote character if the value is quoted.\n\t     * returns `null` if the value is not quoted.\n\t     * returns `undefined` if the quotation state is unknown (this can happen when\n\t     * the attribute is constructed without specifying a quote mark.)\n\t     */\n\t  }, {\n\t    key: \"quoteMark\",\n\t    get: function get() {\n\t      return this._quoteMark;\n\t    }\n\n\t    /**\n\t     * Set the quote mark to be used by this attribute's value.\n\t     * If the quote mark changes, the raw (escaped) value at `attr.raws.value` of the attribute\n\t     * value is updated accordingly.\n\t     *\n\t     * @param {\"'\" | '\"' | null} quoteMark The quote mark or `null` if the value should be unquoted.\n\t     */,\n\t    set: function set(quoteMark) {\n\t      if (!this._constructed) {\n\t        this._quoteMark = quoteMark;\n\t        return;\n\t      }\n\t      if (this._quoteMark !== quoteMark) {\n\t        this._quoteMark = quoteMark;\n\t        this._syncRawValue();\n\t      }\n\t    }\n\t  }, {\n\t    key: \"qualifiedAttribute\",\n\t    get: function get() {\n\t      return this.qualifiedName(this.raws.attribute || this.attribute);\n\t    }\n\t  }, {\n\t    key: \"insensitiveFlag\",\n\t    get: function get() {\n\t      return this.insensitive ? 'i' : '';\n\t    }\n\t  }, {\n\t    key: \"value\",\n\t    get: function get() {\n\t      return this._value;\n\t    },\n\t    set:\n\t    /**\n\t     * Before 3.0, the value had to be set to an escaped value including any wrapped\n\t     * quote marks. In 3.0, the semantics of `Attribute.value` changed so that the value\n\t     * is unescaped during parsing and any quote marks are removed.\n\t     *\n\t     * Because the ambiguity of this semantic change, if you set `attr.value = newValue`,\n\t     * a deprecation warning is raised when the new value contains any characters that would\n\t     * require escaping (including if it contains wrapped quotes).\n\t     *\n\t     * Instead, you should call `attr.setValue(newValue, opts)` and pass options that describe\n\t     * how the new value is quoted.\n\t     */\n\t    function set(v) {\n\t      if (this._constructed) {\n\t        var _unescapeValue2 = unescapeValue(v),\n\t          deprecatedUsage = _unescapeValue2.deprecatedUsage,\n\t          unescaped = _unescapeValue2.unescaped,\n\t          quoteMark = _unescapeValue2.quoteMark;\n\t        if (deprecatedUsage) {\n\t          warnOfDeprecatedValueAssignment();\n\t        }\n\t        if (unescaped === this._value && quoteMark === this._quoteMark) {\n\t          return;\n\t        }\n\t        this._value = unescaped;\n\t        this._quoteMark = quoteMark;\n\t        this._syncRawValue();\n\t      } else {\n\t        this._value = v;\n\t      }\n\t    }\n\t  }, {\n\t    key: \"insensitive\",\n\t    get: function get() {\n\t      return this._insensitive;\n\t    }\n\n\t    /**\n\t     * Set the case insensitive flag.\n\t     * If the case insensitive flag changes, the raw (escaped) value at `attr.raws.insensitiveFlag`\n\t     * of the attribute is updated accordingly.\n\t     *\n\t     * @param {true | false} insensitive true if the attribute should match case-insensitively.\n\t     */,\n\t    set: function set(insensitive) {\n\t      if (!insensitive) {\n\t        this._insensitive = false;\n\n\t        // \"i\" and \"I\" can be used in \"this.raws.insensitiveFlag\" to store the original notation.\n\t        // When setting `attr.insensitive = false` both should be erased to ensure correct serialization.\n\t        if (this.raws && (this.raws.insensitiveFlag === 'I' || this.raws.insensitiveFlag === 'i')) {\n\t          this.raws.insensitiveFlag = undefined;\n\t        }\n\t      }\n\t      this._insensitive = insensitive;\n\t    }\n\t  }, {\n\t    key: \"attribute\",\n\t    get: function get() {\n\t      return this._attribute;\n\t    },\n\t    set: function set(name) {\n\t      this._handleEscapes(\"attribute\", name);\n\t      this._attribute = name;\n\t    }\n\t  }]);\n\t  return Attribute;\n\t}(_namespace[\"default\"]);\n\texports[\"default\"] = Attribute;\n\tAttribute.NO_QUOTE = null;\n\tAttribute.SINGLE_QUOTE = \"'\";\n\tAttribute.DOUBLE_QUOTE = '\"';\n\tvar CSSESC_QUOTE_OPTIONS = (_CSSESC_QUOTE_OPTIONS = {\n\t  \"'\": {\n\t    quotes: 'single',\n\t    wrap: true\n\t  },\n\t  '\"': {\n\t    quotes: 'double',\n\t    wrap: true\n\t  }\n\t}, _CSSESC_QUOTE_OPTIONS[null] = {\n\t  isIdentifier: true\n\t}, _CSSESC_QUOTE_OPTIONS);\n\tfunction defaultAttrConcat(attrValue, attrSpaces) {\n\t  return \"\" + attrSpaces.before + attrValue + attrSpaces.after;\n\t} \n} (attribute$1));\n\nvar universal$1 = {exports: {}};\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\tvar _namespace = _interopRequireDefault(namespaceExports);\n\tvar _types = types;\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\tvar Universal = /*#__PURE__*/function (_Namespace) {\n\t  _inheritsLoose(Universal, _Namespace);\n\t  function Universal(opts) {\n\t    var _this;\n\t    _this = _Namespace.call(this, opts) || this;\n\t    _this.type = _types.UNIVERSAL;\n\t    _this.value = '*';\n\t    return _this;\n\t  }\n\t  return Universal;\n\t}(_namespace[\"default\"]);\n\texports[\"default\"] = Universal;\n\tmodule.exports = exports.default; \n} (universal$1, universal$1.exports));\n\nvar universalExports = universal$1.exports;\n\nvar combinator$2 = {exports: {}};\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\tvar _node = _interopRequireDefault(nodeExports);\n\tvar _types = types;\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\tvar Combinator = /*#__PURE__*/function (_Node) {\n\t  _inheritsLoose(Combinator, _Node);\n\t  function Combinator(opts) {\n\t    var _this;\n\t    _this = _Node.call(this, opts) || this;\n\t    _this.type = _types.COMBINATOR;\n\t    return _this;\n\t  }\n\t  return Combinator;\n\t}(_node[\"default\"]);\n\texports[\"default\"] = Combinator;\n\tmodule.exports = exports.default; \n} (combinator$2, combinator$2.exports));\n\nvar combinatorExports = combinator$2.exports;\n\nvar nesting$1 = {exports: {}};\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\tvar _node = _interopRequireDefault(nodeExports);\n\tvar _types = types;\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\tfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\tfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\tvar Nesting = /*#__PURE__*/function (_Node) {\n\t  _inheritsLoose(Nesting, _Node);\n\t  function Nesting(opts) {\n\t    var _this;\n\t    _this = _Node.call(this, opts) || this;\n\t    _this.type = _types.NESTING;\n\t    _this.value = '&';\n\t    return _this;\n\t  }\n\t  return Nesting;\n\t}(_node[\"default\"]);\n\texports[\"default\"] = Nesting;\n\tmodule.exports = exports.default; \n} (nesting$1, nesting$1.exports));\n\nvar nestingExports = nesting$1.exports;\n\nvar sortAscending = {exports: {}};\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = sortAscending;\n\tfunction sortAscending(list) {\n\t  return list.sort(function (a, b) {\n\t    return a - b;\n\t  });\n\t}\n\tmodule.exports = exports.default; \n} (sortAscending, sortAscending.exports));\n\nvar sortAscendingExports = sortAscending.exports;\n\nvar tokenize = {};\n\nvar tokenTypes = {};\n\ntokenTypes.__esModule = true;\ntokenTypes.word = tokenTypes.tilde = tokenTypes.tab = tokenTypes.str = tokenTypes.space = tokenTypes.slash = tokenTypes.singleQuote = tokenTypes.semicolon = tokenTypes.plus = tokenTypes.pipe = tokenTypes.openSquare = tokenTypes.openParenthesis = tokenTypes.newline = tokenTypes.greaterThan = tokenTypes.feed = tokenTypes.equals = tokenTypes.doubleQuote = tokenTypes.dollar = tokenTypes.cr = tokenTypes.comment = tokenTypes.comma = tokenTypes.combinator = tokenTypes.colon = tokenTypes.closeSquare = tokenTypes.closeParenthesis = tokenTypes.caret = tokenTypes.bang = tokenTypes.backslash = tokenTypes.at = tokenTypes.asterisk = tokenTypes.ampersand = void 0;\nvar ampersand = 38; // `&`.charCodeAt(0);\ntokenTypes.ampersand = ampersand;\nvar asterisk = 42; // `*`.charCodeAt(0);\ntokenTypes.asterisk = asterisk;\nvar at = 64; // `@`.charCodeAt(0);\ntokenTypes.at = at;\nvar comma$1 = 44; // `,`.charCodeAt(0);\ntokenTypes.comma = comma$1;\nvar colon = 58; // `:`.charCodeAt(0);\ntokenTypes.colon = colon;\nvar semicolon$1 = 59; // `;`.charCodeAt(0);\ntokenTypes.semicolon = semicolon$1;\nvar openParenthesis = 40; // `(`.charCodeAt(0);\ntokenTypes.openParenthesis = openParenthesis;\nvar closeParenthesis = 41; // `)`.charCodeAt(0);\ntokenTypes.closeParenthesis = closeParenthesis;\nvar openSquare = 91; // `[`.charCodeAt(0);\ntokenTypes.openSquare = openSquare;\nvar closeSquare = 93; // `]`.charCodeAt(0);\ntokenTypes.closeSquare = closeSquare;\nvar dollar = 36; // `$`.charCodeAt(0);\ntokenTypes.dollar = dollar;\nvar tilde = 126; // `~`.charCodeAt(0);\ntokenTypes.tilde = tilde;\nvar caret = 94; // `^`.charCodeAt(0);\ntokenTypes.caret = caret;\nvar plus = 43; // `+`.charCodeAt(0);\ntokenTypes.plus = plus;\nvar equals = 61; // `=`.charCodeAt(0);\ntokenTypes.equals = equals;\nvar pipe = 124; // `|`.charCodeAt(0);\ntokenTypes.pipe = pipe;\nvar greaterThan = 62; // `>`.charCodeAt(0);\ntokenTypes.greaterThan = greaterThan;\nvar space = 32; // ` `.charCodeAt(0);\ntokenTypes.space = space;\nvar singleQuote = 39; // `'`.charCodeAt(0);\ntokenTypes.singleQuote = singleQuote;\nvar doubleQuote = 34; // `\"`.charCodeAt(0);\ntokenTypes.doubleQuote = doubleQuote;\nvar slash = 47; // `/`.charCodeAt(0);\ntokenTypes.slash = slash;\nvar bang = 33; // `!`.charCodeAt(0);\ntokenTypes.bang = bang;\nvar backslash = 92; // '\\\\'.charCodeAt(0);\ntokenTypes.backslash = backslash;\nvar cr = 13; // '\\r'.charCodeAt(0);\ntokenTypes.cr = cr;\nvar feed = 12; // '\\f'.charCodeAt(0);\ntokenTypes.feed = feed;\nvar newline = 10; // '\\n'.charCodeAt(0);\ntokenTypes.newline = newline;\nvar tab = 9; // '\\t'.charCodeAt(0);\n\n// Expose aliases primarily for readability.\ntokenTypes.tab = tab;\nvar str = singleQuote;\n\n// No good single character representation!\ntokenTypes.str = str;\nvar comment$1 = -1;\ntokenTypes.comment = comment$1;\nvar word = -2;\ntokenTypes.word = word;\nvar combinator$1 = -3;\ntokenTypes.combinator = combinator$1;\n\n(function (exports) {\n\n\texports.__esModule = true;\n\texports.FIELDS = void 0;\n\texports[\"default\"] = tokenize;\n\tvar t = _interopRequireWildcard(tokenTypes);\n\tvar _unescapable, _wordDelimiters;\n\tfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\tfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\tvar unescapable = (_unescapable = {}, _unescapable[t.tab] = true, _unescapable[t.newline] = true, _unescapable[t.cr] = true, _unescapable[t.feed] = true, _unescapable);\n\tvar wordDelimiters = (_wordDelimiters = {}, _wordDelimiters[t.space] = true, _wordDelimiters[t.tab] = true, _wordDelimiters[t.newline] = true, _wordDelimiters[t.cr] = true, _wordDelimiters[t.feed] = true, _wordDelimiters[t.ampersand] = true, _wordDelimiters[t.asterisk] = true, _wordDelimiters[t.bang] = true, _wordDelimiters[t.comma] = true, _wordDelimiters[t.colon] = true, _wordDelimiters[t.semicolon] = true, _wordDelimiters[t.openParenthesis] = true, _wordDelimiters[t.closeParenthesis] = true, _wordDelimiters[t.openSquare] = true, _wordDelimiters[t.closeSquare] = true, _wordDelimiters[t.singleQuote] = true, _wordDelimiters[t.doubleQuote] = true, _wordDelimiters[t.plus] = true, _wordDelimiters[t.pipe] = true, _wordDelimiters[t.tilde] = true, _wordDelimiters[t.greaterThan] = true, _wordDelimiters[t.equals] = true, _wordDelimiters[t.dollar] = true, _wordDelimiters[t.caret] = true, _wordDelimiters[t.slash] = true, _wordDelimiters);\n\tvar hex = {};\n\tvar hexChars = \"0123456789abcdefABCDEF\";\n\tfor (var i = 0; i < hexChars.length; i++) {\n\t  hex[hexChars.charCodeAt(i)] = true;\n\t}\n\n\t/**\n\t *  Returns the last index of the bar css word\n\t * @param {string} css The string in which the word begins\n\t * @param {number} start The index into the string where word's first letter occurs\n\t */\n\tfunction consumeWord(css, start) {\n\t  var next = start;\n\t  var code;\n\t  do {\n\t    code = css.charCodeAt(next);\n\t    if (wordDelimiters[code]) {\n\t      return next - 1;\n\t    } else if (code === t.backslash) {\n\t      next = consumeEscape(css, next) + 1;\n\t    } else {\n\t      // All other characters are part of the word\n\t      next++;\n\t    }\n\t  } while (next < css.length);\n\t  return next - 1;\n\t}\n\n\t/**\n\t *  Returns the last index of the escape sequence\n\t * @param {string} css The string in which the sequence begins\n\t * @param {number} start The index into the string where escape character (`\\`) occurs.\n\t */\n\tfunction consumeEscape(css, start) {\n\t  var next = start;\n\t  var code = css.charCodeAt(next + 1);\n\t  if (unescapable[code]) ; else if (hex[code]) {\n\t    var hexDigits = 0;\n\t    // consume up to 6 hex chars\n\t    do {\n\t      next++;\n\t      hexDigits++;\n\t      code = css.charCodeAt(next + 1);\n\t    } while (hex[code] && hexDigits < 6);\n\t    // if fewer than 6 hex chars, a trailing space ends the escape\n\t    if (hexDigits < 6 && code === t.space) {\n\t      next++;\n\t    }\n\t  } else {\n\t    // the next char is part of the current word\n\t    next++;\n\t  }\n\t  return next;\n\t}\n\tvar FIELDS = {\n\t  TYPE: 0,\n\t  START_LINE: 1,\n\t  START_COL: 2,\n\t  END_LINE: 3,\n\t  END_COL: 4,\n\t  START_POS: 5,\n\t  END_POS: 6\n\t};\n\texports.FIELDS = FIELDS;\n\tfunction tokenize(input) {\n\t  var tokens = [];\n\t  var css = input.css.valueOf();\n\t  var _css = css,\n\t    length = _css.length;\n\t  var offset = -1;\n\t  var line = 1;\n\t  var start = 0;\n\t  var end = 0;\n\t  var code, content, endColumn, endLine, escaped, escapePos, last, lines, next, nextLine, nextOffset, quote, tokenType;\n\t  function unclosed(what, fix) {\n\t    if (input.safe) {\n\t      // fyi: this is never set to true.\n\t      css += fix;\n\t      next = css.length - 1;\n\t    } else {\n\t      throw input.error('Unclosed ' + what, line, start - offset, start);\n\t    }\n\t  }\n\t  while (start < length) {\n\t    code = css.charCodeAt(start);\n\t    if (code === t.newline) {\n\t      offset = start;\n\t      line += 1;\n\t    }\n\t    switch (code) {\n\t      case t.space:\n\t      case t.tab:\n\t      case t.newline:\n\t      case t.cr:\n\t      case t.feed:\n\t        next = start;\n\t        do {\n\t          next += 1;\n\t          code = css.charCodeAt(next);\n\t          if (code === t.newline) {\n\t            offset = next;\n\t            line += 1;\n\t          }\n\t        } while (code === t.space || code === t.newline || code === t.tab || code === t.cr || code === t.feed);\n\t        tokenType = t.space;\n\t        endLine = line;\n\t        endColumn = next - offset - 1;\n\t        end = next;\n\t        break;\n\t      case t.plus:\n\t      case t.greaterThan:\n\t      case t.tilde:\n\t      case t.pipe:\n\t        next = start;\n\t        do {\n\t          next += 1;\n\t          code = css.charCodeAt(next);\n\t        } while (code === t.plus || code === t.greaterThan || code === t.tilde || code === t.pipe);\n\t        tokenType = t.combinator;\n\t        endLine = line;\n\t        endColumn = start - offset;\n\t        end = next;\n\t        break;\n\n\t      // Consume these characters as single tokens.\n\t      case t.asterisk:\n\t      case t.ampersand:\n\t      case t.bang:\n\t      case t.comma:\n\t      case t.equals:\n\t      case t.dollar:\n\t      case t.caret:\n\t      case t.openSquare:\n\t      case t.closeSquare:\n\t      case t.colon:\n\t      case t.semicolon:\n\t      case t.openParenthesis:\n\t      case t.closeParenthesis:\n\t        next = start;\n\t        tokenType = code;\n\t        endLine = line;\n\t        endColumn = start - offset;\n\t        end = next + 1;\n\t        break;\n\t      case t.singleQuote:\n\t      case t.doubleQuote:\n\t        quote = code === t.singleQuote ? \"'\" : '\"';\n\t        next = start;\n\t        do {\n\t          escaped = false;\n\t          next = css.indexOf(quote, next + 1);\n\t          if (next === -1) {\n\t            unclosed('quote', quote);\n\t          }\n\t          escapePos = next;\n\t          while (css.charCodeAt(escapePos - 1) === t.backslash) {\n\t            escapePos -= 1;\n\t            escaped = !escaped;\n\t          }\n\t        } while (escaped);\n\t        tokenType = t.str;\n\t        endLine = line;\n\t        endColumn = start - offset;\n\t        end = next + 1;\n\t        break;\n\t      default:\n\t        if (code === t.slash && css.charCodeAt(start + 1) === t.asterisk) {\n\t          next = css.indexOf('*/', start + 2) + 1;\n\t          if (next === 0) {\n\t            unclosed('comment', '*/');\n\t          }\n\t          content = css.slice(start, next + 1);\n\t          lines = content.split('\\n');\n\t          last = lines.length - 1;\n\t          if (last > 0) {\n\t            nextLine = line + last;\n\t            nextOffset = next - lines[last].length;\n\t          } else {\n\t            nextLine = line;\n\t            nextOffset = offset;\n\t          }\n\t          tokenType = t.comment;\n\t          line = nextLine;\n\t          endLine = nextLine;\n\t          endColumn = next - nextOffset;\n\t        } else if (code === t.slash) {\n\t          next = start;\n\t          tokenType = code;\n\t          endLine = line;\n\t          endColumn = start - offset;\n\t          end = next + 1;\n\t        } else {\n\t          next = consumeWord(css, start);\n\t          tokenType = t.word;\n\t          endLine = line;\n\t          endColumn = next - offset;\n\t        }\n\t        end = next + 1;\n\t        break;\n\t    }\n\n\t    // Ensure that the token structure remains consistent\n\t    tokens.push([tokenType,\n\t    // [0] Token type\n\t    line,\n\t    // [1] Starting line\n\t    start - offset,\n\t    // [2] Starting column\n\t    endLine,\n\t    // [3] Ending line\n\t    endColumn,\n\t    // [4] Ending column\n\t    start,\n\t    // [5] Start position / Source index\n\t    end // [6] End position\n\t    ]);\n\n\t    // Reset offset for the next token\n\t    if (nextOffset) {\n\t      offset = nextOffset;\n\t      nextOffset = null;\n\t    }\n\t    start = end;\n\t  }\n\t  return tokens;\n\t} \n} (tokenize));\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\tvar _root = _interopRequireDefault(rootExports);\n\tvar _selector = _interopRequireDefault(selectorExports);\n\tvar _className = _interopRequireDefault(classNameExports);\n\tvar _comment = _interopRequireDefault(commentExports);\n\tvar _id = _interopRequireDefault(idExports);\n\tvar _tag = _interopRequireDefault(tagExports);\n\tvar _string = _interopRequireDefault(stringExports);\n\tvar _pseudo = _interopRequireDefault(pseudoExports);\n\tvar _attribute = _interopRequireWildcard(attribute$1);\n\tvar _universal = _interopRequireDefault(universalExports);\n\tvar _combinator = _interopRequireDefault(combinatorExports);\n\tvar _nesting = _interopRequireDefault(nestingExports);\n\tvar _sortAscending = _interopRequireDefault(sortAscendingExports);\n\tvar _tokenize = _interopRequireWildcard(tokenize);\n\tvar tokens = _interopRequireWildcard(tokenTypes);\n\tvar types$1 = _interopRequireWildcard(types);\n\tvar _util = util$6;\n\tvar _WHITESPACE_TOKENS, _Object$assign;\n\tfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\tfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\tfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\tfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\tvar WHITESPACE_TOKENS = (_WHITESPACE_TOKENS = {}, _WHITESPACE_TOKENS[tokens.space] = true, _WHITESPACE_TOKENS[tokens.cr] = true, _WHITESPACE_TOKENS[tokens.feed] = true, _WHITESPACE_TOKENS[tokens.newline] = true, _WHITESPACE_TOKENS[tokens.tab] = true, _WHITESPACE_TOKENS);\n\tvar WHITESPACE_EQUIV_TOKENS = Object.assign({}, WHITESPACE_TOKENS, (_Object$assign = {}, _Object$assign[tokens.comment] = true, _Object$assign));\n\tfunction tokenStart(token) {\n\t  return {\n\t    line: token[_tokenize.FIELDS.START_LINE],\n\t    column: token[_tokenize.FIELDS.START_COL]\n\t  };\n\t}\n\tfunction tokenEnd(token) {\n\t  return {\n\t    line: token[_tokenize.FIELDS.END_LINE],\n\t    column: token[_tokenize.FIELDS.END_COL]\n\t  };\n\t}\n\tfunction getSource(startLine, startColumn, endLine, endColumn) {\n\t  return {\n\t    start: {\n\t      line: startLine,\n\t      column: startColumn\n\t    },\n\t    end: {\n\t      line: endLine,\n\t      column: endColumn\n\t    }\n\t  };\n\t}\n\tfunction getTokenSource(token) {\n\t  return getSource(token[_tokenize.FIELDS.START_LINE], token[_tokenize.FIELDS.START_COL], token[_tokenize.FIELDS.END_LINE], token[_tokenize.FIELDS.END_COL]);\n\t}\n\tfunction getTokenSourceSpan(startToken, endToken) {\n\t  if (!startToken) {\n\t    return undefined;\n\t  }\n\t  return getSource(startToken[_tokenize.FIELDS.START_LINE], startToken[_tokenize.FIELDS.START_COL], endToken[_tokenize.FIELDS.END_LINE], endToken[_tokenize.FIELDS.END_COL]);\n\t}\n\tfunction unescapeProp(node, prop) {\n\t  var value = node[prop];\n\t  if (typeof value !== \"string\") {\n\t    return;\n\t  }\n\t  if (value.indexOf(\"\\\\\") !== -1) {\n\t    (0, _util.ensureObject)(node, 'raws');\n\t    node[prop] = (0, _util.unesc)(value);\n\t    if (node.raws[prop] === undefined) {\n\t      node.raws[prop] = value;\n\t    }\n\t  }\n\t  return node;\n\t}\n\tfunction indexesOf(array, item) {\n\t  var i = -1;\n\t  var indexes = [];\n\t  while ((i = array.indexOf(item, i + 1)) !== -1) {\n\t    indexes.push(i);\n\t  }\n\t  return indexes;\n\t}\n\tfunction uniqs() {\n\t  var list = Array.prototype.concat.apply([], arguments);\n\t  return list.filter(function (item, i) {\n\t    return i === list.indexOf(item);\n\t  });\n\t}\n\tvar Parser = /*#__PURE__*/function () {\n\t  function Parser(rule, options) {\n\t    if (options === void 0) {\n\t      options = {};\n\t    }\n\t    this.rule = rule;\n\t    this.options = Object.assign({\n\t      lossy: false,\n\t      safe: false\n\t    }, options);\n\t    this.position = 0;\n\t    this.css = typeof this.rule === 'string' ? this.rule : this.rule.selector;\n\t    this.tokens = (0, _tokenize[\"default\"])({\n\t      css: this.css,\n\t      error: this._errorGenerator(),\n\t      safe: this.options.safe\n\t    });\n\t    var rootSource = getTokenSourceSpan(this.tokens[0], this.tokens[this.tokens.length - 1]);\n\t    this.root = new _root[\"default\"]({\n\t      source: rootSource\n\t    });\n\t    this.root.errorGenerator = this._errorGenerator();\n\t    var selector = new _selector[\"default\"]({\n\t      source: {\n\t        start: {\n\t          line: 1,\n\t          column: 1\n\t        }\n\t      }\n\t    });\n\t    this.root.append(selector);\n\t    this.current = selector;\n\t    this.loop();\n\t  }\n\t  var _proto = Parser.prototype;\n\t  _proto._errorGenerator = function _errorGenerator() {\n\t    var _this = this;\n\t    return function (message, errorOptions) {\n\t      if (typeof _this.rule === 'string') {\n\t        return new Error(message);\n\t      }\n\t      return _this.rule.error(message, errorOptions);\n\t    };\n\t  };\n\t  _proto.attribute = function attribute() {\n\t    var attr = [];\n\t    var startingToken = this.currToken;\n\t    this.position++;\n\t    while (this.position < this.tokens.length && this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\n\t      attr.push(this.currToken);\n\t      this.position++;\n\t    }\n\t    if (this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\n\t      return this.expected('closing square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\n\t    }\n\t    var len = attr.length;\n\t    var node = {\n\t      source: getSource(startingToken[1], startingToken[2], this.currToken[3], this.currToken[4]),\n\t      sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\n\t    };\n\t    if (len === 1 && !~[tokens.word].indexOf(attr[0][_tokenize.FIELDS.TYPE])) {\n\t      return this.expected('attribute', attr[0][_tokenize.FIELDS.START_POS]);\n\t    }\n\t    var pos = 0;\n\t    var spaceBefore = '';\n\t    var commentBefore = '';\n\t    var lastAdded = null;\n\t    var spaceAfterMeaningfulToken = false;\n\t    while (pos < len) {\n\t      var token = attr[pos];\n\t      var content = this.content(token);\n\t      var next = attr[pos + 1];\n\t      switch (token[_tokenize.FIELDS.TYPE]) {\n\t        case tokens.space:\n\t          // if (\n\t          //     len === 1 ||\n\t          //     pos === 0 && this.content(next) === '|'\n\t          // ) {\n\t          //     return this.expected('attribute', token[TOKEN.START_POS], content);\n\t          // }\n\t          spaceAfterMeaningfulToken = true;\n\t          if (this.options.lossy) {\n\t            break;\n\t          }\n\t          if (lastAdded) {\n\t            (0, _util.ensureObject)(node, 'spaces', lastAdded);\n\t            var prevContent = node.spaces[lastAdded].after || '';\n\t            node.spaces[lastAdded].after = prevContent + content;\n\t            var existingComment = (0, _util.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || null;\n\t            if (existingComment) {\n\t              node.raws.spaces[lastAdded].after = existingComment + content;\n\t            }\n\t          } else {\n\t            spaceBefore = spaceBefore + content;\n\t            commentBefore = commentBefore + content;\n\t          }\n\t          break;\n\t        case tokens.asterisk:\n\t          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n\t            node.operator = content;\n\t            lastAdded = 'operator';\n\t          } else if ((!node.namespace || lastAdded === \"namespace\" && !spaceAfterMeaningfulToken) && next) {\n\t            if (spaceBefore) {\n\t              (0, _util.ensureObject)(node, 'spaces', 'attribute');\n\t              node.spaces.attribute.before = spaceBefore;\n\t              spaceBefore = '';\n\t            }\n\t            if (commentBefore) {\n\t              (0, _util.ensureObject)(node, 'raws', 'spaces', 'attribute');\n\t              node.raws.spaces.attribute.before = spaceBefore;\n\t              commentBefore = '';\n\t            }\n\t            node.namespace = (node.namespace || \"\") + content;\n\t            var rawValue = (0, _util.getProp)(node, 'raws', 'namespace') || null;\n\t            if (rawValue) {\n\t              node.raws.namespace += content;\n\t            }\n\t            lastAdded = 'namespace';\n\t          }\n\t          spaceAfterMeaningfulToken = false;\n\t          break;\n\t        case tokens.dollar:\n\t          if (lastAdded === \"value\") {\n\t            var oldRawValue = (0, _util.getProp)(node, 'raws', 'value');\n\t            node.value += \"$\";\n\t            if (oldRawValue) {\n\t              node.raws.value = oldRawValue + \"$\";\n\t            }\n\t            break;\n\t          }\n\t        // Falls through\n\t        case tokens.caret:\n\t          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n\t            node.operator = content;\n\t            lastAdded = 'operator';\n\t          }\n\t          spaceAfterMeaningfulToken = false;\n\t          break;\n\t        case tokens.combinator:\n\t          if (content === '~' && next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n\t            node.operator = content;\n\t            lastAdded = 'operator';\n\t          }\n\t          if (content !== '|') {\n\t            spaceAfterMeaningfulToken = false;\n\t            break;\n\t          }\n\t          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n\t            node.operator = content;\n\t            lastAdded = 'operator';\n\t          } else if (!node.namespace && !node.attribute) {\n\t            node.namespace = true;\n\t          }\n\t          spaceAfterMeaningfulToken = false;\n\t          break;\n\t        case tokens.word:\n\t          if (next && this.content(next) === '|' && attr[pos + 2] && attr[pos + 2][_tokenize.FIELDS.TYPE] !== tokens.equals &&\n\t          // this look-ahead probably fails with comment nodes involved.\n\t          !node.operator && !node.namespace) {\n\t            node.namespace = content;\n\t            lastAdded = 'namespace';\n\t          } else if (!node.attribute || lastAdded === \"attribute\" && !spaceAfterMeaningfulToken) {\n\t            if (spaceBefore) {\n\t              (0, _util.ensureObject)(node, 'spaces', 'attribute');\n\t              node.spaces.attribute.before = spaceBefore;\n\t              spaceBefore = '';\n\t            }\n\t            if (commentBefore) {\n\t              (0, _util.ensureObject)(node, 'raws', 'spaces', 'attribute');\n\t              node.raws.spaces.attribute.before = commentBefore;\n\t              commentBefore = '';\n\t            }\n\t            node.attribute = (node.attribute || \"\") + content;\n\t            var _rawValue = (0, _util.getProp)(node, 'raws', 'attribute') || null;\n\t            if (_rawValue) {\n\t              node.raws.attribute += content;\n\t            }\n\t            lastAdded = 'attribute';\n\t          } else if (!node.value && node.value !== \"\" || lastAdded === \"value\" && !(spaceAfterMeaningfulToken || node.quoteMark)) {\n\t            var _unescaped = (0, _util.unesc)(content);\n\t            var _oldRawValue = (0, _util.getProp)(node, 'raws', 'value') || '';\n\t            var oldValue = node.value || '';\n\t            node.value = oldValue + _unescaped;\n\t            node.quoteMark = null;\n\t            if (_unescaped !== content || _oldRawValue) {\n\t              (0, _util.ensureObject)(node, 'raws');\n\t              node.raws.value = (_oldRawValue || oldValue) + content;\n\t            }\n\t            lastAdded = 'value';\n\t          } else {\n\t            var insensitive = content === 'i' || content === \"I\";\n\t            if ((node.value || node.value === '') && (node.quoteMark || spaceAfterMeaningfulToken)) {\n\t              node.insensitive = insensitive;\n\t              if (!insensitive || content === \"I\") {\n\t                (0, _util.ensureObject)(node, 'raws');\n\t                node.raws.insensitiveFlag = content;\n\t              }\n\t              lastAdded = 'insensitive';\n\t              if (spaceBefore) {\n\t                (0, _util.ensureObject)(node, 'spaces', 'insensitive');\n\t                node.spaces.insensitive.before = spaceBefore;\n\t                spaceBefore = '';\n\t              }\n\t              if (commentBefore) {\n\t                (0, _util.ensureObject)(node, 'raws', 'spaces', 'insensitive');\n\t                node.raws.spaces.insensitive.before = commentBefore;\n\t                commentBefore = '';\n\t              }\n\t            } else if (node.value || node.value === '') {\n\t              lastAdded = 'value';\n\t              node.value += content;\n\t              if (node.raws.value) {\n\t                node.raws.value += content;\n\t              }\n\t            }\n\t          }\n\t          spaceAfterMeaningfulToken = false;\n\t          break;\n\t        case tokens.str:\n\t          if (!node.attribute || !node.operator) {\n\t            return this.error(\"Expected an attribute followed by an operator preceding the string.\", {\n\t              index: token[_tokenize.FIELDS.START_POS]\n\t            });\n\t          }\n\t          var _unescapeValue = (0, _attribute.unescapeValue)(content),\n\t            unescaped = _unescapeValue.unescaped,\n\t            quoteMark = _unescapeValue.quoteMark;\n\t          node.value = unescaped;\n\t          node.quoteMark = quoteMark;\n\t          lastAdded = 'value';\n\t          (0, _util.ensureObject)(node, 'raws');\n\t          node.raws.value = content;\n\t          spaceAfterMeaningfulToken = false;\n\t          break;\n\t        case tokens.equals:\n\t          if (!node.attribute) {\n\t            return this.expected('attribute', token[_tokenize.FIELDS.START_POS], content);\n\t          }\n\t          if (node.value) {\n\t            return this.error('Unexpected \"=\" found; an operator was already defined.', {\n\t              index: token[_tokenize.FIELDS.START_POS]\n\t            });\n\t          }\n\t          node.operator = node.operator ? node.operator + content : content;\n\t          lastAdded = 'operator';\n\t          spaceAfterMeaningfulToken = false;\n\t          break;\n\t        case tokens.comment:\n\t          if (lastAdded) {\n\t            if (spaceAfterMeaningfulToken || next && next[_tokenize.FIELDS.TYPE] === tokens.space || lastAdded === 'insensitive') {\n\t              var lastComment = (0, _util.getProp)(node, 'spaces', lastAdded, 'after') || '';\n\t              var rawLastComment = (0, _util.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || lastComment;\n\t              (0, _util.ensureObject)(node, 'raws', 'spaces', lastAdded);\n\t              node.raws.spaces[lastAdded].after = rawLastComment + content;\n\t            } else {\n\t              var lastValue = node[lastAdded] || '';\n\t              var rawLastValue = (0, _util.getProp)(node, 'raws', lastAdded) || lastValue;\n\t              (0, _util.ensureObject)(node, 'raws');\n\t              node.raws[lastAdded] = rawLastValue + content;\n\t            }\n\t          } else {\n\t            commentBefore = commentBefore + content;\n\t          }\n\t          break;\n\t        default:\n\t          return this.error(\"Unexpected \\\"\" + content + \"\\\" found.\", {\n\t            index: token[_tokenize.FIELDS.START_POS]\n\t          });\n\t      }\n\t      pos++;\n\t    }\n\t    unescapeProp(node, \"attribute\");\n\t    unescapeProp(node, \"namespace\");\n\t    this.newNode(new _attribute[\"default\"](node));\n\t    this.position++;\n\t  }\n\n\t  /**\n\t   * return a node containing meaningless garbage up to (but not including) the specified token position.\n\t   * if the token position is negative, all remaining tokens are consumed.\n\t   *\n\t   * This returns an array containing a single string node if all whitespace,\n\t   * otherwise an array of comment nodes with space before and after.\n\t   *\n\t   * These tokens are not added to the current selector, the caller can add them or use them to amend\n\t   * a previous node's space metadata.\n\t   *\n\t   * In lossy mode, this returns only comments.\n\t   */;\n\t  _proto.parseWhitespaceEquivalentTokens = function parseWhitespaceEquivalentTokens(stopPosition) {\n\t    if (stopPosition < 0) {\n\t      stopPosition = this.tokens.length;\n\t    }\n\t    var startPosition = this.position;\n\t    var nodes = [];\n\t    var space = \"\";\n\t    var lastComment = undefined;\n\t    do {\n\t      if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {\n\t        if (!this.options.lossy) {\n\t          space += this.content();\n\t        }\n\t      } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.comment) {\n\t        var spaces = {};\n\t        if (space) {\n\t          spaces.before = space;\n\t          space = \"\";\n\t        }\n\t        lastComment = new _comment[\"default\"]({\n\t          value: this.content(),\n\t          source: getTokenSource(this.currToken),\n\t          sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\n\t          spaces: spaces\n\t        });\n\t        nodes.push(lastComment);\n\t      }\n\t    } while (++this.position < stopPosition);\n\t    if (space) {\n\t      if (lastComment) {\n\t        lastComment.spaces.after = space;\n\t      } else if (!this.options.lossy) {\n\t        var firstToken = this.tokens[startPosition];\n\t        var lastToken = this.tokens[this.position - 1];\n\t        nodes.push(new _string[\"default\"]({\n\t          value: '',\n\t          source: getSource(firstToken[_tokenize.FIELDS.START_LINE], firstToken[_tokenize.FIELDS.START_COL], lastToken[_tokenize.FIELDS.END_LINE], lastToken[_tokenize.FIELDS.END_COL]),\n\t          sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\n\t          spaces: {\n\t            before: space,\n\t            after: ''\n\t          }\n\t        }));\n\t      }\n\t    }\n\t    return nodes;\n\t  }\n\n\t  /**\n\t   *\n\t   * @param {*} nodes\n\t   */;\n\t  _proto.convertWhitespaceNodesToSpace = function convertWhitespaceNodesToSpace(nodes, requiredSpace) {\n\t    var _this2 = this;\n\t    if (requiredSpace === void 0) {\n\t      requiredSpace = false;\n\t    }\n\t    var space = \"\";\n\t    var rawSpace = \"\";\n\t    nodes.forEach(function (n) {\n\t      var spaceBefore = _this2.lossySpace(n.spaces.before, requiredSpace);\n\t      var rawSpaceBefore = _this2.lossySpace(n.rawSpaceBefore, requiredSpace);\n\t      space += spaceBefore + _this2.lossySpace(n.spaces.after, requiredSpace && spaceBefore.length === 0);\n\t      rawSpace += spaceBefore + n.value + _this2.lossySpace(n.rawSpaceAfter, requiredSpace && rawSpaceBefore.length === 0);\n\t    });\n\t    if (rawSpace === space) {\n\t      rawSpace = undefined;\n\t    }\n\t    var result = {\n\t      space: space,\n\t      rawSpace: rawSpace\n\t    };\n\t    return result;\n\t  };\n\t  _proto.isNamedCombinator = function isNamedCombinator(position) {\n\t    if (position === void 0) {\n\t      position = this.position;\n\t    }\n\t    return this.tokens[position + 0] && this.tokens[position + 0][_tokenize.FIELDS.TYPE] === tokens.slash && this.tokens[position + 1] && this.tokens[position + 1][_tokenize.FIELDS.TYPE] === tokens.word && this.tokens[position + 2] && this.tokens[position + 2][_tokenize.FIELDS.TYPE] === tokens.slash;\n\t  };\n\t  _proto.namedCombinator = function namedCombinator() {\n\t    if (this.isNamedCombinator()) {\n\t      var nameRaw = this.content(this.tokens[this.position + 1]);\n\t      var name = (0, _util.unesc)(nameRaw).toLowerCase();\n\t      var raws = {};\n\t      if (name !== nameRaw) {\n\t        raws.value = \"/\" + nameRaw + \"/\";\n\t      }\n\t      var node = new _combinator[\"default\"]({\n\t        value: \"/\" + name + \"/\",\n\t        source: getSource(this.currToken[_tokenize.FIELDS.START_LINE], this.currToken[_tokenize.FIELDS.START_COL], this.tokens[this.position + 2][_tokenize.FIELDS.END_LINE], this.tokens[this.position + 2][_tokenize.FIELDS.END_COL]),\n\t        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\n\t        raws: raws\n\t      });\n\t      this.position = this.position + 3;\n\t      return node;\n\t    } else {\n\t      this.unexpected();\n\t    }\n\t  };\n\t  _proto.combinator = function combinator() {\n\t    var _this3 = this;\n\t    if (this.content() === '|') {\n\t      return this.namespace();\n\t    }\n\t    // We need to decide between a space that's a descendant combinator and meaningless whitespace at the end of a selector.\n\t    var nextSigTokenPos = this.locateNextMeaningfulToken(this.position);\n\t    if (nextSigTokenPos < 0 || this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE] === tokens.comma) {\n\t      var nodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\n\t      if (nodes.length > 0) {\n\t        var last = this.current.last;\n\t        if (last) {\n\t          var _this$convertWhitespa = this.convertWhitespaceNodesToSpace(nodes),\n\t            space = _this$convertWhitespa.space,\n\t            rawSpace = _this$convertWhitespa.rawSpace;\n\t          if (rawSpace !== undefined) {\n\t            last.rawSpaceAfter += rawSpace;\n\t          }\n\t          last.spaces.after += space;\n\t        } else {\n\t          nodes.forEach(function (n) {\n\t            return _this3.newNode(n);\n\t          });\n\t        }\n\t      }\n\t      return;\n\t    }\n\t    var firstToken = this.currToken;\n\t    var spaceOrDescendantSelectorNodes = undefined;\n\t    if (nextSigTokenPos > this.position) {\n\t      spaceOrDescendantSelectorNodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\n\t    }\n\t    var node;\n\t    if (this.isNamedCombinator()) {\n\t      node = this.namedCombinator();\n\t    } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.combinator) {\n\t      node = new _combinator[\"default\"]({\n\t        value: this.content(),\n\t        source: getTokenSource(this.currToken),\n\t        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS]\n\t      });\n\t      this.position++;\n\t    } else if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) ; else if (!spaceOrDescendantSelectorNodes) {\n\t      this.unexpected();\n\t    }\n\t    if (node) {\n\t      if (spaceOrDescendantSelectorNodes) {\n\t        var _this$convertWhitespa2 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes),\n\t          _space = _this$convertWhitespa2.space,\n\t          _rawSpace = _this$convertWhitespa2.rawSpace;\n\t        node.spaces.before = _space;\n\t        node.rawSpaceBefore = _rawSpace;\n\t      }\n\t    } else {\n\t      // descendant combinator\n\t      var _this$convertWhitespa3 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes, true),\n\t        _space2 = _this$convertWhitespa3.space,\n\t        _rawSpace2 = _this$convertWhitespa3.rawSpace;\n\t      if (!_rawSpace2) {\n\t        _rawSpace2 = _space2;\n\t      }\n\t      var spaces = {};\n\t      var raws = {\n\t        spaces: {}\n\t      };\n\t      if (_space2.endsWith(' ') && _rawSpace2.endsWith(' ')) {\n\t        spaces.before = _space2.slice(0, _space2.length - 1);\n\t        raws.spaces.before = _rawSpace2.slice(0, _rawSpace2.length - 1);\n\t      } else if (_space2.startsWith(' ') && _rawSpace2.startsWith(' ')) {\n\t        spaces.after = _space2.slice(1);\n\t        raws.spaces.after = _rawSpace2.slice(1);\n\t      } else {\n\t        raws.value = _rawSpace2;\n\t      }\n\t      node = new _combinator[\"default\"]({\n\t        value: ' ',\n\t        source: getTokenSourceSpan(firstToken, this.tokens[this.position - 1]),\n\t        sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\n\t        spaces: spaces,\n\t        raws: raws\n\t      });\n\t    }\n\t    if (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.space) {\n\t      node.spaces.after = this.optionalSpace(this.content());\n\t      this.position++;\n\t    }\n\t    return this.newNode(node);\n\t  };\n\t  _proto.comma = function comma() {\n\t    if (this.position === this.tokens.length - 1) {\n\t      this.root.trailingComma = true;\n\t      this.position++;\n\t      return;\n\t    }\n\t    this.current._inferEndPosition();\n\t    var selector = new _selector[\"default\"]({\n\t      source: {\n\t        start: tokenStart(this.tokens[this.position + 1])\n\t      }\n\t    });\n\t    this.current.parent.append(selector);\n\t    this.current = selector;\n\t    this.position++;\n\t  };\n\t  _proto.comment = function comment() {\n\t    var current = this.currToken;\n\t    this.newNode(new _comment[\"default\"]({\n\t      value: this.content(),\n\t      source: getTokenSource(current),\n\t      sourceIndex: current[_tokenize.FIELDS.START_POS]\n\t    }));\n\t    this.position++;\n\t  };\n\t  _proto.error = function error(message, opts) {\n\t    throw this.root.error(message, opts);\n\t  };\n\t  _proto.missingBackslash = function missingBackslash() {\n\t    return this.error('Expected a backslash preceding the semicolon.', {\n\t      index: this.currToken[_tokenize.FIELDS.START_POS]\n\t    });\n\t  };\n\t  _proto.missingParenthesis = function missingParenthesis() {\n\t    return this.expected('opening parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\n\t  };\n\t  _proto.missingSquareBracket = function missingSquareBracket() {\n\t    return this.expected('opening square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\n\t  };\n\t  _proto.unexpected = function unexpected() {\n\t    return this.error(\"Unexpected '\" + this.content() + \"'. Escaping special characters with \\\\ may help.\", this.currToken[_tokenize.FIELDS.START_POS]);\n\t  };\n\t  _proto.unexpectedPipe = function unexpectedPipe() {\n\t    return this.error(\"Unexpected '|'.\", this.currToken[_tokenize.FIELDS.START_POS]);\n\t  };\n\t  _proto.namespace = function namespace() {\n\t    var before = this.prevToken && this.content(this.prevToken) || true;\n\t    if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.word) {\n\t      this.position++;\n\t      return this.word(before);\n\t    } else if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.asterisk) {\n\t      this.position++;\n\t      return this.universal(before);\n\t    }\n\t    this.unexpectedPipe();\n\t  };\n\t  _proto.nesting = function nesting() {\n\t    if (this.nextToken) {\n\t      var nextContent = this.content(this.nextToken);\n\t      if (nextContent === \"|\") {\n\t        this.position++;\n\t        return;\n\t      }\n\t    }\n\t    var current = this.currToken;\n\t    this.newNode(new _nesting[\"default\"]({\n\t      value: this.content(),\n\t      source: getTokenSource(current),\n\t      sourceIndex: current[_tokenize.FIELDS.START_POS]\n\t    }));\n\t    this.position++;\n\t  };\n\t  _proto.parentheses = function parentheses() {\n\t    var last = this.current.last;\n\t    var unbalanced = 1;\n\t    this.position++;\n\t    if (last && last.type === types$1.PSEUDO) {\n\t      var selector = new _selector[\"default\"]({\n\t        source: {\n\t          start: tokenStart(this.tokens[this.position - 1])\n\t        }\n\t      });\n\t      var cache = this.current;\n\t      last.append(selector);\n\t      this.current = selector;\n\t      while (this.position < this.tokens.length && unbalanced) {\n\t        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n\t          unbalanced++;\n\t        }\n\t        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n\t          unbalanced--;\n\t        }\n\t        if (unbalanced) {\n\t          this.parse();\n\t        } else {\n\t          this.current.source.end = tokenEnd(this.currToken);\n\t          this.current.parent.source.end = tokenEnd(this.currToken);\n\t          this.position++;\n\t        }\n\t      }\n\t      this.current = cache;\n\t    } else {\n\t      // I think this case should be an error. It's used to implement a basic parse of media queries\n\t      // but I don't think it's a good idea.\n\t      var parenStart = this.currToken;\n\t      var parenValue = \"(\";\n\t      var parenEnd;\n\t      while (this.position < this.tokens.length && unbalanced) {\n\t        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n\t          unbalanced++;\n\t        }\n\t        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n\t          unbalanced--;\n\t        }\n\t        parenEnd = this.currToken;\n\t        parenValue += this.parseParenthesisToken(this.currToken);\n\t        this.position++;\n\t      }\n\t      if (last) {\n\t        last.appendToPropertyAndEscape(\"value\", parenValue, parenValue);\n\t      } else {\n\t        this.newNode(new _string[\"default\"]({\n\t          value: parenValue,\n\t          source: getSource(parenStart[_tokenize.FIELDS.START_LINE], parenStart[_tokenize.FIELDS.START_COL], parenEnd[_tokenize.FIELDS.END_LINE], parenEnd[_tokenize.FIELDS.END_COL]),\n\t          sourceIndex: parenStart[_tokenize.FIELDS.START_POS]\n\t        }));\n\t      }\n\t    }\n\t    if (unbalanced) {\n\t      return this.expected('closing parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\n\t    }\n\t  };\n\t  _proto.pseudo = function pseudo() {\n\t    var _this4 = this;\n\t    var pseudoStr = '';\n\t    var startingToken = this.currToken;\n\t    while (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.colon) {\n\t      pseudoStr += this.content();\n\t      this.position++;\n\t    }\n\t    if (!this.currToken) {\n\t      return this.expected(['pseudo-class', 'pseudo-element'], this.position - 1);\n\t    }\n\t    if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.word) {\n\t      this.splitWord(false, function (first, length) {\n\t        pseudoStr += first;\n\t        _this4.newNode(new _pseudo[\"default\"]({\n\t          value: pseudoStr,\n\t          source: getTokenSourceSpan(startingToken, _this4.currToken),\n\t          sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\n\t        }));\n\t        if (length > 1 && _this4.nextToken && _this4.nextToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n\t          _this4.error('Misplaced parenthesis.', {\n\t            index: _this4.nextToken[_tokenize.FIELDS.START_POS]\n\t          });\n\t        }\n\t      });\n\t    } else {\n\t      return this.expected(['pseudo-class', 'pseudo-element'], this.currToken[_tokenize.FIELDS.START_POS]);\n\t    }\n\t  };\n\t  _proto.space = function space() {\n\t    var content = this.content();\n\t    // Handle space before and after the selector\n\t    if (this.position === 0 || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis || this.current.nodes.every(function (node) {\n\t      return node.type === 'comment';\n\t    })) {\n\t      this.spaces = this.optionalSpace(content);\n\t      this.position++;\n\t    } else if (this.position === this.tokens.length - 1 || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n\t      this.current.last.spaces.after = this.optionalSpace(content);\n\t      this.position++;\n\t    } else {\n\t      this.combinator();\n\t    }\n\t  };\n\t  _proto.string = function string() {\n\t    var current = this.currToken;\n\t    this.newNode(new _string[\"default\"]({\n\t      value: this.content(),\n\t      source: getTokenSource(current),\n\t      sourceIndex: current[_tokenize.FIELDS.START_POS]\n\t    }));\n\t    this.position++;\n\t  };\n\t  _proto.universal = function universal(namespace) {\n\t    var nextToken = this.nextToken;\n\t    if (nextToken && this.content(nextToken) === '|') {\n\t      this.position++;\n\t      return this.namespace();\n\t    }\n\t    var current = this.currToken;\n\t    this.newNode(new _universal[\"default\"]({\n\t      value: this.content(),\n\t      source: getTokenSource(current),\n\t      sourceIndex: current[_tokenize.FIELDS.START_POS]\n\t    }), namespace);\n\t    this.position++;\n\t  };\n\t  _proto.splitWord = function splitWord(namespace, firstCallback) {\n\t    var _this5 = this;\n\t    var nextToken = this.nextToken;\n\t    var word = this.content();\n\t    while (nextToken && ~[tokens.dollar, tokens.caret, tokens.equals, tokens.word].indexOf(nextToken[_tokenize.FIELDS.TYPE])) {\n\t      this.position++;\n\t      var current = this.content();\n\t      word += current;\n\t      if (current.lastIndexOf('\\\\') === current.length - 1) {\n\t        var next = this.nextToken;\n\t        if (next && next[_tokenize.FIELDS.TYPE] === tokens.space) {\n\t          word += this.requiredSpace(this.content(next));\n\t          this.position++;\n\t        }\n\t      }\n\t      nextToken = this.nextToken;\n\t    }\n\t    var hasClass = indexesOf(word, '.').filter(function (i) {\n\t      // Allow escaped dot within class name\n\t      var escapedDot = word[i - 1] === '\\\\';\n\t      // Allow decimal numbers percent in @keyframes\n\t      var isKeyframesPercent = /^\\d+\\.\\d+%$/.test(word);\n\t      return !escapedDot && !isKeyframesPercent;\n\t    });\n\t    var hasId = indexesOf(word, '#').filter(function (i) {\n\t      return word[i - 1] !== '\\\\';\n\t    });\n\t    // Eliminate Sass interpolations from the list of id indexes\n\t    var interpolations = indexesOf(word, '#{');\n\t    if (interpolations.length) {\n\t      hasId = hasId.filter(function (hashIndex) {\n\t        return !~interpolations.indexOf(hashIndex);\n\t      });\n\t    }\n\t    var indices = (0, _sortAscending[\"default\"])(uniqs([0].concat(hasClass, hasId)));\n\t    indices.forEach(function (ind, i) {\n\t      var index = indices[i + 1] || word.length;\n\t      var value = word.slice(ind, index);\n\t      if (i === 0 && firstCallback) {\n\t        return firstCallback.call(_this5, value, indices.length);\n\t      }\n\t      var node;\n\t      var current = _this5.currToken;\n\t      var sourceIndex = current[_tokenize.FIELDS.START_POS] + indices[i];\n\t      var source = getSource(current[1], current[2] + ind, current[3], current[2] + (index - 1));\n\t      if (~hasClass.indexOf(ind)) {\n\t        var classNameOpts = {\n\t          value: value.slice(1),\n\t          source: source,\n\t          sourceIndex: sourceIndex\n\t        };\n\t        node = new _className[\"default\"](unescapeProp(classNameOpts, \"value\"));\n\t      } else if (~hasId.indexOf(ind)) {\n\t        var idOpts = {\n\t          value: value.slice(1),\n\t          source: source,\n\t          sourceIndex: sourceIndex\n\t        };\n\t        node = new _id[\"default\"](unescapeProp(idOpts, \"value\"));\n\t      } else {\n\t        var tagOpts = {\n\t          value: value,\n\t          source: source,\n\t          sourceIndex: sourceIndex\n\t        };\n\t        unescapeProp(tagOpts, \"value\");\n\t        node = new _tag[\"default\"](tagOpts);\n\t      }\n\t      _this5.newNode(node, namespace);\n\t      // Ensure that the namespace is used only once\n\t      namespace = null;\n\t    });\n\t    this.position++;\n\t  };\n\t  _proto.word = function word(namespace) {\n\t    var nextToken = this.nextToken;\n\t    if (nextToken && this.content(nextToken) === '|') {\n\t      this.position++;\n\t      return this.namespace();\n\t    }\n\t    return this.splitWord(namespace);\n\t  };\n\t  _proto.loop = function loop() {\n\t    while (this.position < this.tokens.length) {\n\t      this.parse(true);\n\t    }\n\t    this.current._inferEndPosition();\n\t    return this.root;\n\t  };\n\t  _proto.parse = function parse(throwOnParenthesis) {\n\t    switch (this.currToken[_tokenize.FIELDS.TYPE]) {\n\t      case tokens.space:\n\t        this.space();\n\t        break;\n\t      case tokens.comment:\n\t        this.comment();\n\t        break;\n\t      case tokens.openParenthesis:\n\t        this.parentheses();\n\t        break;\n\t      case tokens.closeParenthesis:\n\t        if (throwOnParenthesis) {\n\t          this.missingParenthesis();\n\t        }\n\t        break;\n\t      case tokens.openSquare:\n\t        this.attribute();\n\t        break;\n\t      case tokens.dollar:\n\t      case tokens.caret:\n\t      case tokens.equals:\n\t      case tokens.word:\n\t        this.word();\n\t        break;\n\t      case tokens.colon:\n\t        this.pseudo();\n\t        break;\n\t      case tokens.comma:\n\t        this.comma();\n\t        break;\n\t      case tokens.asterisk:\n\t        this.universal();\n\t        break;\n\t      case tokens.ampersand:\n\t        this.nesting();\n\t        break;\n\t      case tokens.slash:\n\t      case tokens.combinator:\n\t        this.combinator();\n\t        break;\n\t      case tokens.str:\n\t        this.string();\n\t        break;\n\t      // These cases throw; no break needed.\n\t      case tokens.closeSquare:\n\t        this.missingSquareBracket();\n\t      case tokens.semicolon:\n\t        this.missingBackslash();\n\t      default:\n\t        this.unexpected();\n\t    }\n\t  }\n\n\t  /**\n\t   * Helpers\n\t   */;\n\t  _proto.expected = function expected(description, index, found) {\n\t    if (Array.isArray(description)) {\n\t      var last = description.pop();\n\t      description = description.join(', ') + \" or \" + last;\n\t    }\n\t    var an = /^[aeiou]/.test(description[0]) ? 'an' : 'a';\n\t    if (!found) {\n\t      return this.error(\"Expected \" + an + \" \" + description + \".\", {\n\t        index: index\n\t      });\n\t    }\n\t    return this.error(\"Expected \" + an + \" \" + description + \", found \\\"\" + found + \"\\\" instead.\", {\n\t      index: index\n\t    });\n\t  };\n\t  _proto.requiredSpace = function requiredSpace(space) {\n\t    return this.options.lossy ? ' ' : space;\n\t  };\n\t  _proto.optionalSpace = function optionalSpace(space) {\n\t    return this.options.lossy ? '' : space;\n\t  };\n\t  _proto.lossySpace = function lossySpace(space, required) {\n\t    if (this.options.lossy) {\n\t      return required ? ' ' : '';\n\t    } else {\n\t      return space;\n\t    }\n\t  };\n\t  _proto.parseParenthesisToken = function parseParenthesisToken(token) {\n\t    var content = this.content(token);\n\t    if (token[_tokenize.FIELDS.TYPE] === tokens.space) {\n\t      return this.requiredSpace(content);\n\t    } else {\n\t      return content;\n\t    }\n\t  };\n\t  _proto.newNode = function newNode(node, namespace) {\n\t    if (namespace) {\n\t      if (/^ +$/.test(namespace)) {\n\t        if (!this.options.lossy) {\n\t          this.spaces = (this.spaces || '') + namespace;\n\t        }\n\t        namespace = true;\n\t      }\n\t      node.namespace = namespace;\n\t      unescapeProp(node, \"namespace\");\n\t    }\n\t    if (this.spaces) {\n\t      node.spaces.before = this.spaces;\n\t      this.spaces = '';\n\t    }\n\t    return this.current.append(node);\n\t  };\n\t  _proto.content = function content(token) {\n\t    if (token === void 0) {\n\t      token = this.currToken;\n\t    }\n\t    return this.css.slice(token[_tokenize.FIELDS.START_POS], token[_tokenize.FIELDS.END_POS]);\n\t  };\n\t  /**\n\t   * returns the index of the next non-whitespace, non-comment token.\n\t   * returns -1 if no meaningful token is found.\n\t   */\n\t  _proto.locateNextMeaningfulToken = function locateNextMeaningfulToken(startPosition) {\n\t    if (startPosition === void 0) {\n\t      startPosition = this.position + 1;\n\t    }\n\t    var searchPosition = startPosition;\n\t    while (searchPosition < this.tokens.length) {\n\t      if (WHITESPACE_EQUIV_TOKENS[this.tokens[searchPosition][_tokenize.FIELDS.TYPE]]) {\n\t        searchPosition++;\n\t        continue;\n\t      } else {\n\t        return searchPosition;\n\t      }\n\t    }\n\t    return -1;\n\t  };\n\t  _createClass(Parser, [{\n\t    key: \"currToken\",\n\t    get: function get() {\n\t      return this.tokens[this.position];\n\t    }\n\t  }, {\n\t    key: \"nextToken\",\n\t    get: function get() {\n\t      return this.tokens[this.position + 1];\n\t    }\n\t  }, {\n\t    key: \"prevToken\",\n\t    get: function get() {\n\t      return this.tokens[this.position - 1];\n\t    }\n\t  }]);\n\t  return Parser;\n\t}();\n\texports[\"default\"] = Parser;\n\tmodule.exports = exports.default; \n} (parser, parser.exports));\n\nvar parserExports = parser.exports;\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\tvar _parser = _interopRequireDefault(parserExports);\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\tvar Processor = /*#__PURE__*/function () {\n\t  function Processor(func, options) {\n\t    this.func = func || function noop() {};\n\t    this.funcRes = null;\n\t    this.options = options;\n\t  }\n\t  var _proto = Processor.prototype;\n\t  _proto._shouldUpdateSelector = function _shouldUpdateSelector(rule, options) {\n\t    if (options === void 0) {\n\t      options = {};\n\t    }\n\t    var merged = Object.assign({}, this.options, options);\n\t    if (merged.updateSelector === false) {\n\t      return false;\n\t    } else {\n\t      return typeof rule !== \"string\";\n\t    }\n\t  };\n\t  _proto._isLossy = function _isLossy(options) {\n\t    if (options === void 0) {\n\t      options = {};\n\t    }\n\t    var merged = Object.assign({}, this.options, options);\n\t    if (merged.lossless === false) {\n\t      return true;\n\t    } else {\n\t      return false;\n\t    }\n\t  };\n\t  _proto._root = function _root(rule, options) {\n\t    if (options === void 0) {\n\t      options = {};\n\t    }\n\t    var parser = new _parser[\"default\"](rule, this._parseOptions(options));\n\t    return parser.root;\n\t  };\n\t  _proto._parseOptions = function _parseOptions(options) {\n\t    return {\n\t      lossy: this._isLossy(options)\n\t    };\n\t  };\n\t  _proto._run = function _run(rule, options) {\n\t    var _this = this;\n\t    if (options === void 0) {\n\t      options = {};\n\t    }\n\t    return new Promise(function (resolve, reject) {\n\t      try {\n\t        var root = _this._root(rule, options);\n\t        Promise.resolve(_this.func(root)).then(function (transform) {\n\t          var string = undefined;\n\t          if (_this._shouldUpdateSelector(rule, options)) {\n\t            string = root.toString();\n\t            rule.selector = string;\n\t          }\n\t          return {\n\t            transform: transform,\n\t            root: root,\n\t            string: string\n\t          };\n\t        }).then(resolve, reject);\n\t      } catch (e) {\n\t        reject(e);\n\t        return;\n\t      }\n\t    });\n\t  };\n\t  _proto._runSync = function _runSync(rule, options) {\n\t    if (options === void 0) {\n\t      options = {};\n\t    }\n\t    var root = this._root(rule, options);\n\t    var transform = this.func(root);\n\t    if (transform && typeof transform.then === \"function\") {\n\t      throw new Error(\"Selector processor returned a promise to a synchronous call.\");\n\t    }\n\t    var string = undefined;\n\t    if (options.updateSelector && typeof rule !== \"string\") {\n\t      string = root.toString();\n\t      rule.selector = string;\n\t    }\n\t    return {\n\t      transform: transform,\n\t      root: root,\n\t      string: string\n\t    };\n\t  }\n\n\t  /**\n\t   * Process rule into a selector AST.\n\t   *\n\t   * @param rule {postcss.Rule | string} The css selector to be processed\n\t   * @param options The options for processing\n\t   * @returns {Promise<parser.Root>} The AST of the selector after processing it.\n\t   */;\n\t  _proto.ast = function ast(rule, options) {\n\t    return this._run(rule, options).then(function (result) {\n\t      return result.root;\n\t    });\n\t  }\n\n\t  /**\n\t   * Process rule into a selector AST synchronously.\n\t   *\n\t   * @param rule {postcss.Rule | string} The css selector to be processed\n\t   * @param options The options for processing\n\t   * @returns {parser.Root} The AST of the selector after processing it.\n\t   */;\n\t  _proto.astSync = function astSync(rule, options) {\n\t    return this._runSync(rule, options).root;\n\t  }\n\n\t  /**\n\t   * Process a selector into a transformed value asynchronously\n\t   *\n\t   * @param rule {postcss.Rule | string} The css selector to be processed\n\t   * @param options The options for processing\n\t   * @returns {Promise<any>} The value returned by the processor.\n\t   */;\n\t  _proto.transform = function transform(rule, options) {\n\t    return this._run(rule, options).then(function (result) {\n\t      return result.transform;\n\t    });\n\t  }\n\n\t  /**\n\t   * Process a selector into a transformed value synchronously.\n\t   *\n\t   * @param rule {postcss.Rule | string} The css selector to be processed\n\t   * @param options The options for processing\n\t   * @returns {any} The value returned by the processor.\n\t   */;\n\t  _proto.transformSync = function transformSync(rule, options) {\n\t    return this._runSync(rule, options).transform;\n\t  }\n\n\t  /**\n\t   * Process a selector into a new selector string asynchronously.\n\t   *\n\t   * @param rule {postcss.Rule | string} The css selector to be processed\n\t   * @param options The options for processing\n\t   * @returns {string} the selector after processing.\n\t   */;\n\t  _proto.process = function process(rule, options) {\n\t    return this._run(rule, options).then(function (result) {\n\t      return result.string || result.root.toString();\n\t    });\n\t  }\n\n\t  /**\n\t   * Process a selector into a new selector string synchronously.\n\t   *\n\t   * @param rule {postcss.Rule | string} The css selector to be processed\n\t   * @param options The options for processing\n\t   * @returns {string} the selector after processing.\n\t   */;\n\t  _proto.processSync = function processSync(rule, options) {\n\t    var result = this._runSync(rule, options);\n\t    return result.string || result.root.toString();\n\t  };\n\t  return Processor;\n\t}();\n\texports[\"default\"] = Processor;\n\tmodule.exports = exports.default; \n} (processor, processor.exports));\n\nvar processorExports = processor.exports;\n\nvar selectors = {};\n\nvar constructors = {};\n\nconstructors.__esModule = true;\nconstructors.universal = constructors.tag = constructors.string = constructors.selector = constructors.root = constructors.pseudo = constructors.nesting = constructors.id = constructors.comment = constructors.combinator = constructors.className = constructors.attribute = void 0;\nvar _attribute = _interopRequireDefault(attribute$1);\nvar _className = _interopRequireDefault(classNameExports);\nvar _combinator = _interopRequireDefault(combinatorExports);\nvar _comment = _interopRequireDefault(commentExports);\nvar _id = _interopRequireDefault(idExports);\nvar _nesting = _interopRequireDefault(nestingExports);\nvar _pseudo = _interopRequireDefault(pseudoExports);\nvar _root = _interopRequireDefault(rootExports);\nvar _selector = _interopRequireDefault(selectorExports);\nvar _string = _interopRequireDefault(stringExports);\nvar _tag = _interopRequireDefault(tagExports);\nvar _universal = _interopRequireDefault(universalExports);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar attribute = function attribute(opts) {\n  return new _attribute[\"default\"](opts);\n};\nconstructors.attribute = attribute;\nvar className = function className(opts) {\n  return new _className[\"default\"](opts);\n};\nconstructors.className = className;\nvar combinator = function combinator(opts) {\n  return new _combinator[\"default\"](opts);\n};\nconstructors.combinator = combinator;\nvar comment = function comment(opts) {\n  return new _comment[\"default\"](opts);\n};\nconstructors.comment = comment;\nvar id = function id(opts) {\n  return new _id[\"default\"](opts);\n};\nconstructors.id = id;\nvar nesting = function nesting(opts) {\n  return new _nesting[\"default\"](opts);\n};\nconstructors.nesting = nesting;\nvar pseudo = function pseudo(opts) {\n  return new _pseudo[\"default\"](opts);\n};\nconstructors.pseudo = pseudo;\nvar root = function root(opts) {\n  return new _root[\"default\"](opts);\n};\nconstructors.root = root;\nvar selector = function selector(opts) {\n  return new _selector[\"default\"](opts);\n};\nconstructors.selector = selector;\nvar string = function string(opts) {\n  return new _string[\"default\"](opts);\n};\nconstructors.string = string;\nvar tag = function tag(opts) {\n  return new _tag[\"default\"](opts);\n};\nconstructors.tag = tag;\nvar universal = function universal(opts) {\n  return new _universal[\"default\"](opts);\n};\nconstructors.universal = universal;\n\nvar guards = {};\n\nguards.__esModule = true;\nguards.isComment = guards.isCombinator = guards.isClassName = guards.isAttribute = void 0;\nguards.isContainer = isContainer;\nguards.isIdentifier = void 0;\nguards.isNamespace = isNamespace;\nguards.isNesting = void 0;\nguards.isNode = isNode;\nguards.isPseudo = void 0;\nguards.isPseudoClass = isPseudoClass;\nguards.isPseudoElement = isPseudoElement;\nguards.isUniversal = guards.isTag = guards.isString = guards.isSelector = guards.isRoot = void 0;\nvar _types = types;\nvar _IS_TYPE;\nvar IS_TYPE = (_IS_TYPE = {}, _IS_TYPE[_types.ATTRIBUTE] = true, _IS_TYPE[_types.CLASS] = true, _IS_TYPE[_types.COMBINATOR] = true, _IS_TYPE[_types.COMMENT] = true, _IS_TYPE[_types.ID] = true, _IS_TYPE[_types.NESTING] = true, _IS_TYPE[_types.PSEUDO] = true, _IS_TYPE[_types.ROOT] = true, _IS_TYPE[_types.SELECTOR] = true, _IS_TYPE[_types.STRING] = true, _IS_TYPE[_types.TAG] = true, _IS_TYPE[_types.UNIVERSAL] = true, _IS_TYPE);\nfunction isNode(node) {\n  return typeof node === \"object\" && IS_TYPE[node.type];\n}\nfunction isNodeType(type, node) {\n  return isNode(node) && node.type === type;\n}\nvar isAttribute = isNodeType.bind(null, _types.ATTRIBUTE);\nguards.isAttribute = isAttribute;\nvar isClassName = isNodeType.bind(null, _types.CLASS);\nguards.isClassName = isClassName;\nvar isCombinator = isNodeType.bind(null, _types.COMBINATOR);\nguards.isCombinator = isCombinator;\nvar isComment = isNodeType.bind(null, _types.COMMENT);\nguards.isComment = isComment;\nvar isIdentifier = isNodeType.bind(null, _types.ID);\nguards.isIdentifier = isIdentifier;\nvar isNesting = isNodeType.bind(null, _types.NESTING);\nguards.isNesting = isNesting;\nvar isPseudo = isNodeType.bind(null, _types.PSEUDO);\nguards.isPseudo = isPseudo;\nvar isRoot = isNodeType.bind(null, _types.ROOT);\nguards.isRoot = isRoot;\nvar isSelector = isNodeType.bind(null, _types.SELECTOR);\nguards.isSelector = isSelector;\nvar isString = isNodeType.bind(null, _types.STRING);\nguards.isString = isString;\nvar isTag = isNodeType.bind(null, _types.TAG);\nguards.isTag = isTag;\nvar isUniversal = isNodeType.bind(null, _types.UNIVERSAL);\nguards.isUniversal = isUniversal;\nfunction isPseudoElement(node) {\n  return isPseudo(node) && node.value && (node.value.startsWith(\"::\") || node.value.toLowerCase() === \":before\" || node.value.toLowerCase() === \":after\" || node.value.toLowerCase() === \":first-letter\" || node.value.toLowerCase() === \":first-line\");\n}\nfunction isPseudoClass(node) {\n  return isPseudo(node) && !isPseudoElement(node);\n}\nfunction isContainer(node) {\n  return !!(isNode(node) && node.walk);\n}\nfunction isNamespace(node) {\n  return isAttribute(node) || isTag(node);\n}\n\n(function (exports) {\n\n\texports.__esModule = true;\n\tvar _types = types;\n\tObject.keys(_types).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  if (key in exports && exports[key] === _types[key]) return;\n\t  exports[key] = _types[key];\n\t});\n\tvar _constructors = constructors;\n\tObject.keys(_constructors).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  if (key in exports && exports[key] === _constructors[key]) return;\n\t  exports[key] = _constructors[key];\n\t});\n\tvar _guards = guards;\n\tObject.keys(_guards).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  if (key in exports && exports[key] === _guards[key]) return;\n\t  exports[key] = _guards[key];\n\t}); \n} (selectors));\n\n(function (module, exports) {\n\n\texports.__esModule = true;\n\texports[\"default\"] = void 0;\n\tvar _processor = _interopRequireDefault(processorExports);\n\tvar selectors$1 = _interopRequireWildcard(selectors);\n\tfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\tfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\tvar parser = function parser(processor) {\n\t  return new _processor[\"default\"](processor);\n\t};\n\tObject.assign(parser, selectors$1);\n\tdelete parser.__esModule;\n\tvar _default = parser;\n\texports[\"default\"] = _default;\n\tmodule.exports = exports.default; \n} (dist, dist.exports));\n\nvar distExports = dist.exports;\nvar selectorParser = /*@__PURE__*/getDefaultExportFromCjs(distExports);\n\nconst animationNameRE = /^(-\\w+-)?animation-name$/;\nconst animationRE = /^(-\\w+-)?animation$/;\nconst scopedPlugin = (id = \"\") => {\n  const keyframes = /* @__PURE__ */ Object.create(null);\n  const shortId = id.replace(/^data-v-/, \"\");\n  return {\n    postcssPlugin: \"vue-sfc-scoped\",\n    Rule(rule) {\n      processRule(id, rule);\n    },\n    AtRule(node) {\n      if (/-?keyframes$/.test(node.name) && !node.params.endsWith(`-${shortId}`)) {\n        keyframes[node.params] = node.params = node.params + \"-\" + shortId;\n      }\n    },\n    OnceExit(root) {\n      if (Object.keys(keyframes).length) {\n        root.walkDecls((decl) => {\n          if (animationNameRE.test(decl.prop)) {\n            decl.value = decl.value.split(\",\").map((v) => keyframes[v.trim()] || v.trim()).join(\",\");\n          }\n          if (animationRE.test(decl.prop)) {\n            decl.value = decl.value.split(\",\").map((v) => {\n              const vals = v.trim().split(/\\s+/);\n              const i = vals.findIndex((val) => keyframes[val]);\n              if (i !== -1) {\n                vals.splice(i, 1, keyframes[vals[i]]);\n                return vals.join(\" \");\n              } else {\n                return v;\n              }\n            }).join(\",\");\n          }\n        });\n      }\n    }\n  };\n};\nconst processedRules = /* @__PURE__ */ new WeakSet();\nfunction processRule(id, rule) {\n  if (processedRules.has(rule) || rule.parent && rule.parent.type === \"atrule\" && /-?keyframes$/.test(rule.parent.name)) {\n    return;\n  }\n  processedRules.add(rule);\n  rule.selector = selectorParser((selectorRoot) => {\n    selectorRoot.each((selector) => {\n      rewriteSelector(id, selector, selectorRoot);\n    });\n  }).processSync(rule.selector);\n}\nfunction rewriteSelector(id, selector, selectorRoot, slotted = false) {\n  let node = null;\n  let shouldInject = true;\n  selector.each((n) => {\n    if (n.type === \"combinator\" && (n.value === \">>>\" || n.value === \"/deep/\")) {\n      n.value = \" \";\n      n.spaces.before = n.spaces.after = \"\";\n      warn(\n        `the >>> and /deep/ combinators have been deprecated. Use :deep() instead.`\n      );\n      return false;\n    }\n    if (n.type === \"pseudo\") {\n      const { value } = n;\n      if (value === \":deep\" || value === \"::v-deep\") {\n        if (n.nodes.length) {\n          let last = n;\n          n.nodes[0].each((ss) => {\n            selector.insertAfter(last, ss);\n            last = ss;\n          });\n          const prev = selector.at(selector.index(n) - 1);\n          if (!prev || !isSpaceCombinator(prev)) {\n            selector.insertAfter(\n              n,\n              selectorParser.combinator({\n                value: \" \"\n              })\n            );\n          }\n          selector.removeChild(n);\n        } else {\n          warn(\n            `${value} usage as a combinator has been deprecated. Use :deep(<inner-selector>) instead of ${value} <inner-selector>.`\n          );\n          const prev = selector.at(selector.index(n) - 1);\n          if (prev && isSpaceCombinator(prev)) {\n            selector.removeChild(prev);\n          }\n          selector.removeChild(n);\n        }\n        return false;\n      }\n      if (value === \":slotted\" || value === \"::v-slotted\") {\n        rewriteSelector(\n          id,\n          n.nodes[0],\n          selectorRoot,\n          true\n          /* slotted */\n        );\n        let last = n;\n        n.nodes[0].each((ss) => {\n          selector.insertAfter(last, ss);\n          last = ss;\n        });\n        selector.removeChild(n);\n        shouldInject = false;\n        return false;\n      }\n      if (value === \":global\" || value === \"::v-global\") {\n        selectorRoot.insertAfter(selector, n.nodes[0]);\n        selectorRoot.removeChild(selector);\n        return false;\n      }\n    }\n    if (n.type === \"universal\") {\n      const prev = selector.at(selector.index(n) - 1);\n      const next = selector.at(selector.index(n) + 1);\n      if (!prev) {\n        if (next) {\n          if (next.type === \"combinator\" && next.value === \" \") {\n            selector.removeChild(next);\n          }\n          selector.removeChild(n);\n          return;\n        } else {\n          node = selectorParser.combinator({\n            value: \"\"\n          });\n          selector.insertBefore(n, node);\n          selector.removeChild(n);\n          return false;\n        }\n      }\n      if (node)\n        return;\n    }\n    if (n.type !== \"pseudo\" && n.type !== \"combinator\" || n.type === \"pseudo\" && (n.value === \":is\" || n.value === \":where\") && !node) {\n      node = n;\n    }\n  });\n  if (node) {\n    const { type, value } = node;\n    if (type === \"pseudo\" && (value === \":is\" || value === \":where\")) {\n      node.nodes.forEach(\n        (value2) => rewriteSelector(id, value2, selectorRoot, slotted)\n      );\n      shouldInject = false;\n    }\n  }\n  if (node) {\n    node.spaces.after = \"\";\n  } else {\n    selector.first.spaces.before = \"\";\n  }\n  if (shouldInject) {\n    const idToAdd = slotted ? id + \"-s\" : id;\n    selector.insertAfter(\n      // If node is null it means we need to inject [id] at the start\n      // insertAfter can handle `null` here\n      node,\n      selectorParser.attribute({\n        attribute: idToAdd,\n        value: idToAdd,\n        raws: {},\n        quoteMark: `\"`\n      })\n    );\n  }\n}\nfunction isSpaceCombinator(node) {\n  return node.type === \"combinator\" && /^\\s+$/.test(node.value);\n}\nscopedPlugin.postcss = true;\n\nvar sourceMap$1 = {};\n\nvar sourceMapGenerator = {};\n\nvar base64Vlq = {};\n\nvar base64$1 = {};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nbase64$1.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nbase64$1.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = base64$1;\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nbase64Vlq.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nbase64Vlq.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n\nvar util$5 = {};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n(function (exports) {\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\t/**\n\t * This is a helper function for getting values from parameter/options\n\t * objects.\n\t *\n\t * @param args The object we are extracting values from\n\t * @param name The name of the property we are getting.\n\t * @param defaultValue An optional value to return if the property is missing\n\t * from the object. If this is not specified and the property is missing, an\n\t * error will be thrown.\n\t */\n\tfunction getArg(aArgs, aName, aDefaultValue) {\n\t  if (aName in aArgs) {\n\t    return aArgs[aName];\n\t  } else if (arguments.length === 3) {\n\t    return aDefaultValue;\n\t  } else {\n\t    throw new Error('\"' + aName + '\" is a required argument.');\n\t  }\n\t}\n\texports.getArg = getArg;\n\n\tvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\n\tvar dataUrlRegexp = /^data:.+\\,.+$/;\n\n\tfunction urlParse(aUrl) {\n\t  var match = aUrl.match(urlRegexp);\n\t  if (!match) {\n\t    return null;\n\t  }\n\t  return {\n\t    scheme: match[1],\n\t    auth: match[2],\n\t    host: match[3],\n\t    port: match[4],\n\t    path: match[5]\n\t  };\n\t}\n\texports.urlParse = urlParse;\n\n\tfunction urlGenerate(aParsedUrl) {\n\t  var url = '';\n\t  if (aParsedUrl.scheme) {\n\t    url += aParsedUrl.scheme + ':';\n\t  }\n\t  url += '//';\n\t  if (aParsedUrl.auth) {\n\t    url += aParsedUrl.auth + '@';\n\t  }\n\t  if (aParsedUrl.host) {\n\t    url += aParsedUrl.host;\n\t  }\n\t  if (aParsedUrl.port) {\n\t    url += \":\" + aParsedUrl.port;\n\t  }\n\t  if (aParsedUrl.path) {\n\t    url += aParsedUrl.path;\n\t  }\n\t  return url;\n\t}\n\texports.urlGenerate = urlGenerate;\n\n\t/**\n\t * Normalizes a path, or the path portion of a URL:\n\t *\n\t * - Replaces consecutive slashes with one slash.\n\t * - Removes unnecessary '.' parts.\n\t * - Removes unnecessary '<dir>/..' parts.\n\t *\n\t * Based on code in the Node.js 'path' core module.\n\t *\n\t * @param aPath The path or url to normalize.\n\t */\n\tfunction normalize(aPath) {\n\t  var path = aPath;\n\t  var url = urlParse(aPath);\n\t  if (url) {\n\t    if (!url.path) {\n\t      return aPath;\n\t    }\n\t    path = url.path;\n\t  }\n\t  var isAbsolute = exports.isAbsolute(path);\n\n\t  var parts = path.split(/\\/+/);\n\t  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n\t    part = parts[i];\n\t    if (part === '.') {\n\t      parts.splice(i, 1);\n\t    } else if (part === '..') {\n\t      up++;\n\t    } else if (up > 0) {\n\t      if (part === '') {\n\t        // The first part is blank if the path is absolute. Trying to go\n\t        // above the root is a no-op. Therefore we can remove all '..' parts\n\t        // directly after the root.\n\t        parts.splice(i + 1, up);\n\t        up = 0;\n\t      } else {\n\t        parts.splice(i, 2);\n\t        up--;\n\t      }\n\t    }\n\t  }\n\t  path = parts.join('/');\n\n\t  if (path === '') {\n\t    path = isAbsolute ? '/' : '.';\n\t  }\n\n\t  if (url) {\n\t    url.path = path;\n\t    return urlGenerate(url);\n\t  }\n\t  return path;\n\t}\n\texports.normalize = normalize;\n\n\t/**\n\t * Joins two paths/URLs.\n\t *\n\t * @param aRoot The root path or URL.\n\t * @param aPath The path or URL to be joined with the root.\n\t *\n\t * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n\t *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n\t *   first.\n\t * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n\t *   is updated with the result and aRoot is returned. Otherwise the result\n\t *   is returned.\n\t *   - If aPath is absolute, the result is aPath.\n\t *   - Otherwise the two paths are joined with a slash.\n\t * - Joining for example 'http://' and 'www.example.com' is also supported.\n\t */\n\tfunction join(aRoot, aPath) {\n\t  if (aRoot === \"\") {\n\t    aRoot = \".\";\n\t  }\n\t  if (aPath === \"\") {\n\t    aPath = \".\";\n\t  }\n\t  var aPathUrl = urlParse(aPath);\n\t  var aRootUrl = urlParse(aRoot);\n\t  if (aRootUrl) {\n\t    aRoot = aRootUrl.path || '/';\n\t  }\n\n\t  // `join(foo, '//www.example.org')`\n\t  if (aPathUrl && !aPathUrl.scheme) {\n\t    if (aRootUrl) {\n\t      aPathUrl.scheme = aRootUrl.scheme;\n\t    }\n\t    return urlGenerate(aPathUrl);\n\t  }\n\n\t  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n\t    return aPath;\n\t  }\n\n\t  // `join('http://', 'www.example.com')`\n\t  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n\t    aRootUrl.host = aPath;\n\t    return urlGenerate(aRootUrl);\n\t  }\n\n\t  var joined = aPath.charAt(0) === '/'\n\t    ? aPath\n\t    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n\t  if (aRootUrl) {\n\t    aRootUrl.path = joined;\n\t    return urlGenerate(aRootUrl);\n\t  }\n\t  return joined;\n\t}\n\texports.join = join;\n\n\texports.isAbsolute = function (aPath) {\n\t  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n\t};\n\n\t/**\n\t * Make a path relative to a URL or another path.\n\t *\n\t * @param aRoot The root path or URL.\n\t * @param aPath The path or URL to be made relative to aRoot.\n\t */\n\tfunction relative(aRoot, aPath) {\n\t  if (aRoot === \"\") {\n\t    aRoot = \".\";\n\t  }\n\n\t  aRoot = aRoot.replace(/\\/$/, '');\n\n\t  // It is possible for the path to be above the root. In this case, simply\n\t  // checking whether the root is a prefix of the path won't work. Instead, we\n\t  // need to remove components from the root one by one, until either we find\n\t  // a prefix that fits, or we run out of components to remove.\n\t  var level = 0;\n\t  while (aPath.indexOf(aRoot + '/') !== 0) {\n\t    var index = aRoot.lastIndexOf(\"/\");\n\t    if (index < 0) {\n\t      return aPath;\n\t    }\n\n\t    // If the only part of the root that is left is the scheme (i.e. http://,\n\t    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n\t    // have exhausted all components, so the path is not relative to the root.\n\t    aRoot = aRoot.slice(0, index);\n\t    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n\t      return aPath;\n\t    }\n\n\t    ++level;\n\t  }\n\n\t  // Make sure we add a \"../\" for each component we removed from the root.\n\t  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n\t}\n\texports.relative = relative;\n\n\tvar supportsNullProto = (function () {\n\t  var obj = Object.create(null);\n\t  return !('__proto__' in obj);\n\t}());\n\n\tfunction identity (s) {\n\t  return s;\n\t}\n\n\t/**\n\t * Because behavior goes wacky when you set `__proto__` on objects, we\n\t * have to prefix all the strings in our set with an arbitrary character.\n\t *\n\t * See https://github.com/mozilla/source-map/pull/31 and\n\t * https://github.com/mozilla/source-map/issues/30\n\t *\n\t * @param String aStr\n\t */\n\tfunction toSetString(aStr) {\n\t  if (isProtoString(aStr)) {\n\t    return '$' + aStr;\n\t  }\n\n\t  return aStr;\n\t}\n\texports.toSetString = supportsNullProto ? identity : toSetString;\n\n\tfunction fromSetString(aStr) {\n\t  if (isProtoString(aStr)) {\n\t    return aStr.slice(1);\n\t  }\n\n\t  return aStr;\n\t}\n\texports.fromSetString = supportsNullProto ? identity : fromSetString;\n\n\tfunction isProtoString(s) {\n\t  if (!s) {\n\t    return false;\n\t  }\n\n\t  var length = s.length;\n\n\t  if (length < 9 /* \"__proto__\".length */) {\n\t    return false;\n\t  }\n\n\t  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n\t      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n\t      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n\t      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n\t      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n\t      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n\t      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n\t      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n\t      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n\t    return false;\n\t  }\n\n\t  for (var i = length - 10; i >= 0; i--) {\n\t    if (s.charCodeAt(i) !== 36 /* '$' */) {\n\t      return false;\n\t    }\n\t  }\n\n\t  return true;\n\t}\n\n\t/**\n\t * Comparator between two mappings where the original positions are compared.\n\t *\n\t * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n\t * mappings with the same original source/line/column, but different generated\n\t * line and column the same. Useful when searching for a mapping with a\n\t * stubbed out mapping.\n\t */\n\tfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n\t  var cmp = strcmp(mappingA.source, mappingB.source);\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t  if (cmp !== 0 || onlyCompareOriginal) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  return strcmp(mappingA.name, mappingB.name);\n\t}\n\texports.compareByOriginalPositions = compareByOriginalPositions;\n\n\t/**\n\t * Comparator between two mappings with deflated source and name indices where\n\t * the generated positions are compared.\n\t *\n\t * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n\t * mappings with the same generated line and column, but different\n\t * source/name/original line and column the same. Useful when searching for a\n\t * mapping with a stubbed out mapping.\n\t */\n\tfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n\t  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t  if (cmp !== 0 || onlyCompareGenerated) {\n\t    return cmp;\n\t  }\n\n\t  cmp = strcmp(mappingA.source, mappingB.source);\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  return strcmp(mappingA.name, mappingB.name);\n\t}\n\texports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\n\tfunction strcmp(aStr1, aStr2) {\n\t  if (aStr1 === aStr2) {\n\t    return 0;\n\t  }\n\n\t  if (aStr1 === null) {\n\t    return 1; // aStr2 !== null\n\t  }\n\n\t  if (aStr2 === null) {\n\t    return -1; // aStr1 !== null\n\t  }\n\n\t  if (aStr1 > aStr2) {\n\t    return 1;\n\t  }\n\n\t  return -1;\n\t}\n\n\t/**\n\t * Comparator between two mappings with inflated source and name strings where\n\t * the generated positions are compared.\n\t */\n\tfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n\t  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = strcmp(mappingA.source, mappingB.source);\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalLine - mappingB.originalLine;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t  if (cmp !== 0) {\n\t    return cmp;\n\t  }\n\n\t  return strcmp(mappingA.name, mappingB.name);\n\t}\n\texports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n\t/**\n\t * Strip any JSON XSSI avoidance prefix from the string (as documented\n\t * in the source maps specification), and then parse the string as\n\t * JSON.\n\t */\n\tfunction parseSourceMapInput(str) {\n\t  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n\t}\n\texports.parseSourceMapInput = parseSourceMapInput;\n\n\t/**\n\t * Compute the URL of a source given the the source root, the source's\n\t * URL, and the source map's URL.\n\t */\n\tfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n\t  sourceURL = sourceURL || '';\n\n\t  if (sourceRoot) {\n\t    // This follows what Chrome does.\n\t    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n\t      sourceRoot += '/';\n\t    }\n\t    // The spec says:\n\t    //   Line 4: An optional source root, useful for relocating source\n\t    //   files on a server or removing repeated values in the\n\t    //   “sources” entry.  This value is prepended to the individual\n\t    //   entries in the “source” field.\n\t    sourceURL = sourceRoot + sourceURL;\n\t  }\n\n\t  // Historically, SourceMapConsumer did not take the sourceMapURL as\n\t  // a parameter.  This mode is still somewhat supported, which is why\n\t  // this code block is conditional.  However, it's preferable to pass\n\t  // the source map URL to SourceMapConsumer, so that this function\n\t  // can implement the source URL resolution algorithm as outlined in\n\t  // the spec.  This block is basically the equivalent of:\n\t  //    new URL(sourceURL, sourceMapURL).toString()\n\t  // ... except it avoids using URL, which wasn't available in the\n\t  // older releases of node still supported by this library.\n\t  //\n\t  // The spec says:\n\t  //   If the sources are not absolute URLs after prepending of the\n\t  //   “sourceRoot”, the sources are resolved relative to the\n\t  //   SourceMap (like resolving script src in a html document).\n\t  if (sourceMapURL) {\n\t    var parsed = urlParse(sourceMapURL);\n\t    if (!parsed) {\n\t      throw new Error(\"sourceMapURL could not be parsed\");\n\t    }\n\t    if (parsed.path) {\n\t      // Strip the last path component, but keep the \"/\".\n\t      var index = parsed.path.lastIndexOf('/');\n\t      if (index >= 0) {\n\t        parsed.path = parsed.path.substring(0, index + 1);\n\t      }\n\t    }\n\t    sourceURL = join(urlGenerate(parsed), sourceURL);\n\t  }\n\n\t  return normalize(sourceURL);\n\t}\n\texports.computeSourceURL = computeSourceURL; \n} (util$5));\n\nvar arraySet = {};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util$4 = util$5;\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet$2() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet$2.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet$2();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet$2.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet$2.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util$4.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet$2.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util$4.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet$2.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util$4.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet$2.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet$2.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\narraySet.ArraySet = ArraySet$2;\n\nvar mappingList = {};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util$3 = util$5;\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util$3.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList$1() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList$1.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList$1.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList$1.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util$3.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nmappingList.MappingList = MappingList$1;\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ$1 = base64Vlq;\nvar util$2 = util$5;\nvar ArraySet$1 = arraySet.ArraySet;\nvar MappingList = mappingList.MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator$2(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util$2.getArg(aArgs, 'file', null);\n  this._sourceRoot = util$2.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util$2.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet$1();\n  this._names = new ArraySet$1();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator$2.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator$2.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator$2({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util$2.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util$2.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator$2.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util$2.getArg(aArgs, 'generated');\n    var original = util$2.getArg(aArgs, 'original', null);\n    var source = util$2.getArg(aArgs, 'source', null);\n    var name = util$2.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator$2.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util$2.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util$2.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util$2.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator$2.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util$2.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet$1();\n    var newNames = new ArraySet$1();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util$2.join(aSourceMapPath, mapping.source);\n          }\n          if (sourceRoot != null) {\n            mapping.source = util$2.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util$2.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util$2.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator$2.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator$2.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = '';\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util$2.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ$1.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ$1.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ$1.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ$1.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ$1.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator$2.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util$2.relative(aSourceRoot, source);\n      }\n      var key = util$2.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator$2.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator$2.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nsourceMapGenerator.SourceMapGenerator = SourceMapGenerator$2;\n\nvar sourceMapConsumer = {};\n\nvar binarySearch$1 = {};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n(function (exports) {\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\n\texports.GREATEST_LOWER_BOUND = 1;\n\texports.LEAST_UPPER_BOUND = 2;\n\n\t/**\n\t * Recursive implementation of binary search.\n\t *\n\t * @param aLow Indices here and lower do not contain the needle.\n\t * @param aHigh Indices here and higher do not contain the needle.\n\t * @param aNeedle The element being searched for.\n\t * @param aHaystack The non-empty array being searched.\n\t * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n\t * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n\t *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t */\n\tfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n\t  // This function terminates when one of the following is true:\n\t  //\n\t  //   1. We find the exact element we are looking for.\n\t  //\n\t  //   2. We did not find the exact element, but we can return the index of\n\t  //      the next-closest element.\n\t  //\n\t  //   3. We did not find the exact element, and there is no next-closest\n\t  //      element than the one we are searching for, so we return -1.\n\t  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n\t  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n\t  if (cmp === 0) {\n\t    // Found the element we are looking for.\n\t    return mid;\n\t  }\n\t  else if (cmp > 0) {\n\t    // Our needle is greater than aHaystack[mid].\n\t    if (aHigh - mid > 1) {\n\t      // The element is in the upper half.\n\t      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n\t    }\n\n\t    // The exact needle element was not found in this haystack. Determine if\n\t    // we are in termination case (3) or (2) and return the appropriate thing.\n\t    if (aBias == exports.LEAST_UPPER_BOUND) {\n\t      return aHigh < aHaystack.length ? aHigh : -1;\n\t    } else {\n\t      return mid;\n\t    }\n\t  }\n\t  else {\n\t    // Our needle is less than aHaystack[mid].\n\t    if (mid - aLow > 1) {\n\t      // The element is in the lower half.\n\t      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n\t    }\n\n\t    // we are in termination case (3) or (2) and return the appropriate thing.\n\t    if (aBias == exports.LEAST_UPPER_BOUND) {\n\t      return mid;\n\t    } else {\n\t      return aLow < 0 ? -1 : aLow;\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * This is an implementation of binary search which will always try and return\n\t * the index of the closest element if there is no exact hit. This is because\n\t * mappings between original and generated line/col pairs are single points,\n\t * and there is an implicit region between each of them, so a miss just means\n\t * that you aren't on the very start of a region.\n\t *\n\t * @param aNeedle The element you are looking for.\n\t * @param aHaystack The array that is being searched.\n\t * @param aCompare A function which takes the needle and an element in the\n\t *     array and returns -1, 0, or 1 depending on whether the needle is less\n\t *     than, equal to, or greater than the element, respectively.\n\t * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n\t *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n\t *     closest element that is smaller than or greater than the one we are\n\t *     searching for, respectively, if the exact element cannot be found.\n\t *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n\t */\n\texports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n\t  if (aHaystack.length === 0) {\n\t    return -1;\n\t  }\n\n\t  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n\t                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n\t  if (index < 0) {\n\t    return -1;\n\t  }\n\n\t  // We have found either the exact element, or the next-closest element than\n\t  // the one we are searching for. However, there may be more than one such\n\t  // element. Make sure we always return the smallest of these.\n\t  while (index - 1 >= 0) {\n\t    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n\t      break;\n\t    }\n\t    --index;\n\t  }\n\n\t  return index;\n\t}; \n} (binarySearch$1));\n\nvar quickSort$1 = {};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nquickSort$1.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util$1 = util$5;\nvar binarySearch = binarySearch$1;\nvar ArraySet = arraySet.ArraySet;\nvar base64VLQ = base64Vlq;\nvar quickSort = quickSort$1.quickSort;\n\nfunction SourceMapConsumer$1(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util$1.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer$1.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n};\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer$1.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer$1.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer$1.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer$1.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer$1.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer$1.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer$1.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer$1.GENERATED_ORDER = 1;\nSourceMapConsumer$1.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer$1.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer$1.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer$1.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer$1.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer$1.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer$1.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util$1.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer$1.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util$1.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util$1.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util$1.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util$1.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util$1.getArg(mapping, 'generatedLine', null),\n            column: util$1.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util$1.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util$1.getArg(mapping, 'generatedLine', null),\n            column: util$1.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util$1.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nsourceMapConsumer.SourceMapConsumer = SourceMapConsumer$1;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util$1.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util$1.getArg(sourceMap, 'version');\n  var sources = util$1.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util$1.getArg(sourceMap, 'names', []);\n  var sourceRoot = util$1.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util$1.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util$1.getArg(sourceMap, 'mappings');\n  var file = util$1.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util$1.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util$1.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util$1.isAbsolute(sourceRoot) && util$1.isAbsolute(source)\n        ? util$1.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util$1.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer$1.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer$1;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util$1.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util$1.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util$1.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util$1.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util$1.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util$1.getArg(aArgs, 'line'),\n      generatedColumn: util$1.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util$1.compareByGeneratedPositionsDeflated,\n      util$1.getArg(aArgs, 'bias', SourceMapConsumer$1.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util$1.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util$1.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util$1.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util$1.getArg(mapping, 'originalLine', null),\n          column: util$1.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util$1.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util$1.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util$1.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util$1.getArg(aArgs, 'line'),\n      originalColumn: util$1.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util$1.compareByOriginalPositions,\n      util$1.getArg(aArgs, 'bias', SourceMapConsumer$1.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util$1.getArg(mapping, 'generatedLine', null),\n          column: util$1.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util$1.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nsourceMapConsumer.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util$1.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util$1.getArg(sourceMap, 'version');\n  var sections = util$1.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util$1.getArg(s, 'offset');\n    var offsetLine = util$1.getArg(offset, 'line');\n    var offsetColumn = util$1.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer$1(util$1.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer$1.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer$1;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util$1.getArg(aArgs, 'line'),\n      generatedColumn: util$1.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util$1.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util$1.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util$1.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util$1.compareByOriginalPositions);\n  };\n\nsourceMapConsumer.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n\nvar sourceNode = {};\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator$1 = sourceMapGenerator.SourceMapGenerator;\nvar util = util$5;\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex] || '';\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex] || '';\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator$1(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nsourceNode.SourceNode = SourceNode;\n\n/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nsourceMap$1.SourceMapGenerator = sourceMapGenerator.SourceMapGenerator;\nsourceMap$1.SourceMapConsumer = sourceMapConsumer.SourceMapConsumer;\nsourceMap$1.SourceNode = sourceNode.SourceNode;\n\nvar sourceMap = sourceMap$1;\nvar SourceMapConsumer = sourceMap.SourceMapConsumer;\nvar SourceMapGenerator = sourceMap.SourceMapGenerator;\n\nvar mergeSourceMap = merge;\n\n/**\n * Merge old source map and new source map and return merged.\n * If old or new source map value is falsy, return another one as it is.\n *\n * @param {object|string} [oldMap] old source map object\n * @param {object|string} [newmap] new source map object\n * @return {object|undefined} merged source map object, or undefined when both old and new source map are undefined\n */\nfunction merge(oldMap, newMap) {\n  if (!oldMap) return newMap\n  if (!newMap) return oldMap\n\n  var oldMapConsumer = new SourceMapConsumer(oldMap);\n  var newMapConsumer = new SourceMapConsumer(newMap);\n  var mergedMapGenerator = new SourceMapGenerator();\n\n  // iterate on new map and overwrite original position of new map with one of old map\n  newMapConsumer.eachMapping(function(m) {\n    // pass when `originalLine` is null.\n    // It occurs in case that the node does not have origin in original code.\n    if (m.originalLine == null) return\n\n    var origPosInOldMap = oldMapConsumer.originalPositionFor({\n      line: m.originalLine,\n      column: m.originalColumn\n    });\n\n    if (origPosInOldMap.source == null) return\n\n    mergedMapGenerator.addMapping({\n      original: {\n        line: origPosInOldMap.line,\n        column: origPosInOldMap.column\n      },\n      generated: {\n        line: m.generatedLine,\n        column: m.generatedColumn\n      },\n      source: origPosInOldMap.source,\n      name: origPosInOldMap.name\n    });\n  });\n\n  var consumers = [oldMapConsumer, newMapConsumer];\n  consumers.forEach(function(consumer) {\n    consumer.sources.forEach(function(sourceFile) {\n      mergedMapGenerator._sources.add(sourceFile);\n      var sourceContent = consumer.sourceContentFor(sourceFile);\n      if (sourceContent != null) {\n        mergedMapGenerator.setSourceContent(sourceFile, sourceContent);\n      }\n    });\n  });\n\n  mergedMapGenerator._sourceRoot = oldMap.sourceRoot;\n  mergedMapGenerator._file = oldMap.file;\n\n  return JSON.parse(mergedMapGenerator.toString())\n}\n\nvar merge$1 = /*@__PURE__*/getDefaultExportFromCjs(mergeSourceMap);\n\nvar __defProp$5 = Object.defineProperty;\nvar __defProps$4 = Object.defineProperties;\nvar __getOwnPropDescs$4 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$5 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$5 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$5 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$5 = (obj, key, value) => key in obj ? __defProp$5(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$5 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$5.call(b, prop))\n      __defNormalProp$5(a, prop, b[prop]);\n  if (__getOwnPropSymbols$5)\n    for (var prop of __getOwnPropSymbols$5(b)) {\n      if (__propIsEnum$5.call(b, prop))\n        __defNormalProp$5(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$4 = (a, b) => __defProps$4(a, __getOwnPropDescs$4(b));\nconst scss = (source, map, options, load = require) => {\n  const nodeSass = load(\"sass\");\n  const finalOptions = __spreadProps$4(__spreadValues$5({}, options), {\n    data: getSource(source, options.filename, options.additionalData),\n    file: options.filename,\n    outFile: options.filename,\n    sourceMap: !!map\n  });\n  try {\n    const result = nodeSass.renderSync(finalOptions);\n    const dependencies = result.stats.includedFiles;\n    if (map) {\n      return {\n        code: result.css.toString(),\n        map: merge$1(map, JSON.parse(result.map.toString())),\n        errors: [],\n        dependencies\n      };\n    }\n    return { code: result.css.toString(), errors: [], dependencies };\n  } catch (e) {\n    return { code: \"\", errors: [e], dependencies: [] };\n  }\n};\nconst sass = (source, map, options, load) => scss(\n  source,\n  map,\n  __spreadProps$4(__spreadValues$5({}, options), {\n    indentedSyntax: true\n  }),\n  load\n);\nconst less = (source, map, options, load = require) => {\n  const nodeLess = load(\"less\");\n  let result;\n  let error = null;\n  nodeLess.render(\n    getSource(source, options.filename, options.additionalData),\n    __spreadProps$4(__spreadValues$5({}, options), { syncImport: true }),\n    (err, output) => {\n      error = err;\n      result = output;\n    }\n  );\n  if (error)\n    return { code: \"\", errors: [error], dependencies: [] };\n  const dependencies = result.imports;\n  if (map) {\n    return {\n      code: result.css.toString(),\n      map: merge$1(map, result.map),\n      errors: [],\n      dependencies\n    };\n  }\n  return {\n    code: result.css.toString(),\n    errors: [],\n    dependencies\n  };\n};\nconst styl = (source, map, options, load = require) => {\n  const nodeStylus = load(\"stylus\");\n  try {\n    const ref = nodeStylus(source, options);\n    if (map)\n      ref.set(\"sourcemap\", { inline: false, comment: false });\n    const result = ref.render();\n    const dependencies = ref.deps();\n    if (map) {\n      return {\n        code: result,\n        map: merge$1(map, ref.sourcemap),\n        errors: [],\n        dependencies\n      };\n    }\n    return { code: result, errors: [], dependencies };\n  } catch (e) {\n    return { code: \"\", errors: [e], dependencies: [] };\n  }\n};\nfunction getSource(source, filename, additionalData) {\n  if (!additionalData)\n    return source;\n  if (isFunction$1(additionalData)) {\n    return additionalData(source, filename);\n  }\n  return additionalData + source;\n}\nconst processors = {\n  less,\n  sass,\n  scss,\n  styl,\n  stylus: styl\n};\n\nvar __defProp$4 = Object.defineProperty;\nvar __defProps$3 = Object.defineProperties;\nvar __getOwnPropDescs$3 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$4 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$4 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$4 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$4 = (obj, key, value) => key in obj ? __defProp$4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$4 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$4.call(b, prop))\n      __defNormalProp$4(a, prop, b[prop]);\n  if (__getOwnPropSymbols$4)\n    for (var prop of __getOwnPropSymbols$4(b)) {\n      if (__propIsEnum$4.call(b, prop))\n        __defNormalProp$4(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$3 = (a, b) => __defProps$3(a, __getOwnPropDescs$3(b));\nfunction compileStyle(options) {\n  return doCompileStyle(__spreadProps$3(__spreadValues$4({}, options), {\n    isAsync: false\n  }));\n}\nfunction compileStyleAsync(options) {\n  return doCompileStyle(__spreadProps$3(__spreadValues$4({}, options), {\n    isAsync: true\n  }));\n}\nfunction doCompileStyle(options) {\n  const {\n    filename,\n    id,\n    scoped = false,\n    trim = true,\n    isProd = false,\n    modules = false,\n    modulesOptions = {},\n    preprocessLang,\n    postcssOptions,\n    postcssPlugins\n  } = options;\n  const preprocessor = preprocessLang && processors[preprocessLang];\n  const preProcessedSource = preprocessor && preprocess(options, preprocessor);\n  const map = preProcessedSource ? preProcessedSource.map : options.inMap || options.map;\n  const source = preProcessedSource ? preProcessedSource.code : options.source;\n  const shortId = id.replace(/^data-v-/, \"\");\n  const longId = `data-v-${shortId}`;\n  const plugins = (postcssPlugins || []).slice();\n  plugins.unshift(cssVarsPlugin({ id: shortId, isProd }));\n  if (trim) {\n    plugins.push(trimPlugin());\n  }\n  if (scoped) {\n    plugins.push(scopedPlugin(longId));\n  }\n  let cssModules;\n  if (modules) {\n    {\n      throw new Error(\n        \"[@vue/compiler-sfc] `modules` option is not supported in the browser build.\"\n      );\n    }\n  }\n  const postCSSOptions = __spreadProps$3(__spreadValues$4({}, postcssOptions), {\n    to: filename,\n    from: filename\n  });\n  if (map) {\n    postCSSOptions.map = {\n      inline: false,\n      annotation: false,\n      prev: map\n    };\n  }\n  let result;\n  let code;\n  let outMap;\n  const dependencies = new Set(\n    preProcessedSource ? preProcessedSource.dependencies : []\n  );\n  dependencies.delete(filename);\n  const errors = [];\n  if (preProcessedSource && preProcessedSource.errors.length) {\n    errors.push(...preProcessedSource.errors);\n  }\n  const recordPlainCssDependencies = (messages) => {\n    messages.forEach((msg) => {\n      if (msg.type === \"dependency\") {\n        dependencies.add(msg.file);\n      }\n    });\n    return dependencies;\n  };\n  try {\n    result = postcss$1(plugins).process(source, postCSSOptions);\n    if (options.isAsync) {\n      return result.then((result2) => ({\n        code: result2.css || \"\",\n        map: result2.map && result2.map.toJSON(),\n        errors,\n        modules: cssModules,\n        rawResult: result2,\n        dependencies: recordPlainCssDependencies(result2.messages)\n      })).catch((error) => ({\n        code: \"\",\n        map: void 0,\n        errors: [...errors, error],\n        rawResult: void 0,\n        dependencies\n      }));\n    }\n    recordPlainCssDependencies(result.messages);\n    code = result.css;\n    outMap = result.map;\n  } catch (e) {\n    errors.push(e);\n  }\n  return {\n    code: code || ``,\n    map: outMap && outMap.toJSON(),\n    errors,\n    rawResult: result,\n    dependencies\n  };\n}\nfunction preprocess(options, preprocessor) {\n  if (!options.preprocessCustomRequire) {\n    throw new Error(\n      `[@vue/compiler-sfc] Style preprocessing in the browser build must provide the \\`preprocessCustomRequire\\` option to return the in-browser version of the preprocessor.`\n    );\n  }\n  return preprocessor(\n    options.source,\n    options.inMap || options.map,\n    __spreadValues$4({\n      filename: options.filename\n    }, options.preprocessOptions),\n    options.preprocessCustomRequire\n  );\n}\n\nfunction analyzeScriptBindings(ast) {\n  for (const node of ast) {\n    if (node.type === \"ExportDefaultDeclaration\" && node.declaration.type === \"ObjectExpression\") {\n      return analyzeBindingsFromOptions(node.declaration);\n    }\n  }\n  return {};\n}\nfunction analyzeBindingsFromOptions(node) {\n  const bindings = {};\n  Object.defineProperty(bindings, \"__isScriptSetup\", {\n    enumerable: false,\n    value: false\n  });\n  for (const property of node.properties) {\n    if (property.type === \"ObjectProperty\" && !property.computed && property.key.type === \"Identifier\") {\n      if (property.key.name === \"props\") {\n        for (const key of getObjectOrArrayExpressionKeys(property.value)) {\n          bindings[key] = \"props\";\n        }\n      } else if (property.key.name === \"inject\") {\n        for (const key of getObjectOrArrayExpressionKeys(property.value)) {\n          bindings[key] = \"options\";\n        }\n      } else if (property.value.type === \"ObjectExpression\" && (property.key.name === \"computed\" || property.key.name === \"methods\")) {\n        for (const key of getObjectExpressionKeys(property.value)) {\n          bindings[key] = \"options\";\n        }\n      }\n    } else if (property.type === \"ObjectMethod\" && property.key.type === \"Identifier\" && (property.key.name === \"setup\" || property.key.name === \"data\")) {\n      for (const bodyItem of property.body.body) {\n        if (bodyItem.type === \"ReturnStatement\" && bodyItem.argument && bodyItem.argument.type === \"ObjectExpression\") {\n          for (const key of getObjectExpressionKeys(bodyItem.argument)) {\n            bindings[key] = property.key.name === \"setup\" ? \"setup-maybe-ref\" : \"data\";\n          }\n        }\n      }\n    }\n  }\n  return bindings;\n}\nfunction getObjectExpressionKeys(node) {\n  const keys = [];\n  for (const prop of node.properties) {\n    if (prop.type === \"SpreadElement\")\n      continue;\n    const key = resolveObjectKey(prop.key, prop.computed);\n    if (key)\n      keys.push(String(key));\n  }\n  return keys;\n}\nfunction getArrayExpressionKeys(node) {\n  const keys = [];\n  for (const element of node.elements) {\n    if (element && element.type === \"StringLiteral\") {\n      keys.push(element.value);\n    }\n  }\n  return keys;\n}\nfunction getObjectOrArrayExpressionKeys(value) {\n  if (value.type === \"ArrayExpression\") {\n    return getArrayExpressionKeys(value);\n  }\n  if (value.type === \"ObjectExpression\") {\n    return getObjectExpressionKeys(value);\n  }\n  return [];\n}\n\nconst comma = ','.charCodeAt(0);\nconst semicolon = ';'.charCodeAt(0);\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\nfor (let i = 0; i < chars.length; i++) {\n    const c = chars.charCodeAt(i);\n    intToChar[i] = c;\n    charToInt[c] = i;\n}\n// Provide a fallback for older environments.\nconst td = typeof TextDecoder !== 'undefined'\n    ? /* #__PURE__ */ new TextDecoder()\n    : typeof Buffer !== 'undefined'\n        ? {\n            decode(buf) {\n                const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n                return out.toString();\n            },\n        }\n        : {\n            decode(buf) {\n                let out = '';\n                for (let i = 0; i < buf.length; i++) {\n                    out += String.fromCharCode(buf[i]);\n                }\n                return out;\n            },\n        };\nfunction encode(decoded) {\n    const state = new Int32Array(5);\n    const bufLength = 1024 * 16;\n    const subLength = bufLength - 36;\n    const buf = new Uint8Array(bufLength);\n    const sub = buf.subarray(0, subLength);\n    let pos = 0;\n    let out = '';\n    for (let i = 0; i < decoded.length; i++) {\n        const line = decoded[i];\n        if (i > 0) {\n            if (pos === bufLength) {\n                out += td.decode(buf);\n                pos = 0;\n            }\n            buf[pos++] = semicolon;\n        }\n        if (line.length === 0)\n            continue;\n        state[0] = 0;\n        for (let j = 0; j < line.length; j++) {\n            const segment = line[j];\n            // We can push up to 5 ints, each int can take at most 7 chars, and we\n            // may push a comma.\n            if (pos > subLength) {\n                out += td.decode(sub);\n                buf.copyWithin(0, subLength, pos);\n                pos -= subLength;\n            }\n            if (j > 0)\n                buf[pos++] = comma;\n            pos = encodeInteger(buf, pos, state, segment, 0); // genColumn\n            if (segment.length === 1)\n                continue;\n            pos = encodeInteger(buf, pos, state, segment, 1); // sourcesIndex\n            pos = encodeInteger(buf, pos, state, segment, 2); // sourceLine\n            pos = encodeInteger(buf, pos, state, segment, 3); // sourceColumn\n            if (segment.length === 4)\n                continue;\n            pos = encodeInteger(buf, pos, state, segment, 4); // namesIndex\n        }\n    }\n    return out + td.decode(buf.subarray(0, pos));\n}\nfunction encodeInteger(buf, pos, state, segment, j) {\n    const next = segment[j];\n    let num = next - state[j];\n    state[j] = next;\n    num = num < 0 ? (-num << 1) | 1 : num << 1;\n    do {\n        let clamped = num & 0b011111;\n        num >>>= 5;\n        if (num > 0)\n            clamped |= 0b100000;\n        buf[pos++] = intToChar[clamped];\n    } while (num > 0);\n    return pos;\n}\n\nclass BitSet {\n\tconstructor(arg) {\n\t\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\n\t}\n\n\tadd(n) {\n\t\tthis.bits[n >> 5] |= 1 << (n & 31);\n\t}\n\n\thas(n) {\n\t\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\n\t}\n}\n\nclass Chunk {\n\tconstructor(start, end, content) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.original = content;\n\n\t\tthis.intro = '';\n\t\tthis.outro = '';\n\n\t\tthis.content = content;\n\t\tthis.storeName = false;\n\t\tthis.edited = false;\n\n\t\t{\n\t\t\tthis.previous = null;\n\t\t\tthis.next = null;\n\t\t}\n\t}\n\n\tappendLeft(content) {\n\t\tthis.outro += content;\n\t}\n\n\tappendRight(content) {\n\t\tthis.intro = this.intro + content;\n\t}\n\n\tclone() {\n\t\tconst chunk = new Chunk(this.start, this.end, this.original);\n\n\t\tchunk.intro = this.intro;\n\t\tchunk.outro = this.outro;\n\t\tchunk.content = this.content;\n\t\tchunk.storeName = this.storeName;\n\t\tchunk.edited = this.edited;\n\n\t\treturn chunk;\n\t}\n\n\tcontains(index) {\n\t\treturn this.start < index && index < this.end;\n\t}\n\n\teachNext(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.next;\n\t\t}\n\t}\n\n\teachPrevious(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.previous;\n\t\t}\n\t}\n\n\tedit(content, storeName, contentOnly) {\n\t\tthis.content = content;\n\t\tif (!contentOnly) {\n\t\t\tthis.intro = '';\n\t\t\tthis.outro = '';\n\t\t}\n\t\tthis.storeName = storeName;\n\n\t\tthis.edited = true;\n\n\t\treturn this;\n\t}\n\n\tprependLeft(content) {\n\t\tthis.outro = content + this.outro;\n\t}\n\n\tprependRight(content) {\n\t\tthis.intro = content + this.intro;\n\t}\n\n\treset() {\n\t\tthis.intro = '';\n\t\tthis.outro = '';\n\t\tif (this.edited) {\n\t\t\tthis.content = this.original;\n\t\t\tthis.storeName = false;\n\t\t\tthis.edited = false;\n\t\t}\n\t}\n\n\tsplit(index) {\n\t\tconst sliceIndex = index - this.start;\n\n\t\tconst originalBefore = this.original.slice(0, sliceIndex);\n\t\tconst originalAfter = this.original.slice(sliceIndex);\n\n\t\tthis.original = originalBefore;\n\n\t\tconst newChunk = new Chunk(index, this.end, originalAfter);\n\t\tnewChunk.outro = this.outro;\n\t\tthis.outro = '';\n\n\t\tthis.end = index;\n\n\t\tif (this.edited) {\n\t\t\t// after split we should save the edit content record into the correct chunk\n\t\t\t// to make sure sourcemap correct\n\t\t\t// For example:\n\t\t\t// '  test'.trim()\n\t\t\t//     split   -> '  ' + 'test'\n\t\t\t//   ✔️ edit    -> '' + 'test'\n\t\t\t//   ✖️ edit    -> 'test' + '' \n\t\t\t// TODO is this block necessary?...\n\t\t\tnewChunk.edit('', false);\n\t\t\tthis.content = '';\n\t\t} else {\n\t\t\tthis.content = originalBefore;\n\t\t}\n\n\t\tnewChunk.next = this.next;\n\t\tif (newChunk.next) newChunk.next.previous = newChunk;\n\t\tnewChunk.previous = this;\n\t\tthis.next = newChunk;\n\n\t\treturn newChunk;\n\t}\n\n\ttoString() {\n\t\treturn this.intro + this.content + this.outro;\n\t}\n\n\ttrimEnd(rx) {\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\n\t\t\t\tif (this.edited) {\n\t\t\t\t\t// save the change, if it has been edited\n\t\t\t\t\tthis.edit(trimmed, this.storeName, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\tif (this.intro.length) return true;\n\t\t}\n\t}\n\n\ttrimStart(rx) {\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tconst newChunk = this.split(this.end - trimmed.length);\n\t\t\t\tif (this.edited) {\n\t\t\t\t\t// save the change, if it has been edited\n\t\t\t\t\tnewChunk.edit(trimmed, this.storeName, true);\n\t\t\t\t}\n\t\t\t\tthis.edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.outro = this.outro.replace(rx, '');\n\t\t\tif (this.outro.length) return true;\n\t\t}\n\t}\n}\n\nfunction getBtoa() {\n\tif (typeof globalThis !== 'undefined' && typeof globalThis.btoa === 'function') {\n\t\treturn (str) => globalThis.btoa(unescape(encodeURIComponent(str)));\n\t} else if (typeof Buffer === 'function') {\n\t\treturn (str) => Buffer.from(str, 'utf-8').toString('base64');\n\t} else {\n\t\treturn () => {\n\t\t\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\n\t\t};\n\t}\n}\n\nconst btoa = /*#__PURE__*/ getBtoa();\n\nclass SourceMap {\n\tconstructor(properties) {\n\t\tthis.version = 3;\n\t\tthis.file = properties.file;\n\t\tthis.sources = properties.sources;\n\t\tthis.sourcesContent = properties.sourcesContent;\n\t\tthis.names = properties.names;\n\t\tthis.mappings = encode(properties.mappings);\n\t\tif (typeof properties.x_google_ignoreList !== 'undefined') {\n\t\t\tthis.x_google_ignoreList = properties.x_google_ignoreList;\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this);\n\t}\n\n\ttoUrl() {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\n\t}\n}\n\nfunction guessIndent(code) {\n\tconst lines = code.split('\\n');\n\n\tconst tabbed = lines.filter((line) => /^\\t+/.test(line));\n\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\n\n\tif (tabbed.length === 0 && spaced.length === 0) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif (tabbed.length >= spaced.length) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce((previous, current) => {\n\t\tconst numSpaces = /^ +/.exec(current)[0].length;\n\t\treturn Math.min(numSpaces, previous);\n\t}, Infinity);\n\n\treturn new Array(min + 1).join(' ');\n}\n\nfunction getRelativePath(from, to) {\n\tconst fromParts = from.split(/[/\\\\]/);\n\tconst toParts = to.split(/[/\\\\]/);\n\n\tfromParts.pop(); // get dirname\n\n\twhile (fromParts[0] === toParts[0]) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif (fromParts.length) {\n\t\tlet i = fromParts.length;\n\t\twhile (i--) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat(toParts).join('/');\n}\n\nconst toString = Object.prototype.toString;\n\nfunction isObject(thing) {\n\treturn toString.call(thing) === '[object Object]';\n}\n\nfunction getLocator(source) {\n\tconst originalLines = source.split('\\n');\n\tconst lineOffsets = [];\n\n\tfor (let i = 0, pos = 0; i < originalLines.length; i++) {\n\t\tlineOffsets.push(pos);\n\t\tpos += originalLines[i].length + 1;\n\t}\n\n\treturn function locate(index) {\n\t\tlet i = 0;\n\t\tlet j = lineOffsets.length;\n\t\twhile (i < j) {\n\t\t\tconst m = (i + j) >> 1;\n\t\t\tif (index < lineOffsets[m]) {\n\t\t\t\tj = m;\n\t\t\t} else {\n\t\t\t\ti = m + 1;\n\t\t\t}\n\t\t}\n\t\tconst line = i - 1;\n\t\tconst column = index - lineOffsets[line];\n\t\treturn { line, column };\n\t};\n}\n\nconst wordRegex = /\\w/;\n\nclass Mappings {\n\tconstructor(hires) {\n\t\tthis.hires = hires;\n\t\tthis.generatedCodeLine = 0;\n\t\tthis.generatedCodeColumn = 0;\n\t\tthis.raw = [];\n\t\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\n\t\tthis.pending = null;\n\t}\n\n\taddEdit(sourceIndex, content, loc, nameIndex) {\n\t\tif (content.length) {\n\t\t\tconst contentLengthMinusOne = content.length - 1;\n\t\t\tlet contentLineEnd = content.indexOf('\\n', 0);\n\t\t\tlet previousContentLineEnd = -1;\n\t\t\t// Loop through each line in the content and add a segment, but stop if the last line is empty,\n\t\t\t// else code afterwards would fill one line too many\n\t\t\twhile (contentLineEnd >= 0 && contentLengthMinusOne > contentLineEnd) {\n\t\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\t\t\tif (nameIndex >= 0) {\n\t\t\t\t\tsegment.push(nameIndex);\n\t\t\t\t}\n\t\t\t\tthis.rawSegments.push(segment);\n\n\t\t\t\tthis.generatedCodeLine += 1;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t\tthis.generatedCodeColumn = 0;\n\n\t\t\t\tpreviousContentLineEnd = contentLineEnd;\n\t\t\t\tcontentLineEnd = content.indexOf('\\n', contentLineEnd + 1);\n\t\t\t}\n\n\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\t\tif (nameIndex >= 0) {\n\t\t\t\tsegment.push(nameIndex);\n\t\t\t}\n\t\t\tthis.rawSegments.push(segment);\n\n\t\t\tthis.advance(content.slice(previousContentLineEnd + 1));\n\t\t} else if (this.pending) {\n\t\t\tthis.rawSegments.push(this.pending);\n\t\t\tthis.advance(content);\n\t\t}\n\n\t\tthis.pending = null;\n\t}\n\n\taddUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\n\t\tlet originalCharIndex = chunk.start;\n\t\tlet first = true;\n\t\t// when iterating each char, check if it's in a word boundary\n\t\tlet charInHiresBoundary = false;\n\n\t\twhile (originalCharIndex < chunk.end) {\n\t\t\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\n\t\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\n\t\t\t\tif (this.hires === 'boundary') {\n\t\t\t\t\t// in hires \"boundary\", group segments per word boundary than per char\n\t\t\t\t\tif (wordRegex.test(original[originalCharIndex])) {\n\t\t\t\t\t\t// for first char in the boundary found, start the boundary by pushing a segment\n\t\t\t\t\t\tif (!charInHiresBoundary) {\n\t\t\t\t\t\t\tthis.rawSegments.push(segment);\n\t\t\t\t\t\t\tcharInHiresBoundary = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// for non-word char, end the boundary by pushing a segment\n\t\t\t\t\t\tthis.rawSegments.push(segment);\n\t\t\t\t\t\tcharInHiresBoundary = false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.rawSegments.push(segment);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (original[originalCharIndex] === '\\n') {\n\t\t\t\tloc.line += 1;\n\t\t\t\tloc.column = 0;\n\t\t\t\tthis.generatedCodeLine += 1;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t\tthis.generatedCodeColumn = 0;\n\t\t\t\tfirst = true;\n\t\t\t} else {\n\t\t\t\tloc.column += 1;\n\t\t\t\tthis.generatedCodeColumn += 1;\n\t\t\t\tfirst = false;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t}\n\n\t\tthis.pending = null;\n\t}\n\n\tadvance(str) {\n\t\tif (!str) return;\n\n\t\tconst lines = str.split('\\n');\n\n\t\tif (lines.length > 1) {\n\t\t\tfor (let i = 0; i < lines.length - 1; i++) {\n\t\t\t\tthis.generatedCodeLine++;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t}\n\t\t\tthis.generatedCodeColumn = 0;\n\t\t}\n\n\t\tthis.generatedCodeColumn += lines[lines.length - 1].length;\n\t}\n}\n\nconst n = '\\n';\n\nconst warned = {\n\tinsertLeft: false,\n\tinsertRight: false,\n\tstoreName: false,\n};\n\nclass MagicString {\n\tconstructor(string, options = {}) {\n\t\tconst chunk = new Chunk(0, string.length, string);\n\n\t\tObject.defineProperties(this, {\n\t\t\toriginal: { writable: true, value: string },\n\t\t\toutro: { writable: true, value: '' },\n\t\t\tintro: { writable: true, value: '' },\n\t\t\tfirstChunk: { writable: true, value: chunk },\n\t\t\tlastChunk: { writable: true, value: chunk },\n\t\t\tlastSearchedChunk: { writable: true, value: chunk },\n\t\t\tbyStart: { writable: true, value: {} },\n\t\t\tbyEnd: { writable: true, value: {} },\n\t\t\tfilename: { writable: true, value: options.filename },\n\t\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\t\tsourcemapLocations: { writable: true, value: new BitSet() },\n\t\t\tstoredNames: { writable: true, value: {} },\n\t\t\tindentStr: { writable: true, value: undefined },\n\t\t\tignoreList: { writable: true, value: options.ignoreList },\n\t\t});\n\n\t\tthis.byStart[0] = chunk;\n\t\tthis.byEnd[string.length] = chunk;\n\t}\n\n\taddSourcemapLocation(char) {\n\t\tthis.sourcemapLocations.add(char);\n\t}\n\n\tappend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t}\n\n\tappendLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendLeft(content);\n\t\t} else {\n\t\t\tthis.intro += content;\n\t\t}\n\t\treturn this;\n\t}\n\n\tappendRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendRight(content);\n\t\t} else {\n\t\t\tthis.outro += content;\n\t\t}\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst cloned = new MagicString(this.original, { filename: this.filename });\n\n\t\tlet originalChunk = this.firstChunk;\n\t\tlet clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\n\n\t\twhile (originalChunk) {\n\t\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\n\t\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\n\n\t\t\tconst nextOriginalChunk = originalChunk.next;\n\t\t\tconst nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\t\tif (nextClonedChunk) {\n\t\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\t\tclonedChunk = nextClonedChunk;\n\t\t\t}\n\n\t\t\toriginalChunk = nextOriginalChunk;\n\t\t}\n\n\t\tcloned.lastChunk = clonedChunk;\n\n\t\tif (this.indentExclusionRanges) {\n\t\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n\t\t}\n\n\t\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\n\n\t\tcloned.intro = this.intro;\n\t\tcloned.outro = this.outro;\n\n\t\treturn cloned;\n\t}\n\n\tgenerateDecodedMap(options) {\n\t\toptions = options || {};\n\n\t\tconst sourceIndex = 0;\n\t\tconst names = Object.keys(this.storedNames);\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tconst locate = getLocator(this.original);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.firstChunk.eachNext((chunk) => {\n\t\t\tconst loc = locate(chunk.start);\n\n\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tmappings.addEdit(\n\t\t\t\t\tsourceIndex,\n\t\t\t\t\tchunk.content,\n\t\t\t\t\tloc,\n\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\n\t\t\t}\n\n\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\n\t\t\tsources: [\n\t\t\t\toptions.source ? getRelativePath(options.file || '', options.source) : options.file || '',\n\t\t\t],\n\t\t\tsourcesContent: options.includeContent ? [this.original] : undefined,\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t\tx_google_ignoreList: this.ignoreList ? [sourceIndex] : undefined,\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\t_ensureindentStr() {\n\t\tif (this.indentStr === undefined) {\n\t\t\tthis.indentStr = guessIndent(this.original);\n\t\t}\n\t}\n\n\t_getRawIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr;\n\t}\n\n\tgetIndentString() {\n\t\tthis._ensureindentStr();\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t}\n\n\tindent(indentStr, options) {\n\t\tconst pattern = /^[^\\r\\n]/gm;\n\n\t\tif (isObject(indentStr)) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tif (indentStr === undefined) {\n\t\t\tthis._ensureindentStr();\n\t\t\tindentStr = this.indentStr || '\\t';\n\t\t}\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tconst isExcluded = {};\n\n\t\tif (options.exclude) {\n\t\t\tconst exclusions =\n\t\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\n\t\t\texclusions.forEach((exclusion) => {\n\t\t\t\tfor (let i = exclusion[0]; i < exclusion[1]; i += 1) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tlet shouldIndentNextCharacter = options.indentStart !== false;\n\t\tconst replacer = (match) => {\n\t\t\tif (shouldIndentNextCharacter) return `${indentStr}${match}`;\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace(pattern, replacer);\n\n\t\tlet charIndex = 0;\n\t\tlet chunk = this.firstChunk;\n\n\t\twhile (chunk) {\n\t\t\tconst end = chunk.end;\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\n\n\t\t\t\t\tif (chunk.content.length) {\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharIndex = chunk.start;\n\n\t\t\t\twhile (charIndex < end) {\n\t\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\t\tconst char = this.original[charIndex];\n\n\t\t\t\t\t\tif (char === '\\n') {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\t\tif (charIndex === chunk.start) {\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\n\t\t\t\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcharIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = chunk.end;\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tthis.outro = this.outro.replace(pattern, replacer);\n\n\t\treturn this;\n\t}\n\n\tinsert() {\n\t\tthrow new Error(\n\t\t\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)',\n\t\t);\n\t}\n\n\tinsertLeft(index, content) {\n\t\tif (!warned.insertLeft) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead',\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertLeft = true;\n\t\t}\n\n\t\treturn this.appendLeft(index, content);\n\t}\n\n\tinsertRight(index, content) {\n\t\tif (!warned.insertRight) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead',\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertRight = true;\n\t\t}\n\n\t\treturn this.prependRight(index, content);\n\t}\n\n\tmove(start, end, index) {\n\t\tif (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\t\tthis._split(index);\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tconst oldLeft = first.previous;\n\t\tconst oldRight = last.next;\n\n\t\tconst newRight = this.byStart[index];\n\t\tif (!newRight && last === this.lastChunk) return this;\n\t\tconst newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\t\tif (oldLeft) oldLeft.next = oldRight;\n\t\tif (oldRight) oldRight.previous = oldLeft;\n\n\t\tif (newLeft) newLeft.next = first;\n\t\tif (newRight) newRight.previous = last;\n\n\t\tif (!first.previous) this.firstChunk = last.next;\n\t\tif (!last.next) {\n\t\t\tthis.lastChunk = first.previous;\n\t\t\tthis.lastChunk.next = null;\n\t\t}\n\n\t\tfirst.previous = newLeft;\n\t\tlast.next = newRight || null;\n\n\t\tif (!newLeft) this.firstChunk = first;\n\t\tif (!newRight) this.lastChunk = last;\n\t\treturn this;\n\t}\n\n\toverwrite(start, end, content, options) {\n\t\toptions = options || {};\n\t\treturn this.update(start, end, content, { ...options, overwrite: !options.contentOnly });\n\t}\n\n\tupdate(start, end, content, options) {\n\t\tif (typeof content !== 'string') throw new TypeError('replacement content must be a string');\n\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (end > this.original.length) throw new Error('end is out of bounds');\n\t\tif (start === end)\n\t\t\tthrow new Error(\n\t\t\t\t'Cannot overwrite a zero-length range – use appendLeft or prependRight instead',\n\t\t\t);\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tif (options === true) {\n\t\t\tif (!warned.storeName) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string',\n\t\t\t\t); // eslint-disable-line no-console\n\t\t\t\twarned.storeName = true;\n\t\t\t}\n\n\t\t\toptions = { storeName: true };\n\t\t}\n\t\tconst storeName = options !== undefined ? options.storeName : false;\n\t\tconst overwrite = options !== undefined ? options.overwrite : false;\n\n\t\tif (storeName) {\n\t\t\tconst original = this.original.slice(start, end);\n\t\t\tObject.defineProperty(this.storedNames, original, {\n\t\t\t\twritable: true,\n\t\t\t\tvalue: true,\n\t\t\t\tenumerable: true,\n\t\t\t});\n\t\t}\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tif (first) {\n\t\t\tlet chunk = first;\n\t\t\twhile (chunk !== last) {\n\t\t\t\tif (chunk.next !== this.byStart[chunk.end]) {\n\t\t\t\t\tthrow new Error('Cannot overwrite across a split point');\n\t\t\t\t}\n\t\t\t\tchunk = chunk.next;\n\t\t\t\tchunk.edit('', false);\n\t\t\t}\n\n\t\t\tfirst.edit(content, storeName, !overwrite);\n\t\t} else {\n\t\t\t// must be inserting at the end\n\t\t\tconst newChunk = new Chunk(start, end, '').edit(content, storeName);\n\n\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\t\tlast.next = newChunk;\n\t\t\tnewChunk.previous = last;\n\t\t}\n\t\treturn this;\n\t}\n\n\tprepend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t}\n\n\tprependLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependLeft(content);\n\t\t} else {\n\t\t\tthis.intro = content + this.intro;\n\t\t}\n\t\treturn this;\n\t}\n\n\tprependRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependRight(content);\n\t\t} else {\n\t\t\tthis.outro = content + this.outro;\n\t\t}\n\t\treturn this;\n\t}\n\n\tremove(start, end) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (start === end) return this;\n\n\t\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\n\t\tif (start > end) throw new Error('end must be greater than start');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tlet chunk = this.byStart[start];\n\n\t\twhile (chunk) {\n\t\t\tchunk.intro = '';\n\t\t\tchunk.outro = '';\n\t\t\tchunk.edit('');\n\n\t\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\n\t\t}\n\t\treturn this;\n\t}\n\n\treset(start, end) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (start === end) return this;\n\n\t\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\n\t\tif (start > end) throw new Error('end must be greater than start');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tlet chunk = this.byStart[start];\n\n\t\twhile (chunk) {\n\t\t\tchunk.reset();\n\n\t\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\n\t\t}\n\t\treturn this;\n\t}\n\n\tlastChar() {\n\t\tif (this.outro.length) return this.outro[this.outro.length - 1];\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\n\t\t\tif (chunk.content.length) return chunk.content[chunk.content.length - 1];\n\t\t\tif (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\n\t\t} while ((chunk = chunk.previous));\n\t\tif (this.intro.length) return this.intro[this.intro.length - 1];\n\t\treturn '';\n\t}\n\n\tlastLine() {\n\t\tlet lineIndex = this.outro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\n\t\tlet lineStr = this.outro;\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length > 0) {\n\t\t\t\tlineIndex = chunk.outro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.outro + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.content.length > 0) {\n\t\t\t\tlineIndex = chunk.content.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.content + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.intro.length > 0) {\n\t\t\t\tlineIndex = chunk.intro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.intro + lineStr;\n\t\t\t}\n\t\t} while ((chunk = chunk.previous));\n\t\tlineIndex = this.intro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\n\t\treturn this.intro + lineStr;\n\t}\n\n\tslice(start = 0, end = this.original.length) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tlet result = '';\n\n\t\t// find start chunk\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\n\t\t\t// found end chunk before start\n\t\t\tif (chunk.start < end && chunk.end >= end) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tif (chunk && chunk.edited && chunk.start !== start)\n\t\t\tthrow new Error(`Cannot use replaced character ${start} as slice start anchor.`);\n\n\t\tconst startChunk = chunk;\n\t\twhile (chunk) {\n\t\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\n\t\t\t\tresult += chunk.intro;\n\t\t\t}\n\n\t\t\tconst containsEnd = chunk.start < end && chunk.end >= end;\n\t\t\tif (containsEnd && chunk.edited && chunk.end !== end)\n\t\t\t\tthrow new Error(`Cannot use replaced character ${end} as slice end anchor.`);\n\n\t\t\tconst sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\t\tconst sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\n\n\t\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\n\t\t\t\tresult += chunk.outro;\n\t\t\t}\n\n\t\t\tif (containsEnd) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// TODO deprecate this? not really very useful\n\tsnip(start, end) {\n\t\tconst clone = this.clone();\n\t\tclone.remove(0, start);\n\t\tclone.remove(end, clone.original.length);\n\n\t\treturn clone;\n\t}\n\n\t_split(index) {\n\t\tif (this.byStart[index] || this.byEnd[index]) return;\n\n\t\tlet chunk = this.lastSearchedChunk;\n\t\tconst searchForward = index > chunk.end;\n\n\t\twhile (chunk) {\n\t\t\tif (chunk.contains(index)) return this._splitChunk(chunk, index);\n\n\t\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\n\t\t}\n\t}\n\n\t_splitChunk(chunk, index) {\n\t\tif (chunk.edited && chunk.content.length) {\n\t\t\t// zero-length edited chunks are a special case (overlapping replacements)\n\t\t\tconst loc = getLocator(this.original)(index);\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} – \"${chunk.original}\")`,\n\t\t\t);\n\t\t}\n\n\t\tconst newChunk = chunk.split(index);\n\n\t\tthis.byEnd[index] = chunk;\n\t\tthis.byStart[index] = newChunk;\n\t\tthis.byEnd[newChunk.end] = newChunk;\n\n\t\tif (chunk === this.lastChunk) this.lastChunk = newChunk;\n\n\t\tthis.lastSearchedChunk = chunk;\n\t\treturn true;\n\t}\n\n\ttoString() {\n\t\tlet str = this.intro;\n\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk) {\n\t\t\tstr += chunk.toString();\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn str + this.outro;\n\t}\n\n\tisEmpty() {\n\t\tlet chunk = this.firstChunk;\n\t\tdo {\n\t\t\tif (\n\t\t\t\t(chunk.intro.length && chunk.intro.trim()) ||\n\t\t\t\t(chunk.content.length && chunk.content.trim()) ||\n\t\t\t\t(chunk.outro.length && chunk.outro.trim())\n\t\t\t)\n\t\t\t\treturn false;\n\t\t} while ((chunk = chunk.next));\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\tlet chunk = this.firstChunk;\n\t\tlet length = 0;\n\t\tdo {\n\t\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\n\t\t} while ((chunk = chunk.next));\n\t\treturn length;\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimEndAborted(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tlet chunk = this.lastChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimEnd(rx);\n\n\t\t\t// if chunk was trimmed, we have a new lastChunk\n\t\t\tif (chunk.end !== end) {\n\t\t\t\tif (this.lastChunk === chunk) {\n\t\t\t\t\tthis.lastChunk = chunk.next;\n\t\t\t\t}\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.previous;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimEnd(charType) {\n\t\tthis.trimEndAborted(charType);\n\t\treturn this;\n\t}\n\ttrimStartAborted(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tlet chunk = this.firstChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimStart(rx);\n\n\t\t\tif (chunk.end !== end) {\n\t\t\t\t// special case...\n\t\t\t\tif (chunk === this.lastChunk) this.lastChunk = chunk.next;\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.next;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimStart(charType) {\n\t\tthis.trimStartAborted(charType);\n\t\treturn this;\n\t}\n\n\thasChanged() {\n\t\treturn this.original !== this.toString();\n\t}\n\n\t_replaceRegexp(searchValue, replacement) {\n\t\tfunction getReplacement(match, str) {\n\t\t\tif (typeof replacement === 'string') {\n\t\t\t\treturn replacement.replace(/\\$(\\$|&|\\d+)/g, (_, i) => {\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n\t\t\t\t\tif (i === '$') return '$';\n\t\t\t\t\tif (i === '&') return match[0];\n\t\t\t\t\tconst num = +i;\n\t\t\t\t\tif (num < match.length) return match[+i];\n\t\t\t\t\treturn `$${i}`;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn replacement(...match, match.index, str, match.groups);\n\t\t\t}\n\t\t}\n\t\tfunction matchAll(re, str) {\n\t\t\tlet match;\n\t\t\tconst matches = [];\n\t\t\twhile ((match = re.exec(str))) {\n\t\t\t\tmatches.push(match);\n\t\t\t}\n\t\t\treturn matches;\n\t\t}\n\t\tif (searchValue.global) {\n\t\t\tconst matches = matchAll(searchValue, this.original);\n\t\t\tmatches.forEach((match) => {\n\t\t\t\tif (match.index != null)\n\t\t\t\t\tthis.overwrite(\n\t\t\t\t\t\tmatch.index,\n\t\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\t\tgetReplacement(match, this.original),\n\t\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tconst match = this.original.match(searchValue);\n\t\t\tif (match && match.index != null)\n\t\t\t\tthis.overwrite(\n\t\t\t\t\tmatch.index,\n\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\tgetReplacement(match, this.original),\n\t\t\t\t);\n\t\t}\n\t\treturn this;\n\t}\n\n\t_replaceString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst index = original.indexOf(string);\n\n\t\tif (index !== -1) {\n\t\t\tthis.overwrite(index, index + string.length, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplace(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceString(searchValue, replacement);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n\n\t_replaceAllString(string, replacement) {\n\t\tconst { original } = this;\n\t\tconst stringLength = string.length;\n\t\tfor (\n\t\t\tlet index = original.indexOf(string);\n\t\t\tindex !== -1;\n\t\t\tindex = original.indexOf(string, index + stringLength)\n\t\t) {\n\t\t\tthis.overwrite(index, index + stringLength, replacement);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treplaceAll(searchValue, replacement) {\n\t\tif (typeof searchValue === 'string') {\n\t\t\treturn this._replaceAllString(searchValue, replacement);\n\t\t}\n\n\t\tif (!searchValue.global) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'MagicString.prototype.replaceAll called with a non-global RegExp argument',\n\t\t\t);\n\t\t}\n\n\t\treturn this._replaceRegexp(searchValue, replacement);\n\t}\n}\n\nvar _a, _b;\nclass ScriptCompileContext {\n  constructor(descriptor, options) {\n    this.descriptor = descriptor;\n    this.options = options;\n    this.isCE = false;\n    this.source = this.descriptor.source;\n    this.filename = this.descriptor.filename;\n    this.s = new MagicString(this.source);\n    this.startOffset = (_a = this.descriptor.scriptSetup) == null ? void 0 : _a.loc.start.offset;\n    this.endOffset = (_b = this.descriptor.scriptSetup) == null ? void 0 : _b.loc.end.offset;\n    this.userImports = /* @__PURE__ */ Object.create(null);\n    // macros presence check\n    this.hasDefinePropsCall = false;\n    this.hasDefineEmitCall = false;\n    this.hasDefineExposeCall = false;\n    this.hasDefaultExportName = false;\n    this.hasDefaultExportRender = false;\n    this.hasDefineOptionsCall = false;\n    this.hasDefineSlotsCall = false;\n    this.hasDefineModelCall = false;\n    this.propsDestructuredBindings = /* @__PURE__ */ Object.create(null);\n    // defineModel\n    this.modelDecls = /* @__PURE__ */ Object.create(null);\n    // codegen\n    this.bindingMetadata = {};\n    this.helperImports = /* @__PURE__ */ new Set();\n    const { script, scriptSetup } = descriptor;\n    const scriptLang = script && script.lang;\n    const scriptSetupLang = scriptSetup && scriptSetup.lang;\n    this.isJS = scriptLang === \"js\" || scriptLang === \"jsx\" || scriptSetupLang === \"js\" || scriptSetupLang === \"jsx\";\n    this.isTS = scriptLang === \"ts\" || scriptLang === \"tsx\" || scriptSetupLang === \"ts\" || scriptSetupLang === \"tsx\";\n    const customElement = options.customElement;\n    const filename = this.descriptor.filename;\n    if (customElement) {\n      this.isCE = typeof customElement === \"boolean\" ? customElement : customElement(filename);\n    }\n    const plugins = resolveParserPlugins(\n      scriptLang || scriptSetupLang,\n      options.babelParserPlugins\n    );\n    function parse(input, offset) {\n      try {\n        return parse_1$1(input, {\n          plugins,\n          sourceType: \"module\"\n        }).program;\n      } catch (e) {\n        e.message = `[vue/compiler-sfc] ${e.message}\n\n${descriptor.filename}\n${generateCodeFrame(\n          descriptor.source,\n          e.pos + offset,\n          e.pos + offset + 1\n        )}`;\n        throw e;\n      }\n    }\n    this.scriptAst = descriptor.script && parse(descriptor.script.content, descriptor.script.loc.start.offset);\n    this.scriptSetupAst = descriptor.scriptSetup && parse(descriptor.scriptSetup.content, this.startOffset);\n  }\n  helper(key) {\n    this.helperImports.add(key);\n    return `_${key}`;\n  }\n  getString(node, scriptSetup = true) {\n    const block = scriptSetup ? this.descriptor.scriptSetup : this.descriptor.script;\n    return block.content.slice(node.start, node.end);\n  }\n  error(msg, node, scope) {\n    const offset = scope ? scope.offset : this.startOffset;\n    throw new Error(\n      `[@vue/compiler-sfc] ${msg}\n\n${(scope || this.descriptor).filename}\n${generateCodeFrame(\n        (scope || this.descriptor).source,\n        node.start + offset,\n        node.end + offset\n      )}`\n    );\n  }\n}\nfunction resolveParserPlugins(lang, userPlugins, dts = false) {\n  const plugins = [];\n  if (!userPlugins || !userPlugins.some(\n    (p) => p === \"importAssertions\" || p === \"importAttributes\" || isArray$3(p) && p[0] === \"importAttributes\"\n  )) {\n    plugins.push(\"importAttributes\");\n  }\n  if (lang === \"jsx\" || lang === \"tsx\") {\n    plugins.push(\"jsx\");\n  } else if (userPlugins) {\n    userPlugins = userPlugins.filter((p) => p !== \"jsx\");\n  }\n  if (lang === \"ts\" || lang === \"tsx\") {\n    plugins.push([\"typescript\", { dts }], \"explicitResourceManagement\");\n    if (!userPlugins || !userPlugins.includes(\"decorators\")) {\n      plugins.push(\"decorators-legacy\");\n    }\n  }\n  if (userPlugins) {\n    plugins.push(...userPlugins);\n  }\n  return plugins;\n}\n\nfunction rewriteDefault(input, as, parserPlugins) {\n  const ast = parse_1$1(input, {\n    sourceType: \"module\",\n    plugins: resolveParserPlugins(\"js\", parserPlugins)\n  }).program.body;\n  const s = new MagicString(input);\n  rewriteDefaultAST(ast, s, as);\n  return s.toString();\n}\nfunction rewriteDefaultAST(ast, s, as) {\n  if (!hasDefaultExport(ast)) {\n    s.append(`\nconst ${as} = {}`);\n    return;\n  }\n  ast.forEach((node) => {\n    if (node.type === \"ExportDefaultDeclaration\") {\n      if (node.declaration.type === \"ClassDeclaration\" && node.declaration.id) {\n        let start = node.declaration.decorators && node.declaration.decorators.length > 0 ? node.declaration.decorators[node.declaration.decorators.length - 1].end : node.start;\n        s.overwrite(start, node.declaration.id.start, ` class `);\n        s.append(`\nconst ${as} = ${node.declaration.id.name}`);\n      } else {\n        s.overwrite(node.start, node.declaration.start, `const ${as} = `);\n      }\n    } else if (node.type === \"ExportNamedDeclaration\") {\n      for (const specifier of node.specifiers) {\n        if (specifier.type === \"ExportSpecifier\" && specifier.exported.type === \"Identifier\" && specifier.exported.name === \"default\") {\n          if (node.source) {\n            if (specifier.local.name === \"default\") {\n              s.prepend(\n                `import { default as __VUE_DEFAULT__ } from '${node.source.value}'\n`\n              );\n              const end2 = specifierEnd(s, specifier.local.end, node.end);\n              s.remove(specifier.start, end2);\n              s.append(`\nconst ${as} = __VUE_DEFAULT__`);\n              continue;\n            } else {\n              s.prepend(\n                `import { ${s.slice(\n                  specifier.local.start,\n                  specifier.local.end\n                )} as __VUE_DEFAULT__ } from '${node.source.value}'\n`\n              );\n              const end2 = specifierEnd(s, specifier.exported.end, node.end);\n              s.remove(specifier.start, end2);\n              s.append(`\nconst ${as} = __VUE_DEFAULT__`);\n              continue;\n            }\n          }\n          const end = specifierEnd(s, specifier.end, node.end);\n          s.remove(specifier.start, end);\n          s.append(`\nconst ${as} = ${specifier.local.name}`);\n        }\n      }\n    }\n  });\n}\nfunction hasDefaultExport(ast) {\n  for (const stmt of ast) {\n    if (stmt.type === \"ExportDefaultDeclaration\") {\n      return true;\n    } else if (stmt.type === \"ExportNamedDeclaration\" && stmt.specifiers.some(\n      (spec) => spec.exported.name === \"default\"\n    )) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction specifierEnd(s, end, nodeEnd) {\n  let hasCommas = false;\n  let oldEnd = end;\n  while (end < nodeEnd) {\n    if (/\\s/.test(s.slice(end, end + 1))) {\n      end++;\n    } else if (s.slice(end, end + 1) === \",\") {\n      end++;\n      hasCommas = true;\n      break;\n    } else if (s.slice(end, end + 1) === \"}\") {\n      break;\n    }\n  }\n  return hasCommas ? end : oldEnd;\n}\n\nvar __defProp$3 = Object.defineProperty;\nvar __defProps$2 = Object.defineProperties;\nvar __getOwnPropDescs$2 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$3 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$3 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$3 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$3 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$3.call(b, prop))\n      __defNormalProp$3(a, prop, b[prop]);\n  if (__getOwnPropSymbols$3)\n    for (var prop of __getOwnPropSymbols$3(b)) {\n      if (__propIsEnum$3.call(b, prop))\n        __defNormalProp$3(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$2 = (a, b) => __defProps$2(a, __getOwnPropDescs$2(b));\nconst normalScriptDefaultVar = `__default__`;\nfunction processNormalScript(ctx, scopeId) {\n  var _a;\n  const script = ctx.descriptor.script;\n  if (script.lang && !ctx.isJS && !ctx.isTS) {\n    return script;\n  }\n  try {\n    let content = script.content;\n    let map = script.map;\n    const scriptAst = ctx.scriptAst;\n    const bindings = analyzeScriptBindings(scriptAst.body);\n    const { cssVars } = ctx.descriptor;\n    const { genDefaultAs, isProd } = ctx.options;\n    if (cssVars.length || genDefaultAs) {\n      const defaultVar = genDefaultAs || normalScriptDefaultVar;\n      const s = new MagicString(content);\n      rewriteDefaultAST(scriptAst.body, s, defaultVar);\n      content = s.toString();\n      if (cssVars.length && !((_a = ctx.options.templateOptions) == null ? void 0 : _a.ssr)) {\n        content += genNormalScriptCssVarsCode(\n          cssVars,\n          bindings,\n          scopeId,\n          !!isProd,\n          defaultVar\n        );\n      }\n      if (!genDefaultAs) {\n        content += `\nexport default ${defaultVar}`;\n      }\n    }\n    return __spreadProps$2(__spreadValues$3({}, script), {\n      content,\n      map,\n      bindings,\n      scriptAst: scriptAst.body\n    });\n  } catch (e) {\n    return script;\n  }\n}\n\nvar __defProp$2 = Object.defineProperty;\nvar __defProps$1 = Object.defineProperties;\nvar __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$2 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$2 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$2 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$2.call(b, prop))\n      __defNormalProp$2(a, prop, b[prop]);\n  if (__getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(b)) {\n      if (__propIsEnum$2.call(b, prop))\n        __defNormalProp$2(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b));\nclass TypeScope {\n  constructor(filename, source, offset = 0, imports = /* @__PURE__ */ Object.create(null), types = /* @__PURE__ */ Object.create(null), declares = /* @__PURE__ */ Object.create(null)) {\n    this.filename = filename;\n    this.source = source;\n    this.offset = offset;\n    this.imports = imports;\n    this.types = types;\n    this.declares = declares;\n    this.isGenericScope = false;\n    this.resolvedImportSources = /* @__PURE__ */ Object.create(null);\n    this.exportedTypes = /* @__PURE__ */ Object.create(null);\n    this.exportedDeclares = /* @__PURE__ */ Object.create(null);\n  }\n}\nfunction resolveTypeElements(ctx, node, scope, typeParameters) {\n  const canCache = !typeParameters;\n  if (canCache && node._resolvedElements) {\n    return node._resolvedElements;\n  }\n  const resolved = innerResolveTypeElements(\n    ctx,\n    node,\n    node._ownerScope || scope || ctxToScope(ctx),\n    typeParameters\n  );\n  return canCache ? node._resolvedElements = resolved : resolved;\n}\nfunction innerResolveTypeElements(ctx, node, scope, typeParameters) {\n  var _a, _b;\n  switch (node.type) {\n    case \"TSTypeLiteral\":\n      return typeElementsToMap(ctx, node.members, scope, typeParameters);\n    case \"TSInterfaceDeclaration\":\n      return resolveInterfaceMembers(ctx, node, scope, typeParameters);\n    case \"TSTypeAliasDeclaration\":\n    case \"TSParenthesizedType\":\n      return resolveTypeElements(\n        ctx,\n        node.typeAnnotation,\n        scope,\n        typeParameters\n      );\n    case \"TSFunctionType\": {\n      return { props: {}, calls: [node] };\n    }\n    case \"TSUnionType\":\n    case \"TSIntersectionType\":\n      return mergeElements(\n        node.types.map((t) => resolveTypeElements(ctx, t, scope, typeParameters)),\n        node.type\n      );\n    case \"TSMappedType\":\n      return resolveMappedType(ctx, node, scope);\n    case \"TSIndexedAccessType\": {\n      const types = resolveIndexType(ctx, node, scope);\n      return mergeElements(\n        types.map((t) => resolveTypeElements(ctx, t, t._ownerScope)),\n        \"TSUnionType\"\n      );\n    }\n    case \"TSExpressionWithTypeArguments\":\n    case \"TSTypeReference\": {\n      const typeName = getReferenceName(node);\n      if ((typeName === \"ExtractPropTypes\" || typeName === \"ExtractPublicPropTypes\") && node.typeParameters && ((_a = scope.imports[typeName]) == null ? void 0 : _a.source) === \"vue\") {\n        return resolveExtractPropTypes(\n          resolveTypeElements(\n            ctx,\n            node.typeParameters.params[0],\n            scope,\n            typeParameters\n          ),\n          scope\n        );\n      }\n      const resolved = resolveTypeReference(ctx, node, scope);\n      if (resolved) {\n        let typeParams;\n        if ((resolved.type === \"TSTypeAliasDeclaration\" || resolved.type === \"TSInterfaceDeclaration\") && resolved.typeParameters && node.typeParameters) {\n          typeParams = /* @__PURE__ */ Object.create(null);\n          resolved.typeParameters.params.forEach((p, i) => {\n            let param = typeParameters && typeParameters[p.name];\n            if (!param)\n              param = node.typeParameters.params[i];\n            typeParams[p.name] = param;\n          });\n        }\n        return resolveTypeElements(\n          ctx,\n          resolved,\n          resolved._ownerScope,\n          typeParams\n        );\n      } else {\n        if (typeof typeName === \"string\") {\n          if (typeParameters && typeParameters[typeName]) {\n            return resolveTypeElements(\n              ctx,\n              typeParameters[typeName],\n              scope,\n              typeParameters\n            );\n          }\n          if (\n            // @ts-expect-error\n            SupportedBuiltinsSet.has(typeName)\n          ) {\n            return resolveBuiltin(\n              ctx,\n              node,\n              typeName,\n              scope,\n              typeParameters\n            );\n          } else if (typeName === \"ReturnType\" && node.typeParameters) {\n            const ret = resolveReturnType(\n              ctx,\n              node.typeParameters.params[0],\n              scope\n            );\n            if (ret) {\n              return resolveTypeElements(ctx, ret, scope);\n            }\n          }\n        }\n        return ctx.error(\n          `Unresolvable type reference or unsupported built-in utility type`,\n          node,\n          scope\n        );\n      }\n    }\n    case \"TSImportType\": {\n      if (getId(node.argument) === \"vue\" && ((_b = node.qualifier) == null ? void 0 : _b.type) === \"Identifier\" && node.qualifier.name === \"ExtractPropTypes\" && node.typeParameters) {\n        return resolveExtractPropTypes(\n          resolveTypeElements(ctx, node.typeParameters.params[0], scope),\n          scope\n        );\n      }\n      const sourceScope = importSourceToScope(\n        ctx,\n        node.argument,\n        scope,\n        node.argument.value\n      );\n      const resolved = resolveTypeReference(ctx, node, sourceScope);\n      if (resolved) {\n        return resolveTypeElements(ctx, resolved, resolved._ownerScope);\n      }\n      break;\n    }\n    case \"TSTypeQuery\":\n      {\n        const resolved = resolveTypeReference(ctx, node, scope);\n        if (resolved) {\n          return resolveTypeElements(ctx, resolved, resolved._ownerScope);\n        }\n      }\n      break;\n  }\n  return ctx.error(`Unresolvable type: ${node.type}`, node, scope);\n}\nfunction typeElementsToMap(ctx, elements, scope = ctxToScope(ctx), typeParameters) {\n  const res = { props: {} };\n  for (const e of elements) {\n    if (e.type === \"TSPropertySignature\" || e.type === \"TSMethodSignature\") {\n      if (typeParameters) {\n        scope = createChildScope(scope);\n        scope.isGenericScope = true;\n        Object.assign(scope.types, typeParameters);\n      }\n      e._ownerScope = scope;\n      const name = getId(e.key);\n      if (name && !e.computed) {\n        res.props[name] = e;\n      } else if (e.key.type === \"TemplateLiteral\") {\n        for (const key of resolveTemplateKeys(ctx, e.key, scope)) {\n          res.props[key] = e;\n        }\n      } else {\n        ctx.error(\n          `Unsupported computed key in type referenced by a macro`,\n          e.key,\n          scope\n        );\n      }\n    } else if (e.type === \"TSCallSignatureDeclaration\") {\n      (res.calls || (res.calls = [])).push(e);\n    }\n  }\n  return res;\n}\nfunction mergeElements(maps, type) {\n  if (maps.length === 1)\n    return maps[0];\n  const res = { props: {} };\n  const { props: baseProps } = res;\n  for (const { props, calls } of maps) {\n    for (const key in props) {\n      if (!hasOwn(baseProps, key)) {\n        baseProps[key] = props[key];\n      } else {\n        baseProps[key] = createProperty(\n          baseProps[key].key,\n          {\n            type,\n            // @ts-expect-error\n            types: [baseProps[key], props[key]]\n          },\n          baseProps[key]._ownerScope,\n          baseProps[key].optional || props[key].optional\n        );\n      }\n    }\n    if (calls) {\n      (res.calls || (res.calls = [])).push(...calls);\n    }\n  }\n  return res;\n}\nfunction createProperty(key, typeAnnotation, scope, optional) {\n  return {\n    type: \"TSPropertySignature\",\n    key,\n    kind: \"get\",\n    optional,\n    typeAnnotation: {\n      type: \"TSTypeAnnotation\",\n      typeAnnotation\n    },\n    _ownerScope: scope\n  };\n}\nfunction resolveInterfaceMembers(ctx, node, scope, typeParameters) {\n  const base = typeElementsToMap(\n    ctx,\n    node.body.body,\n    node._ownerScope,\n    typeParameters\n  );\n  if (node.extends) {\n    for (const ext of node.extends) {\n      if (ext.leadingComments && ext.leadingComments.some((c) => c.value.includes(\"@vue-ignore\"))) {\n        continue;\n      }\n      try {\n        const { props, calls } = resolveTypeElements(ctx, ext, scope);\n        for (const key in props) {\n          if (!hasOwn(base.props, key)) {\n            base.props[key] = props[key];\n          }\n        }\n        if (calls) {\n          ;\n          (base.calls || (base.calls = [])).push(...calls);\n        }\n      } catch (e) {\n        ctx.error(\n          `Failed to resolve extends base type.\nIf this previously worked in 3.2, you can instruct the compiler to ignore this extend by adding /* @vue-ignore */ before it, for example:\n\ninterface Props extends /* @vue-ignore */ Base {}\n\nNote: both in 3.2 or with the ignore, the properties in the base type are treated as fallthrough attrs at runtime.`,\n          ext\n        );\n      }\n    }\n  }\n  return base;\n}\nfunction resolveMappedType(ctx, node, scope) {\n  const res = { props: {} };\n  const keys = resolveStringType(ctx, node.typeParameter.constraint, scope);\n  for (const key of keys) {\n    res.props[key] = createProperty(\n      {\n        type: \"Identifier\",\n        name: key\n      },\n      node.typeAnnotation,\n      scope,\n      !!node.optional\n    );\n  }\n  return res;\n}\nfunction resolveIndexType(ctx, node, scope) {\n  var _a, _b;\n  if (node.indexType.type === \"TSNumberKeyword\") {\n    return resolveArrayElementType(ctx, node.objectType, scope);\n  }\n  const { indexType, objectType } = node;\n  const types = [];\n  let keys;\n  let resolved;\n  if (indexType.type === \"TSStringKeyword\") {\n    resolved = resolveTypeElements(ctx, objectType, scope);\n    keys = Object.keys(resolved.props);\n  } else {\n    keys = resolveStringType(ctx, indexType, scope);\n    resolved = resolveTypeElements(ctx, objectType, scope);\n  }\n  for (const key of keys) {\n    const targetType = (_b = (_a = resolved.props[key]) == null ? void 0 : _a.typeAnnotation) == null ? void 0 : _b.typeAnnotation;\n    if (targetType) {\n      targetType._ownerScope = resolved.props[key]._ownerScope;\n      types.push(targetType);\n    }\n  }\n  return types;\n}\nfunction resolveArrayElementType(ctx, node, scope) {\n  if (node.type === \"TSArrayType\") {\n    return [node.elementType];\n  }\n  if (node.type === \"TSTupleType\") {\n    return node.elementTypes.map(\n      (t) => t.type === \"TSNamedTupleMember\" ? t.elementType : t\n    );\n  }\n  if (node.type === \"TSTypeReference\") {\n    if (getReferenceName(node) === \"Array\" && node.typeParameters) {\n      return node.typeParameters.params;\n    } else {\n      const resolved = resolveTypeReference(ctx, node, scope);\n      if (resolved) {\n        return resolveArrayElementType(ctx, resolved, scope);\n      }\n    }\n  }\n  return ctx.error(\n    \"Failed to resolve element type from target type\",\n    node,\n    scope\n  );\n}\nfunction resolveStringType(ctx, node, scope) {\n  switch (node.type) {\n    case \"StringLiteral\":\n      return [node.value];\n    case \"TSLiteralType\":\n      return resolveStringType(ctx, node.literal, scope);\n    case \"TSUnionType\":\n      return node.types.map((t) => resolveStringType(ctx, t, scope)).flat();\n    case \"TemplateLiteral\": {\n      return resolveTemplateKeys(ctx, node, scope);\n    }\n    case \"TSTypeReference\": {\n      const resolved = resolveTypeReference(ctx, node, scope);\n      if (resolved) {\n        return resolveStringType(ctx, resolved, scope);\n      }\n      if (node.typeName.type === \"Identifier\") {\n        const getParam = (index = 0) => resolveStringType(ctx, node.typeParameters.params[index], scope);\n        switch (node.typeName.name) {\n          case \"Extract\":\n            return getParam(1);\n          case \"Exclude\": {\n            const excluded = getParam(1);\n            return getParam().filter((s) => !excluded.includes(s));\n          }\n          case \"Uppercase\":\n            return getParam().map((s) => s.toUpperCase());\n          case \"Lowercase\":\n            return getParam().map((s) => s.toLowerCase());\n          case \"Capitalize\":\n            return getParam().map(capitalize$1);\n          case \"Uncapitalize\":\n            return getParam().map((s) => s[0].toLowerCase() + s.slice(1));\n          default:\n            ctx.error(\n              \"Unsupported type when resolving index type\",\n              node.typeName,\n              scope\n            );\n        }\n      }\n    }\n  }\n  return ctx.error(\"Failed to resolve index type into finite keys\", node, scope);\n}\nfunction resolveTemplateKeys(ctx, node, scope) {\n  if (!node.expressions.length) {\n    return [node.quasis[0].value.raw];\n  }\n  const res = [];\n  const e = node.expressions[0];\n  const q = node.quasis[0];\n  const leading = q ? q.value.raw : ``;\n  const resolved = resolveStringType(ctx, e, scope);\n  const restResolved = resolveTemplateKeys(\n    ctx,\n    __spreadProps$1(__spreadValues$2({}, node), {\n      expressions: node.expressions.slice(1),\n      quasis: q ? node.quasis.slice(1) : node.quasis\n    }),\n    scope\n  );\n  for (const r of resolved) {\n    for (const rr of restResolved) {\n      res.push(leading + r + rr);\n    }\n  }\n  return res;\n}\nconst SupportedBuiltinsSet = /* @__PURE__ */ new Set([\n  \"Partial\",\n  \"Required\",\n  \"Readonly\",\n  \"Pick\",\n  \"Omit\"\n]);\nfunction resolveBuiltin(ctx, node, name, scope, typeParameters) {\n  const t = resolveTypeElements(\n    ctx,\n    node.typeParameters.params[0],\n    scope,\n    typeParameters\n  );\n  switch (name) {\n    case \"Partial\": {\n      const res2 = { props: {}, calls: t.calls };\n      Object.keys(t.props).forEach((key) => {\n        res2.props[key] = __spreadProps$1(__spreadValues$2({}, t.props[key]), { optional: true });\n      });\n      return res2;\n    }\n    case \"Required\": {\n      const res2 = { props: {}, calls: t.calls };\n      Object.keys(t.props).forEach((key) => {\n        res2.props[key] = __spreadProps$1(__spreadValues$2({}, t.props[key]), { optional: false });\n      });\n      return res2;\n    }\n    case \"Readonly\":\n      return t;\n    case \"Pick\": {\n      const picked = resolveStringType(\n        ctx,\n        node.typeParameters.params[1],\n        scope\n      );\n      const res2 = { props: {}, calls: t.calls };\n      for (const key of picked) {\n        res2.props[key] = t.props[key];\n      }\n      return res2;\n    }\n    case \"Omit\":\n      const omitted = resolveStringType(\n        ctx,\n        node.typeParameters.params[1],\n        scope\n      );\n      const res = { props: {}, calls: t.calls };\n      for (const key in t.props) {\n        if (!omitted.includes(key)) {\n          res.props[key] = t.props[key];\n        }\n      }\n      return res;\n  }\n}\nfunction resolveTypeReference(ctx, node, scope, name, onlyExported = false) {\n  const canCache = !(scope == null ? void 0 : scope.isGenericScope);\n  if (canCache && node._resolvedReference) {\n    return node._resolvedReference;\n  }\n  const resolved = innerResolveTypeReference(\n    ctx,\n    scope || ctxToScope(ctx),\n    name || getReferenceName(node),\n    node,\n    onlyExported\n  );\n  return canCache ? node._resolvedReference = resolved : resolved;\n}\nfunction innerResolveTypeReference(ctx, scope, name, node, onlyExported) {\n  if (typeof name === \"string\") {\n    if (scope.imports[name]) {\n      return resolveTypeFromImport(ctx, node, name, scope);\n    } else {\n      const lookupSource = node.type === \"TSTypeQuery\" ? onlyExported ? scope.exportedDeclares : scope.declares : onlyExported ? scope.exportedTypes : scope.types;\n      if (lookupSource[name]) {\n        return lookupSource[name];\n      } else {\n        const globalScopes = resolveGlobalScope(ctx);\n        if (globalScopes) {\n          for (const s of globalScopes) {\n            const src = node.type === \"TSTypeQuery\" ? s.declares : s.types;\n            if (src[name]) {\n              (ctx.deps || (ctx.deps = /* @__PURE__ */ new Set())).add(s.filename);\n              return src[name];\n            }\n          }\n        }\n      }\n    }\n  } else {\n    let ns = innerResolveTypeReference(ctx, scope, name[0], node, onlyExported);\n    if (ns) {\n      if (ns.type !== \"TSModuleDeclaration\") {\n        ns = ns._ns;\n      }\n      if (ns) {\n        const childScope = moduleDeclToScope(ctx, ns, ns._ownerScope || scope);\n        return innerResolveTypeReference(\n          ctx,\n          childScope,\n          name.length > 2 ? name.slice(1) : name[name.length - 1],\n          node,\n          !ns.declare\n        );\n      }\n    }\n  }\n}\nfunction getReferenceName(node) {\n  const ref = node.type === \"TSTypeReference\" ? node.typeName : node.type === \"TSExpressionWithTypeArguments\" ? node.expression : node.type === \"TSImportType\" ? node.qualifier : node.exprName;\n  if ((ref == null ? void 0 : ref.type) === \"Identifier\") {\n    return ref.name;\n  } else if ((ref == null ? void 0 : ref.type) === \"TSQualifiedName\") {\n    return qualifiedNameToPath(ref);\n  } else {\n    return \"default\";\n  }\n}\nfunction qualifiedNameToPath(node) {\n  if (node.type === \"Identifier\") {\n    return [node.name];\n  } else {\n    return [...qualifiedNameToPath(node.left), node.right.name];\n  }\n}\nfunction resolveGlobalScope(ctx) {\n  if (ctx.options.globalTypeFiles) {\n    const fs = resolveFS(ctx);\n    if (!fs) {\n      throw new Error(\"[vue/compiler-sfc] globalTypeFiles requires fs access.\");\n    }\n    return ctx.options.globalTypeFiles.map(\n      (file) => fileToScope(ctx, normalizePath(file), true)\n    );\n  }\n}\nlet ts;\nlet loadTS;\nfunction registerTS(_loadTS) {\n  loadTS = () => {\n    try {\n      return _loadTS();\n    } catch (err) {\n      if (typeof err.message === \"string\" && err.message.includes(\"Cannot find module\")) {\n        throw new Error(\n          'Failed to load TypeScript, which is required for resolving imported types. Please make sure \"typescript\" is installed as a project dependency.'\n        );\n      } else {\n        throw new Error(\n          \"Failed to load TypeScript for resolving imported types.\"\n        );\n      }\n    }\n  };\n}\nfunction resolveFS(ctx) {\n  if (ctx.fs) {\n    return ctx.fs;\n  }\n  if (!ts && loadTS) {\n    ts = loadTS();\n  }\n  const fs = ctx.options.fs || (ts == null ? void 0 : ts.sys);\n  if (!fs) {\n    return;\n  }\n  return ctx.fs = {\n    fileExists(file) {\n      if (file.endsWith(\".vue.ts\")) {\n        file = file.replace(/\\.ts$/, \"\");\n      }\n      return fs.fileExists(file);\n    },\n    readFile(file) {\n      if (file.endsWith(\".vue.ts\")) {\n        file = file.replace(/\\.ts$/, \"\");\n      }\n      return fs.readFile(file);\n    },\n    realpath: fs.realpath\n  };\n}\nfunction resolveTypeFromImport(ctx, node, name, scope) {\n  const { source, imported } = scope.imports[name];\n  const sourceScope = importSourceToScope(ctx, node, scope, source);\n  return resolveTypeReference(ctx, node, sourceScope, imported, true);\n}\nfunction importSourceToScope(ctx, node, scope, source) {\n  let fs;\n  try {\n    fs = resolveFS(ctx);\n  } catch (err) {\n    return ctx.error(err.message, node, scope);\n  }\n  if (!fs) {\n    return ctx.error(\n      `No fs option provided to \\`compileScript\\` in non-Node environment. File system access is required for resolving imported types.`,\n      node,\n      scope\n    );\n  }\n  let resolved = scope.resolvedImportSources[source];\n  if (!resolved) {\n    if (source.startsWith(\"..\")) {\n      const osSpecificJoinFn = joinPaths;\n      const filename = osSpecificJoinFn(dirname$2(scope.filename), source);\n      resolved = resolveExt(filename, fs);\n    } else if (source.startsWith(\".\")) {\n      const filename = joinPaths(dirname$2(scope.filename), source);\n      resolved = resolveExt(filename, fs);\n    } else {\n      {\n        return ctx.error(\n          `Type import from non-relative sources is not supported in the browser build.`,\n          node,\n          scope\n        );\n      }\n    }\n    if (resolved) {\n      resolved = scope.resolvedImportSources[source] = normalizePath(resolved);\n    }\n  }\n  if (resolved) {\n    (ctx.deps || (ctx.deps = /* @__PURE__ */ new Set())).add(resolved);\n    return fileToScope(ctx, resolved);\n  } else {\n    return ctx.error(\n      `Failed to resolve import source ${JSON.stringify(source)}.`,\n      node,\n      scope\n    );\n  }\n}\nfunction resolveExt(filename, fs) {\n  filename = filename.replace(/\\.js$/, \"\");\n  const tryResolve = (filename2) => {\n    if (fs.fileExists(filename2))\n      return filename2;\n  };\n  return tryResolve(filename) || tryResolve(filename + `.ts`) || tryResolve(filename + `.tsx`) || tryResolve(filename + `.d.ts`) || tryResolve(joinPaths(filename, `index.ts`)) || tryResolve(joinPaths(filename, `index.tsx`)) || tryResolve(joinPaths(filename, `index.d.ts`));\n}\nconst tsConfigCache = createCache();\nconst tsConfigRefMap = /* @__PURE__ */ new Map();\nconst fileToScopeCache = createCache();\nfunction invalidateTypeCache(filename) {\n  filename = normalizePath(filename);\n  fileToScopeCache.delete(filename);\n  tsConfigCache.delete(filename);\n  const affectedConfig = tsConfigRefMap.get(filename);\n  if (affectedConfig)\n    tsConfigCache.delete(affectedConfig);\n}\nfunction fileToScope(ctx, filename, asGlobal = false) {\n  const cached = fileToScopeCache.get(filename);\n  if (cached) {\n    return cached;\n  }\n  const fs = resolveFS(ctx);\n  const source = fs.readFile(filename) || \"\";\n  const body = parseFile(filename, source, ctx.options.babelParserPlugins);\n  const scope = new TypeScope(filename, source, 0, recordImports(body));\n  recordTypes(ctx, body, scope, asGlobal);\n  fileToScopeCache.set(filename, scope);\n  return scope;\n}\nfunction parseFile(filename, content, parserPlugins) {\n  const ext = extname(filename);\n  if (ext === \".ts\" || ext === \".tsx\") {\n    return parse_1$1(content, {\n      plugins: resolveParserPlugins(\n        ext.slice(1),\n        parserPlugins,\n        filename.endsWith(\".d.ts\")\n      ),\n      sourceType: \"module\"\n    }).program.body;\n  } else if (ext === \".vue\") {\n    const {\n      descriptor: { script, scriptSetup }\n    } = parse$7(content);\n    if (!script && !scriptSetup) {\n      return [];\n    }\n    const scriptOffset = script ? script.loc.start.offset : Infinity;\n    const scriptSetupOffset = scriptSetup ? scriptSetup.loc.start.offset : Infinity;\n    const firstBlock = scriptOffset < scriptSetupOffset ? script : scriptSetup;\n    const secondBlock = scriptOffset < scriptSetupOffset ? scriptSetup : script;\n    let scriptContent = \" \".repeat(Math.min(scriptOffset, scriptSetupOffset)) + firstBlock.content;\n    if (secondBlock) {\n      scriptContent += \" \".repeat(secondBlock.loc.start.offset - script.loc.end.offset) + secondBlock.content;\n    }\n    const lang = (script == null ? void 0 : script.lang) || (scriptSetup == null ? void 0 : scriptSetup.lang);\n    return parse_1$1(scriptContent, {\n      plugins: resolveParserPlugins(lang, parserPlugins),\n      sourceType: \"module\"\n    }).program.body;\n  }\n  return [];\n}\nfunction ctxToScope(ctx) {\n  if (ctx.scope) {\n    return ctx.scope;\n  }\n  const body = \"ast\" in ctx ? ctx.ast : ctx.scriptAst ? [...ctx.scriptAst.body, ...ctx.scriptSetupAst.body] : ctx.scriptSetupAst.body;\n  const scope = new TypeScope(\n    ctx.filename,\n    ctx.source,\n    \"startOffset\" in ctx ? ctx.startOffset : 0,\n    \"userImports\" in ctx ? Object.create(ctx.userImports) : recordImports(body)\n  );\n  recordTypes(ctx, body, scope);\n  return ctx.scope = scope;\n}\nfunction moduleDeclToScope(ctx, node, parentScope) {\n  if (node._resolvedChildScope) {\n    return node._resolvedChildScope;\n  }\n  const scope = createChildScope(parentScope);\n  if (node.body.type === \"TSModuleDeclaration\") {\n    const decl = node.body;\n    decl._ownerScope = scope;\n    const id = getId(decl.id);\n    scope.types[id] = scope.exportedTypes[id] = decl;\n  } else {\n    recordTypes(ctx, node.body.body, scope);\n  }\n  return node._resolvedChildScope = scope;\n}\nfunction createChildScope(parentScope) {\n  return new TypeScope(\n    parentScope.filename,\n    parentScope.source,\n    parentScope.offset,\n    Object.create(parentScope.imports),\n    Object.create(parentScope.types),\n    Object.create(parentScope.declares)\n  );\n}\nconst importExportRE = /^Import|^Export/;\nfunction recordTypes(ctx, body, scope, asGlobal = false) {\n  const { types, declares, exportedTypes, exportedDeclares, imports } = scope;\n  const isAmbient = asGlobal ? !body.some((s) => importExportRE.test(s.type)) : false;\n  for (const stmt of body) {\n    if (asGlobal) {\n      if (isAmbient) {\n        if (stmt.declare) {\n          recordType(stmt, types, declares);\n        }\n      } else if (stmt.type === \"TSModuleDeclaration\" && stmt.global) {\n        for (const s of stmt.body.body) {\n          recordType(s, types, declares);\n        }\n      }\n    } else {\n      recordType(stmt, types, declares);\n    }\n  }\n  if (!asGlobal) {\n    for (const stmt of body) {\n      if (stmt.type === \"ExportNamedDeclaration\") {\n        if (stmt.declaration) {\n          recordType(stmt.declaration, types, declares);\n          recordType(stmt.declaration, exportedTypes, exportedDeclares);\n        } else {\n          for (const spec of stmt.specifiers) {\n            if (spec.type === \"ExportSpecifier\") {\n              const local = spec.local.name;\n              const exported = getId(spec.exported);\n              if (stmt.source) {\n                imports[exported] = {\n                  source: stmt.source.value,\n                  imported: local\n                };\n                exportedTypes[exported] = {\n                  type: \"TSTypeReference\",\n                  typeName: {\n                    type: \"Identifier\",\n                    name: local\n                  },\n                  _ownerScope: scope\n                };\n              } else if (types[local]) {\n                exportedTypes[exported] = types[local];\n              }\n            }\n          }\n        }\n      } else if (stmt.type === \"ExportAllDeclaration\") {\n        const sourceScope = importSourceToScope(\n          ctx,\n          stmt.source,\n          scope,\n          stmt.source.value\n        );\n        Object.assign(scope.exportedTypes, sourceScope.exportedTypes);\n      } else if (stmt.type === \"ExportDefaultDeclaration\" && stmt.declaration) {\n        if (stmt.declaration.type !== \"Identifier\") {\n          recordType(stmt.declaration, types, declares, \"default\");\n          recordType(\n            stmt.declaration,\n            exportedTypes,\n            exportedDeclares,\n            \"default\"\n          );\n        } else if (types[stmt.declaration.name]) {\n          exportedTypes[\"default\"] = types[stmt.declaration.name];\n        }\n      }\n    }\n  }\n  for (const key of Object.keys(types)) {\n    const node = types[key];\n    node._ownerScope = scope;\n    if (node._ns)\n      node._ns._ownerScope = scope;\n  }\n  for (const key of Object.keys(declares)) {\n    declares[key]._ownerScope = scope;\n  }\n}\nfunction recordType(node, types, declares, overwriteId) {\n  switch (node.type) {\n    case \"TSInterfaceDeclaration\":\n    case \"TSEnumDeclaration\":\n    case \"TSModuleDeclaration\": {\n      const id = overwriteId || getId(node.id);\n      let existing = types[id];\n      if (existing) {\n        if (node.type === \"TSModuleDeclaration\") {\n          if (existing.type === \"TSModuleDeclaration\") {\n            mergeNamespaces(existing, node);\n          } else {\n            attachNamespace(existing, node);\n          }\n          break;\n        }\n        if (existing.type === \"TSModuleDeclaration\") {\n          types[id] = node;\n          attachNamespace(node, existing);\n          break;\n        }\n        if (existing.type !== node.type) {\n          break;\n        }\n        if (node.type === \"TSInterfaceDeclaration\") {\n          existing.body.body.push(...node.body.body);\n        } else {\n          existing.members.push(...node.members);\n        }\n      } else {\n        types[id] = node;\n      }\n      break;\n    }\n    case \"ClassDeclaration\":\n      if (overwriteId || node.id)\n        types[overwriteId || getId(node.id)] = node;\n      break;\n    case \"TSTypeAliasDeclaration\":\n      types[node.id.name] = node.typeParameters ? node : node.typeAnnotation;\n      break;\n    case \"TSDeclareFunction\":\n      if (node.id)\n        declares[node.id.name] = node;\n      break;\n    case \"VariableDeclaration\": {\n      if (node.declare) {\n        for (const decl of node.declarations) {\n          if (decl.id.type === \"Identifier\" && decl.id.typeAnnotation) {\n            declares[decl.id.name] = decl.id.typeAnnotation.typeAnnotation;\n          }\n        }\n      }\n      break;\n    }\n  }\n}\nfunction mergeNamespaces(to, from) {\n  const toBody = to.body;\n  const fromBody = from.body;\n  if (toBody.type === \"TSModuleDeclaration\") {\n    if (fromBody.type === \"TSModuleDeclaration\") {\n      mergeNamespaces(toBody, fromBody);\n    } else {\n      fromBody.body.push({\n        type: \"ExportNamedDeclaration\",\n        declaration: toBody,\n        exportKind: \"type\",\n        specifiers: []\n      });\n    }\n  } else if (fromBody.type === \"TSModuleDeclaration\") {\n    toBody.body.push({\n      type: \"ExportNamedDeclaration\",\n      declaration: fromBody,\n      exportKind: \"type\",\n      specifiers: []\n    });\n  } else {\n    toBody.body.push(...fromBody.body);\n  }\n}\nfunction attachNamespace(to, ns) {\n  if (!to._ns) {\n    to._ns = ns;\n  } else {\n    mergeNamespaces(to._ns, ns);\n  }\n}\nfunction recordImports(body) {\n  const imports = /* @__PURE__ */ Object.create(null);\n  for (const s of body) {\n    recordImport(s, imports);\n  }\n  return imports;\n}\nfunction recordImport(node, imports) {\n  if (node.type !== \"ImportDeclaration\") {\n    return;\n  }\n  for (const s of node.specifiers) {\n    imports[s.local.name] = {\n      imported: getImportedName(s),\n      source: node.source.value\n    };\n  }\n}\nfunction inferRuntimeType(ctx, node, scope = node._ownerScope || ctxToScope(ctx)) {\n  try {\n    switch (node.type) {\n      case \"TSStringKeyword\":\n        return [\"String\"];\n      case \"TSNumberKeyword\":\n        return [\"Number\"];\n      case \"TSBooleanKeyword\":\n        return [\"Boolean\"];\n      case \"TSObjectKeyword\":\n        return [\"Object\"];\n      case \"TSNullKeyword\":\n        return [\"null\"];\n      case \"TSTypeLiteral\":\n      case \"TSInterfaceDeclaration\": {\n        const types = /* @__PURE__ */ new Set();\n        const members = node.type === \"TSTypeLiteral\" ? node.members : node.body.body;\n        for (const m of members) {\n          if (m.type === \"TSCallSignatureDeclaration\" || m.type === \"TSConstructSignatureDeclaration\") {\n            types.add(\"Function\");\n          } else {\n            types.add(\"Object\");\n          }\n        }\n        return types.size ? Array.from(types) : [\"Object\"];\n      }\n      case \"TSPropertySignature\":\n        if (node.typeAnnotation) {\n          return inferRuntimeType(\n            ctx,\n            node.typeAnnotation.typeAnnotation,\n            scope\n          );\n        }\n        break;\n      case \"TSMethodSignature\":\n      case \"TSFunctionType\":\n        return [\"Function\"];\n      case \"TSArrayType\":\n      case \"TSTupleType\":\n        return [\"Array\"];\n      case \"TSLiteralType\":\n        switch (node.literal.type) {\n          case \"StringLiteral\":\n            return [\"String\"];\n          case \"BooleanLiteral\":\n            return [\"Boolean\"];\n          case \"NumericLiteral\":\n          case \"BigIntLiteral\":\n            return [\"Number\"];\n          default:\n            return [UNKNOWN_TYPE];\n        }\n      case \"TSTypeReference\": {\n        const resolved = resolveTypeReference(ctx, node, scope);\n        if (resolved) {\n          return inferRuntimeType(ctx, resolved, resolved._ownerScope);\n        }\n        if (node.typeName.type === \"Identifier\") {\n          switch (node.typeName.name) {\n            case \"Array\":\n            case \"Function\":\n            case \"Object\":\n            case \"Set\":\n            case \"Map\":\n            case \"WeakSet\":\n            case \"WeakMap\":\n            case \"Date\":\n            case \"Promise\":\n            case \"Error\":\n              return [node.typeName.name];\n            case \"Partial\":\n            case \"Required\":\n            case \"Readonly\":\n            case \"Record\":\n            case \"Pick\":\n            case \"Omit\":\n            case \"InstanceType\":\n              return [\"Object\"];\n            case \"Uppercase\":\n            case \"Lowercase\":\n            case \"Capitalize\":\n            case \"Uncapitalize\":\n              return [\"String\"];\n            case \"Parameters\":\n            case \"ConstructorParameters\":\n              return [\"Array\"];\n            case \"NonNullable\":\n              if (node.typeParameters && node.typeParameters.params[0]) {\n                return inferRuntimeType(\n                  ctx,\n                  node.typeParameters.params[0],\n                  scope\n                ).filter((t) => t !== \"null\");\n              }\n              break;\n            case \"Extract\":\n              if (node.typeParameters && node.typeParameters.params[1]) {\n                return inferRuntimeType(\n                  ctx,\n                  node.typeParameters.params[1],\n                  scope\n                );\n              }\n              break;\n            case \"Exclude\":\n            case \"OmitThisParameter\":\n              if (node.typeParameters && node.typeParameters.params[0]) {\n                return inferRuntimeType(\n                  ctx,\n                  node.typeParameters.params[0],\n                  scope\n                );\n              }\n              break;\n          }\n        }\n        break;\n      }\n      case \"TSParenthesizedType\":\n        return inferRuntimeType(ctx, node.typeAnnotation, scope);\n      case \"TSUnionType\":\n        return flattenTypes(ctx, node.types, scope);\n      case \"TSIntersectionType\": {\n        return flattenTypes(ctx, node.types, scope).filter(\n          (t) => t !== UNKNOWN_TYPE\n        );\n      }\n      case \"TSEnumDeclaration\":\n        return inferEnumType(node);\n      case \"TSSymbolKeyword\":\n        return [\"Symbol\"];\n      case \"TSIndexedAccessType\": {\n        const types = resolveIndexType(ctx, node, scope);\n        return flattenTypes(ctx, types, scope);\n      }\n      case \"ClassDeclaration\":\n        return [\"Object\"];\n      case \"TSImportType\": {\n        const sourceScope = importSourceToScope(\n          ctx,\n          node.argument,\n          scope,\n          node.argument.value\n        );\n        const resolved = resolveTypeReference(ctx, node, sourceScope);\n        if (resolved) {\n          return inferRuntimeType(ctx, resolved, resolved._ownerScope);\n        }\n        break;\n      }\n      case \"TSTypeQuery\": {\n        const id = node.exprName;\n        if (id.type === \"Identifier\") {\n          const matched = scope.declares[id.name];\n          if (matched) {\n            return inferRuntimeType(ctx, matched, matched._ownerScope);\n          }\n        }\n        break;\n      }\n    }\n  } catch (e) {\n  }\n  return [UNKNOWN_TYPE];\n}\nfunction flattenTypes(ctx, types, scope) {\n  if (types.length === 1) {\n    return inferRuntimeType(ctx, types[0], scope);\n  }\n  return [\n    ...new Set(\n      [].concat(\n        ...types.map((t) => inferRuntimeType(ctx, t, scope))\n      )\n    )\n  ];\n}\nfunction inferEnumType(node) {\n  const types = /* @__PURE__ */ new Set();\n  for (const m of node.members) {\n    if (m.initializer) {\n      switch (m.initializer.type) {\n        case \"StringLiteral\":\n          types.add(\"String\");\n          break;\n        case \"NumericLiteral\":\n          types.add(\"Number\");\n          break;\n      }\n    }\n  }\n  return types.size ? [...types] : [\"Number\"];\n}\nfunction resolveExtractPropTypes({ props }, scope) {\n  const res = { props: {} };\n  for (const key in props) {\n    const raw = props[key];\n    res.props[key] = reverseInferType(\n      raw.key,\n      raw.typeAnnotation.typeAnnotation,\n      scope\n    );\n  }\n  return res;\n}\nfunction reverseInferType(key, node, scope, optional = true, checkObjectSyntax = true) {\n  if (checkObjectSyntax && node.type === \"TSTypeLiteral\") {\n    const typeType = findStaticPropertyType(node, \"type\");\n    if (typeType) {\n      const requiredType = findStaticPropertyType(node, \"required\");\n      const optional2 = requiredType && requiredType.type === \"TSLiteralType\" && requiredType.literal.type === \"BooleanLiteral\" ? !requiredType.literal.value : true;\n      return reverseInferType(key, typeType, scope, optional2, false);\n    }\n  } else if (node.type === \"TSTypeReference\" && node.typeName.type === \"Identifier\") {\n    if (node.typeName.name.endsWith(\"Constructor\")) {\n      return createProperty(\n        key,\n        ctorToType(node.typeName.name),\n        scope,\n        optional\n      );\n    } else if (node.typeName.name === \"PropType\" && node.typeParameters) {\n      return createProperty(key, node.typeParameters.params[0], scope, optional);\n    }\n  }\n  if ((node.type === \"TSTypeReference\" || node.type === \"TSImportType\") && node.typeParameters) {\n    for (const t of node.typeParameters.params) {\n      const inferred = reverseInferType(key, t, scope, optional);\n      if (inferred)\n        return inferred;\n    }\n  }\n  return createProperty(key, { type: `TSNullKeyword` }, scope, optional);\n}\nfunction ctorToType(ctorType) {\n  const ctor = ctorType.slice(0, -11);\n  switch (ctor) {\n    case \"String\":\n    case \"Number\":\n    case \"Boolean\":\n      return { type: `TS${ctor}Keyword` };\n    case \"Array\":\n    case \"Function\":\n    case \"Object\":\n    case \"Set\":\n    case \"Map\":\n    case \"WeakSet\":\n    case \"WeakMap\":\n    case \"Date\":\n    case \"Promise\":\n      return {\n        type: \"TSTypeReference\",\n        typeName: { type: \"Identifier\", name: ctor }\n      };\n  }\n  return { type: `TSNullKeyword` };\n}\nfunction findStaticPropertyType(node, key) {\n  const prop = node.members.find(\n    (m) => m.type === \"TSPropertySignature\" && !m.computed && getId(m.key) === key && m.typeAnnotation\n  );\n  return prop && prop.typeAnnotation.typeAnnotation;\n}\nfunction resolveReturnType(ctx, arg, scope) {\n  var _a;\n  let resolved = arg;\n  if (arg.type === \"TSTypeReference\" || arg.type === \"TSTypeQuery\" || arg.type === \"TSImportType\") {\n    resolved = resolveTypeReference(ctx, arg, scope);\n  }\n  if (!resolved)\n    return;\n  if (resolved.type === \"TSFunctionType\") {\n    return (_a = resolved.typeAnnotation) == null ? void 0 : _a.typeAnnotation;\n  }\n  if (resolved.type === \"TSDeclareFunction\") {\n    return resolved.returnType;\n  }\n}\nfunction resolveUnionType(ctx, node, scope) {\n  if (node.type === \"TSTypeReference\") {\n    const resolved = resolveTypeReference(ctx, node, scope);\n    if (resolved)\n      node = resolved;\n  }\n  let types;\n  if (node.type === \"TSUnionType\") {\n    types = node.types.flatMap((node2) => resolveUnionType(ctx, node2, scope));\n  } else {\n    types = [node];\n  }\n  return types;\n}\n\nconst DEFINE_MODEL = \"defineModel\";\nfunction processDefineModel(ctx, node, declId) {\n  if (!isCallOf(node, DEFINE_MODEL)) {\n    return false;\n  }\n  ctx.hasDefineModelCall = true;\n  const type = node.typeParameters && node.typeParameters.params[0] || void 0;\n  let modelName;\n  let options;\n  const arg0 = node.arguments[0] && unwrapTSNode(node.arguments[0]);\n  const hasName = arg0 && arg0.type === \"StringLiteral\";\n  if (hasName) {\n    modelName = arg0.value;\n    options = node.arguments[1];\n  } else {\n    modelName = \"modelValue\";\n    options = arg0;\n  }\n  if (ctx.modelDecls[modelName]) {\n    ctx.error(`duplicate model name ${JSON.stringify(modelName)}`, node);\n  }\n  let optionsString = options && ctx.getString(options);\n  let optionsRemoved = !options;\n  const runtimeOptionNodes = [];\n  if (options && options.type === \"ObjectExpression\" && !options.properties.some((p) => p.type === \"SpreadElement\" || p.computed)) {\n    let removed = 0;\n    for (let i = options.properties.length - 1; i >= 0; i--) {\n      const p = options.properties[i];\n      const next = options.properties[i + 1];\n      const start = p.start;\n      const end = next ? next.start : options.end - 1;\n      if ((p.type === \"ObjectProperty\" || p.type === \"ObjectMethod\") && (p.key.type === \"Identifier\" && (p.key.name === \"get\" || p.key.name === \"set\") || p.key.type === \"StringLiteral\" && (p.key.value === \"get\" || p.key.value === \"set\"))) {\n        optionsString = optionsString.slice(0, start - options.start) + optionsString.slice(end - options.start);\n      } else {\n        removed++;\n        ctx.s.remove(ctx.startOffset + start, ctx.startOffset + end);\n        runtimeOptionNodes.push(p);\n      }\n    }\n    if (removed === options.properties.length) {\n      optionsRemoved = true;\n      ctx.s.remove(\n        ctx.startOffset + (hasName ? arg0.end : options.start),\n        ctx.startOffset + options.end\n      );\n    }\n  }\n  ctx.modelDecls[modelName] = {\n    type,\n    options: optionsString,\n    runtimeOptionNodes,\n    identifier: declId && declId.type === \"Identifier\" ? declId.name : void 0\n  };\n  ctx.bindingMetadata[modelName] = \"props\";\n  ctx.s.overwrite(\n    ctx.startOffset + node.callee.start,\n    ctx.startOffset + node.callee.end,\n    ctx.helper(\"useModel\")\n  );\n  ctx.s.appendLeft(\n    ctx.startOffset + (node.arguments.length ? node.arguments[0].start : node.end - 1),\n    `__props, ` + (hasName ? `` : `${JSON.stringify(modelName)}${optionsRemoved ? `` : `, `}`)\n  );\n  return true;\n}\nfunction genModelProps(ctx) {\n  if (!ctx.hasDefineModelCall)\n    return;\n  const isProd = !!ctx.options.isProd;\n  let modelPropsDecl = \"\";\n  for (const [name, { type, options }] of Object.entries(ctx.modelDecls)) {\n    let skipCheck = false;\n    let runtimeTypes = type && inferRuntimeType(ctx, type);\n    if (runtimeTypes) {\n      const hasBoolean = runtimeTypes.includes(\"Boolean\");\n      const hasUnknownType = runtimeTypes.includes(UNKNOWN_TYPE);\n      if (isProd || hasUnknownType) {\n        runtimeTypes = runtimeTypes.filter(\n          (t) => t === \"Boolean\" || hasBoolean && t === \"String\" || t === \"Function\" && options\n        );\n        skipCheck = !isProd && hasUnknownType && runtimeTypes.length > 0;\n      }\n    }\n    let runtimeType = runtimeTypes && runtimeTypes.length > 0 && toRuntimeTypeString(runtimeTypes) || void 0;\n    const codegenOptions = concatStrings([\n      runtimeType && `type: ${runtimeType}`,\n      skipCheck && \"skipCheck: true\"\n    ]);\n    let decl;\n    if (runtimeType && options) {\n      decl = ctx.isTS ? `{ ${codegenOptions}, ...${options} }` : `Object.assign({ ${codegenOptions} }, ${options})`;\n    } else {\n      decl = options || (runtimeType ? `{ ${codegenOptions} }` : \"{}\");\n    }\n    modelPropsDecl += `\n    ${JSON.stringify(name)}: ${decl},`;\n    const modifierPropName = JSON.stringify(\n      name === \"modelValue\" ? `modelModifiers` : `${name}Modifiers`\n    );\n    modelPropsDecl += `\n    ${modifierPropName}: {},`;\n  }\n  return `{${modelPropsDecl}\n  }`;\n}\n\nconst DEFINE_PROPS = \"defineProps\";\nconst WITH_DEFAULTS = \"withDefaults\";\nfunction processDefineProps(ctx, node, declId) {\n  if (!isCallOf(node, DEFINE_PROPS)) {\n    return processWithDefaults(ctx, node, declId);\n  }\n  if (ctx.hasDefinePropsCall) {\n    ctx.error(`duplicate ${DEFINE_PROPS}() call`, node);\n  }\n  ctx.hasDefinePropsCall = true;\n  ctx.propsRuntimeDecl = node.arguments[0];\n  if (ctx.propsRuntimeDecl) {\n    for (const key of getObjectOrArrayExpressionKeys(ctx.propsRuntimeDecl)) {\n      if (!(key in ctx.bindingMetadata)) {\n        ctx.bindingMetadata[key] = \"props\";\n      }\n    }\n  }\n  if (node.typeParameters) {\n    if (ctx.propsRuntimeDecl) {\n      ctx.error(\n        `${DEFINE_PROPS}() cannot accept both type and non-type arguments at the same time. Use one or the other.`,\n        node\n      );\n    }\n    ctx.propsTypeDecl = node.typeParameters.params[0];\n  }\n  if (declId && declId.type === \"ObjectPattern\") {\n    processPropsDestructure(ctx, declId);\n  }\n  ctx.propsCall = node;\n  ctx.propsDecl = declId;\n  return true;\n}\nfunction processWithDefaults(ctx, node, declId) {\n  if (!isCallOf(node, WITH_DEFAULTS)) {\n    return false;\n  }\n  if (!processDefineProps(ctx, node.arguments[0], declId)) {\n    ctx.error(\n      `${WITH_DEFAULTS}' first argument must be a ${DEFINE_PROPS} call.`,\n      node.arguments[0] || node\n    );\n  }\n  if (ctx.propsRuntimeDecl) {\n    ctx.error(\n      `${WITH_DEFAULTS} can only be used with type-based ${DEFINE_PROPS} declaration.`,\n      node\n    );\n  }\n  if (ctx.propsDestructureDecl) {\n    ctx.error(\n      `${WITH_DEFAULTS}() is unnecessary when using destructure with ${DEFINE_PROPS}().\nPrefer using destructure default values, e.g. const { foo = 1 } = defineProps(...).`,\n      node.callee\n    );\n  }\n  ctx.propsRuntimeDefaults = node.arguments[1];\n  if (!ctx.propsRuntimeDefaults) {\n    ctx.error(`The 2nd argument of ${WITH_DEFAULTS} is required.`, node);\n  }\n  ctx.propsCall = node;\n  return true;\n}\nfunction genRuntimeProps(ctx) {\n  let propsDecls;\n  if (ctx.propsRuntimeDecl) {\n    propsDecls = ctx.getString(ctx.propsRuntimeDecl).trim();\n    if (ctx.propsDestructureDecl) {\n      const defaults = [];\n      for (const key in ctx.propsDestructuredBindings) {\n        const d = genDestructuredDefaultValue(ctx, key);\n        const finalKey = getEscapedPropName(key);\n        if (d)\n          defaults.push(\n            `${finalKey}: ${d.valueString}${d.needSkipFactory ? `, __skip_${finalKey}: true` : ``}`\n          );\n      }\n      if (defaults.length) {\n        propsDecls = `/*#__PURE__*/${ctx.helper(\n          `mergeDefaults`\n        )}(${propsDecls}, {\n  ${defaults.join(\",\\n  \")}\n})`;\n      }\n    }\n  } else if (ctx.propsTypeDecl) {\n    propsDecls = extractRuntimeProps(ctx);\n  }\n  const modelsDecls = genModelProps(ctx);\n  if (propsDecls && modelsDecls) {\n    return `/*#__PURE__*/${ctx.helper(\n      \"mergeModels\"\n    )}(${propsDecls}, ${modelsDecls})`;\n  } else {\n    return modelsDecls || propsDecls;\n  }\n}\nfunction extractRuntimeProps(ctx) {\n  const props = resolveRuntimePropsFromType(ctx, ctx.propsTypeDecl);\n  if (!props.length) {\n    return;\n  }\n  const propStrings = [];\n  const hasStaticDefaults = hasStaticWithDefaults(ctx);\n  for (const prop of props) {\n    propStrings.push(genRuntimePropFromType(ctx, prop, hasStaticDefaults));\n    if (\"bindingMetadata\" in ctx && !(prop.key in ctx.bindingMetadata)) {\n      ctx.bindingMetadata[prop.key] = \"props\";\n    }\n  }\n  let propsDecls = `{\n    ${propStrings.join(\",\\n    \")}\n  }`;\n  if (ctx.propsRuntimeDefaults && !hasStaticDefaults) {\n    propsDecls = `/*#__PURE__*/${ctx.helper(\n      \"mergeDefaults\"\n    )}(${propsDecls}, ${ctx.getString(ctx.propsRuntimeDefaults)})`;\n  }\n  return propsDecls;\n}\nfunction resolveRuntimePropsFromType(ctx, node) {\n  const props = [];\n  const elements = resolveTypeElements(ctx, node);\n  for (const key in elements.props) {\n    const e = elements.props[key];\n    let type = inferRuntimeType(ctx, e);\n    let skipCheck = false;\n    if (type.includes(UNKNOWN_TYPE)) {\n      if (type.includes(\"Boolean\") || type.includes(\"Function\")) {\n        type = type.filter((t) => t !== UNKNOWN_TYPE);\n        skipCheck = true;\n      } else {\n        type = [\"null\"];\n      }\n    }\n    props.push({\n      key,\n      required: !e.optional,\n      type: type || [`null`],\n      skipCheck\n    });\n  }\n  return props;\n}\nfunction genRuntimePropFromType(ctx, { key, required, type, skipCheck }, hasStaticDefaults) {\n  let defaultString;\n  const destructured = genDestructuredDefaultValue(ctx, key, type);\n  if (destructured) {\n    defaultString = `default: ${destructured.valueString}${destructured.needSkipFactory ? `, skipFactory: true` : ``}`;\n  } else if (hasStaticDefaults) {\n    const prop = ctx.propsRuntimeDefaults.properties.find(\n      (node) => {\n        if (node.type === \"SpreadElement\")\n          return false;\n        return resolveObjectKey(node.key, node.computed) === key;\n      }\n    );\n    if (prop) {\n      if (prop.type === \"ObjectProperty\") {\n        defaultString = `default: ${ctx.getString(prop.value)}`;\n      } else {\n        defaultString = `${prop.async ? \"async \" : \"\"}${prop.kind !== \"method\" ? `${prop.kind} ` : \"\"}default() ${ctx.getString(prop.body)}`;\n      }\n    }\n  }\n  const finalKey = getEscapedPropName(key);\n  if (!ctx.options.isProd) {\n    return `${finalKey}: { ${concatStrings([\n      `type: ${toRuntimeTypeString(type)}`,\n      `required: ${required}`,\n      skipCheck && \"skipCheck: true\",\n      defaultString\n    ])} }`;\n  } else if (type.some(\n    (el) => el === \"Boolean\" || (!hasStaticDefaults || defaultString) && el === \"Function\"\n  )) {\n    return `${finalKey}: { ${concatStrings([\n      `type: ${toRuntimeTypeString(type)}`,\n      defaultString\n    ])} }`;\n  } else {\n    if (ctx.isCE) {\n      if (defaultString) {\n        return `${finalKey}: ${`{ ${defaultString}, type: ${toRuntimeTypeString(\n          type\n        )} }`}`;\n      } else {\n        return `${finalKey}: {type: ${toRuntimeTypeString(type)}}`;\n      }\n    }\n    return `${finalKey}: ${defaultString ? `{ ${defaultString} }` : `{}`}`;\n  }\n}\nfunction hasStaticWithDefaults(ctx) {\n  return !!(ctx.propsRuntimeDefaults && ctx.propsRuntimeDefaults.type === \"ObjectExpression\" && ctx.propsRuntimeDefaults.properties.every(\n    (node) => node.type !== \"SpreadElement\" && (!node.computed || node.key.type.endsWith(\"Literal\"))\n  ));\n}\nfunction genDestructuredDefaultValue(ctx, key, inferredType) {\n  const destructured = ctx.propsDestructuredBindings[key];\n  const defaultVal = destructured && destructured.default;\n  if (defaultVal) {\n    const value = ctx.getString(defaultVal);\n    const unwrapped = unwrapTSNode(defaultVal);\n    if (inferredType && inferredType.length && !inferredType.includes(\"null\")) {\n      const valueType = inferValueType(unwrapped);\n      if (valueType && !inferredType.includes(valueType)) {\n        ctx.error(\n          `Default value of prop \"${key}\" does not match declared type.`,\n          unwrapped\n        );\n      }\n    }\n    const needSkipFactory = !inferredType && (isFunctionType(unwrapped) || unwrapped.type === \"Identifier\");\n    const needFactoryWrap = !needSkipFactory && !isLiteralNode(unwrapped) && !(inferredType == null ? void 0 : inferredType.includes(\"Function\"));\n    return {\n      valueString: needFactoryWrap ? `() => (${value})` : value,\n      needSkipFactory\n    };\n  }\n}\nfunction inferValueType(node) {\n  switch (node.type) {\n    case \"StringLiteral\":\n      return \"String\";\n    case \"NumericLiteral\":\n      return \"Number\";\n    case \"BooleanLiteral\":\n      return \"Boolean\";\n    case \"ObjectExpression\":\n      return \"Object\";\n    case \"ArrayExpression\":\n      return \"Array\";\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n      return \"Function\";\n  }\n}\n\nfunction processPropsDestructure(ctx, declId) {\n  if (!ctx.options.propsDestructure) {\n    return;\n  }\n  warnOnce$3(\n    `This project is using reactive props destructure, which is an experimental feature. It may receive breaking changes or be removed in the future, so use at your own risk.\nTo stay updated, follow the RFC at https://github.com/vuejs/rfcs/discussions/502.`\n  );\n  ctx.propsDestructureDecl = declId;\n  const registerBinding = (key, local, defaultValue) => {\n    ctx.propsDestructuredBindings[key] = { local, default: defaultValue };\n    if (local !== key) {\n      ctx.bindingMetadata[local] = \"props-aliased\";\n      (ctx.bindingMetadata.__propsAliases || (ctx.bindingMetadata.__propsAliases = {}))[local] = key;\n    }\n  };\n  for (const prop of declId.properties) {\n    if (prop.type === \"ObjectProperty\") {\n      const propKey = resolveObjectKey(prop.key, prop.computed);\n      if (!propKey) {\n        ctx.error(\n          `${DEFINE_PROPS}() destructure cannot use computed key.`,\n          prop.key\n        );\n      }\n      if (prop.value.type === \"AssignmentPattern\") {\n        const { left, right } = prop.value;\n        if (left.type !== \"Identifier\") {\n          ctx.error(\n            `${DEFINE_PROPS}() destructure does not support nested patterns.`,\n            left\n          );\n        }\n        registerBinding(propKey, left.name, right);\n      } else if (prop.value.type === \"Identifier\") {\n        registerBinding(propKey, prop.value.name);\n      } else {\n        ctx.error(\n          `${DEFINE_PROPS}() destructure does not support nested patterns.`,\n          prop.value\n        );\n      }\n    } else {\n      ctx.propsDestructureRestId = prop.argument.name;\n      ctx.bindingMetadata[ctx.propsDestructureRestId] = \"setup-reactive-const\";\n    }\n  }\n}\nfunction transformDestructuredProps(ctx, vueImportAliases) {\n  if (!ctx.options.propsDestructure) {\n    return;\n  }\n  const rootScope = {};\n  const scopeStack = [rootScope];\n  let currentScope = rootScope;\n  const excludedIds = /* @__PURE__ */ new WeakSet();\n  const parentStack = [];\n  const propsLocalToPublicMap = /* @__PURE__ */ Object.create(null);\n  for (const key in ctx.propsDestructuredBindings) {\n    const { local } = ctx.propsDestructuredBindings[key];\n    rootScope[local] = true;\n    propsLocalToPublicMap[local] = key;\n  }\n  function pushScope() {\n    scopeStack.push(currentScope = Object.create(currentScope));\n  }\n  function popScope() {\n    scopeStack.pop();\n    currentScope = scopeStack[scopeStack.length - 1] || null;\n  }\n  function registerLocalBinding(id) {\n    excludedIds.add(id);\n    if (currentScope) {\n      currentScope[id.name] = false;\n    } else {\n      ctx.error(\n        \"registerBinding called without active scope, something is wrong.\",\n        id\n      );\n    }\n  }\n  function walkScope(node, isRoot = false) {\n    for (const stmt of node.body) {\n      if (stmt.type === \"VariableDeclaration\") {\n        walkVariableDeclaration(stmt, isRoot);\n      } else if (stmt.type === \"FunctionDeclaration\" || stmt.type === \"ClassDeclaration\") {\n        if (stmt.declare || !stmt.id)\n          continue;\n        registerLocalBinding(stmt.id);\n      } else if ((stmt.type === \"ForOfStatement\" || stmt.type === \"ForInStatement\") && stmt.left.type === \"VariableDeclaration\") {\n        walkVariableDeclaration(stmt.left);\n      } else if (stmt.type === \"ExportNamedDeclaration\" && stmt.declaration && stmt.declaration.type === \"VariableDeclaration\") {\n        walkVariableDeclaration(stmt.declaration, isRoot);\n      } else if (stmt.type === \"LabeledStatement\" && stmt.body.type === \"VariableDeclaration\") {\n        walkVariableDeclaration(stmt.body, isRoot);\n      }\n    }\n  }\n  function walkVariableDeclaration(stmt, isRoot = false) {\n    if (stmt.declare) {\n      return;\n    }\n    for (const decl of stmt.declarations) {\n      const isDefineProps = isRoot && decl.init && isCallOf(unwrapTSNode(decl.init), \"defineProps\");\n      for (const id of extractIdentifiers$1(decl.id)) {\n        if (isDefineProps) {\n          excludedIds.add(id);\n        } else {\n          registerLocalBinding(id);\n        }\n      }\n    }\n  }\n  function rewriteId(id, parent, parentStack2) {\n    if (parent.type === \"AssignmentExpression\" && id === parent.left || parent.type === \"UpdateExpression\") {\n      ctx.error(`Cannot assign to destructured props as they are readonly.`, id);\n    }\n    if (isStaticProperty(parent) && parent.shorthand) {\n      if (!parent.inPattern || isInDestructureAssignment(parent, parentStack2)) {\n        ctx.s.appendLeft(\n          id.end + ctx.startOffset,\n          `: ${genPropsAccessExp(propsLocalToPublicMap[id.name])}`\n        );\n      }\n    } else {\n      ctx.s.overwrite(\n        id.start + ctx.startOffset,\n        id.end + ctx.startOffset,\n        genPropsAccessExp(propsLocalToPublicMap[id.name])\n      );\n    }\n  }\n  function checkUsage(node, method, alias = method) {\n    if (isCallOf(node, alias)) {\n      const arg = unwrapTSNode(node.arguments[0]);\n      if (arg.type === \"Identifier\" && currentScope[arg.name]) {\n        ctx.error(\n          `\"${arg.name}\" is a destructured prop and should not be passed directly to ${method}(). Pass a getter () => ${arg.name} instead.`,\n          arg\n        );\n      }\n    }\n  }\n  const ast = ctx.scriptSetupAst;\n  walkScope(ast, true);\n  walk$2(ast, {\n    enter(node, parent) {\n      parent && parentStack.push(parent);\n      if (parent && parent.type.startsWith(\"TS\") && parent.type !== \"TSAsExpression\" && parent.type !== \"TSNonNullExpression\" && parent.type !== \"TSTypeAssertion\") {\n        return this.skip();\n      }\n      checkUsage(node, \"watch\", vueImportAliases.watch);\n      checkUsage(node, \"toRef\", vueImportAliases.toRef);\n      if (isFunctionType(node)) {\n        pushScope();\n        walkFunctionParams(node, registerLocalBinding);\n        if (node.body.type === \"BlockStatement\") {\n          walkScope(node.body);\n        }\n        return;\n      }\n      if (node.type === \"CatchClause\") {\n        pushScope();\n        if (node.param && node.param.type === \"Identifier\") {\n          registerLocalBinding(node.param);\n        }\n        walkScope(node.body);\n        return;\n      }\n      if (node.type === \"BlockStatement\" && !isFunctionType(parent)) {\n        pushScope();\n        walkScope(node);\n        return;\n      }\n      if (node.type === \"Identifier\") {\n        if (isReferencedIdentifier(node, parent, parentStack) && !excludedIds.has(node)) {\n          if (currentScope[node.name]) {\n            rewriteId(node, parent, parentStack);\n          }\n        }\n      }\n    },\n    leave(node, parent) {\n      parent && parentStack.pop();\n      if (node.type === \"BlockStatement\" && !isFunctionType(parent) || isFunctionType(node)) {\n        popScope();\n      }\n    }\n  });\n}\n\nconst DEFINE_EMITS = \"defineEmits\";\nfunction processDefineEmits(ctx, node, declId) {\n  if (!isCallOf(node, DEFINE_EMITS)) {\n    return false;\n  }\n  if (ctx.hasDefineEmitCall) {\n    ctx.error(`duplicate ${DEFINE_EMITS}() call`, node);\n  }\n  ctx.hasDefineEmitCall = true;\n  ctx.emitsRuntimeDecl = node.arguments[0];\n  if (node.typeParameters) {\n    if (ctx.emitsRuntimeDecl) {\n      ctx.error(\n        `${DEFINE_EMITS}() cannot accept both type and non-type arguments at the same time. Use one or the other.`,\n        node\n      );\n    }\n    ctx.emitsTypeDecl = node.typeParameters.params[0];\n  }\n  ctx.emitDecl = declId;\n  return true;\n}\nfunction genRuntimeEmits(ctx) {\n  let emitsDecl = \"\";\n  if (ctx.emitsRuntimeDecl) {\n    emitsDecl = ctx.getString(ctx.emitsRuntimeDecl).trim();\n  } else if (ctx.emitsTypeDecl) {\n    const typeDeclaredEmits = extractRuntimeEmits(ctx);\n    emitsDecl = typeDeclaredEmits.size ? `[${Array.from(typeDeclaredEmits).map((k) => JSON.stringify(k)).join(\", \")}]` : ``;\n  }\n  if (ctx.hasDefineModelCall) {\n    let modelEmitsDecl = `[${Object.keys(ctx.modelDecls).map((n) => JSON.stringify(`update:${n}`)).join(\", \")}]`;\n    emitsDecl = emitsDecl ? `/*#__PURE__*/${ctx.helper(\n      \"mergeModels\"\n    )}(${emitsDecl}, ${modelEmitsDecl})` : modelEmitsDecl;\n  }\n  return emitsDecl;\n}\nfunction extractRuntimeEmits(ctx) {\n  const emits = /* @__PURE__ */ new Set();\n  const node = ctx.emitsTypeDecl;\n  if (node.type === \"TSFunctionType\") {\n    extractEventNames(ctx, node.parameters[0], emits);\n    return emits;\n  }\n  const { props, calls } = resolveTypeElements(ctx, node);\n  let hasProperty = false;\n  for (const key in props) {\n    emits.add(key);\n    hasProperty = true;\n  }\n  if (calls) {\n    if (hasProperty) {\n      ctx.error(\n        `defineEmits() type cannot mixed call signature and property syntax.`,\n        node\n      );\n    }\n    for (const call of calls) {\n      extractEventNames(ctx, call.parameters[0], emits);\n    }\n  }\n  return emits;\n}\nfunction extractEventNames(ctx, eventName, emits) {\n  if (eventName.type === \"Identifier\" && eventName.typeAnnotation && eventName.typeAnnotation.type === \"TSTypeAnnotation\") {\n    const types = resolveUnionType(ctx, eventName.typeAnnotation.typeAnnotation);\n    for (const type of types) {\n      if (type.type === \"TSLiteralType\") {\n        if (type.literal.type !== \"UnaryExpression\" && type.literal.type !== \"TemplateLiteral\") {\n          emits.add(String(type.literal.value));\n        }\n      }\n    }\n  }\n}\n\nconst DEFINE_EXPOSE = \"defineExpose\";\nfunction processDefineExpose(ctx, node) {\n  if (isCallOf(node, DEFINE_EXPOSE)) {\n    if (ctx.hasDefineExposeCall) {\n      ctx.error(`duplicate ${DEFINE_EXPOSE}() call`, node);\n    }\n    ctx.hasDefineExposeCall = true;\n    return true;\n  }\n  return false;\n}\n\nconst DEFINE_SLOTS = \"defineSlots\";\nfunction processDefineSlots(ctx, node, declId) {\n  if (!isCallOf(node, DEFINE_SLOTS)) {\n    return false;\n  }\n  if (ctx.hasDefineSlotsCall) {\n    ctx.error(`duplicate ${DEFINE_SLOTS}() call`, node);\n  }\n  ctx.hasDefineSlotsCall = true;\n  if (node.arguments.length > 0) {\n    ctx.error(`${DEFINE_SLOTS}() cannot accept arguments`, node);\n  }\n  if (declId) {\n    ctx.s.overwrite(\n      ctx.startOffset + node.start,\n      ctx.startOffset + node.end,\n      `${ctx.helper(\"useSlots\")}()`\n    );\n  }\n  return true;\n}\n\nconst DEFINE_OPTIONS = \"defineOptions\";\nfunction processDefineOptions(ctx, node) {\n  if (!isCallOf(node, DEFINE_OPTIONS)) {\n    return false;\n  }\n  if (ctx.hasDefineOptionsCall) {\n    ctx.error(`duplicate ${DEFINE_OPTIONS}() call`, node);\n  }\n  if (node.typeParameters) {\n    ctx.error(`${DEFINE_OPTIONS}() cannot accept type arguments`, node);\n  }\n  if (!node.arguments[0])\n    return true;\n  ctx.hasDefineOptionsCall = true;\n  ctx.optionsRuntimeDecl = unwrapTSNode(node.arguments[0]);\n  let propsOption = void 0;\n  let emitsOption = void 0;\n  let exposeOption = void 0;\n  let slotsOption = void 0;\n  if (ctx.optionsRuntimeDecl.type === \"ObjectExpression\") {\n    for (const prop of ctx.optionsRuntimeDecl.properties) {\n      if ((prop.type === \"ObjectProperty\" || prop.type === \"ObjectMethod\") && prop.key.type === \"Identifier\") {\n        if (prop.key.name === \"props\")\n          propsOption = prop;\n        if (prop.key.name === \"emits\")\n          emitsOption = prop;\n        if (prop.key.name === \"expose\")\n          exposeOption = prop;\n        if (prop.key.name === \"slots\")\n          slotsOption = prop;\n      }\n    }\n  }\n  if (propsOption) {\n    ctx.error(\n      `${DEFINE_OPTIONS}() cannot be used to declare props. Use ${DEFINE_PROPS}() instead.`,\n      propsOption\n    );\n  }\n  if (emitsOption) {\n    ctx.error(\n      `${DEFINE_OPTIONS}() cannot be used to declare emits. Use ${DEFINE_EMITS}() instead.`,\n      emitsOption\n    );\n  }\n  if (exposeOption) {\n    ctx.error(\n      `${DEFINE_OPTIONS}() cannot be used to declare expose. Use ${DEFINE_EXPOSE}() instead.`,\n      exposeOption\n    );\n  }\n  if (slotsOption) {\n    ctx.error(\n      `${DEFINE_OPTIONS}() cannot be used to declare slots. Use ${DEFINE_SLOTS}() instead.`,\n      slotsOption\n    );\n  }\n  return true;\n}\n\nfunction processAwait(ctx, node, needSemi, isStatement) {\n  const argumentStart = node.argument.extra && node.argument.extra.parenthesized ? node.argument.extra.parenStart : node.argument.start;\n  const startOffset = ctx.startOffset;\n  const argumentStr = ctx.descriptor.source.slice(\n    argumentStart + startOffset,\n    node.argument.end + startOffset\n  );\n  const containsNestedAwait = /\\bawait\\b/.test(argumentStr);\n  ctx.s.overwrite(\n    node.start + startOffset,\n    argumentStart + startOffset,\n    `${needSemi ? `;` : ``}(\n  ([__temp,__restore] = ${ctx.helper(\n      `withAsyncContext`\n    )}(${containsNestedAwait ? `async ` : ``}() => `\n  );\n  ctx.s.appendLeft(\n    node.end + startOffset,\n    `)),\n  ${isStatement ? `` : `__temp = `}await __temp,\n  __restore()${isStatement ? `` : `,\n  __temp`}\n)`\n  );\n}\n\nvar __defProp$1 = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$1.call(b, prop))\n      __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b)) {\n      if (__propIsEnum$1.call(b, prop))\n        __defNormalProp$1(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction compileScript(sfc, options) {\n  var _a, _b, _c;\n  if (!options.id) {\n    warnOnce$3(\n      `compileScript now requires passing the \\`id\\` option.\nUpgrade your vite or vue-loader version for compatibility with the latest experimental proposals.`\n    );\n  }\n  const ctx = new ScriptCompileContext(sfc, options);\n  const { script, scriptSetup, source, filename } = sfc;\n  const hoistStatic = options.hoistStatic !== false && !script;\n  const scopeId = options.id ? options.id.replace(/^data-v-/, \"\") : \"\";\n  const scriptLang = script && script.lang;\n  const scriptSetupLang = scriptSetup && scriptSetup.lang;\n  if (!scriptSetup) {\n    if (!script) {\n      throw new Error(`[@vue/compiler-sfc] SFC contains no <script> tags.`);\n    }\n    return processNormalScript(ctx, scopeId);\n  }\n  if (script && scriptLang !== scriptSetupLang) {\n    throw new Error(\n      `[@vue/compiler-sfc] <script> and <script setup> must have the same language type.`\n    );\n  }\n  if (scriptSetupLang && !ctx.isJS && !ctx.isTS) {\n    return scriptSetup;\n  }\n  const scriptBindings = /* @__PURE__ */ Object.create(null);\n  const setupBindings = /* @__PURE__ */ Object.create(null);\n  let defaultExport;\n  let hasAwait = false;\n  let hasInlinedSsrRenderFn = false;\n  const startOffset = ctx.startOffset;\n  const endOffset = ctx.endOffset;\n  const scriptStartOffset = script && script.loc.start.offset;\n  const scriptEndOffset = script && script.loc.end.offset;\n  function hoistNode(node) {\n    const start = node.start + startOffset;\n    let end = node.end + startOffset;\n    if (node.trailingComments && node.trailingComments.length > 0) {\n      const lastCommentNode = node.trailingComments[node.trailingComments.length - 1];\n      end = lastCommentNode.end + startOffset;\n    }\n    while (end <= source.length) {\n      if (!/\\s/.test(source.charAt(end))) {\n        break;\n      }\n      end++;\n    }\n    ctx.s.move(start, end, 0);\n  }\n  function registerUserImport(source2, local, imported, isType, isFromSetup, needTemplateUsageCheck) {\n    let isUsedInTemplate = needTemplateUsageCheck;\n    if (needTemplateUsageCheck && ctx.isTS && sfc.template && !sfc.template.src && !sfc.template.lang) {\n      isUsedInTemplate = isImportUsed(local, sfc);\n    }\n    ctx.userImports[local] = {\n      isType,\n      imported,\n      local,\n      source: source2,\n      isFromSetup,\n      isUsedInTemplate\n    };\n  }\n  function checkInvalidScopeReference(node, method) {\n    if (!node)\n      return;\n    walkIdentifiers(node, (id) => {\n      const binding = setupBindings[id.name];\n      if (binding && binding !== \"literal-const\") {\n        ctx.error(\n          `\\`${method}()\\` in <script setup> cannot reference locally declared variables because it will be hoisted outside of the setup() function. If your component options require initialization in the module scope, use a separate normal <script> to export the options instead.`,\n          id\n        );\n      }\n    });\n  }\n  const scriptAst = ctx.scriptAst;\n  const scriptSetupAst = ctx.scriptSetupAst;\n  if (scriptAst) {\n    for (const node of scriptAst.body) {\n      if (node.type === \"ImportDeclaration\") {\n        for (const specifier of node.specifiers) {\n          const imported = getImportedName(specifier);\n          registerUserImport(\n            node.source.value,\n            specifier.local.name,\n            imported,\n            node.importKind === \"type\" || specifier.type === \"ImportSpecifier\" && specifier.importKind === \"type\",\n            false,\n            !options.inlineTemplate\n          );\n        }\n      }\n    }\n  }\n  for (const node of scriptSetupAst.body) {\n    if (node.type === \"ImportDeclaration\") {\n      hoistNode(node);\n      let removed = 0;\n      const removeSpecifier = (i) => {\n        const removeLeft = i > removed;\n        removed++;\n        const current = node.specifiers[i];\n        const next = node.specifiers[i + 1];\n        ctx.s.remove(\n          removeLeft ? node.specifiers[i - 1].end + startOffset : current.start + startOffset,\n          next && !removeLeft ? next.start + startOffset : current.end + startOffset\n        );\n      };\n      for (let i = 0; i < node.specifiers.length; i++) {\n        const specifier = node.specifiers[i];\n        const local = specifier.local.name;\n        const imported = getImportedName(specifier);\n        const source2 = node.source.value;\n        const existing = ctx.userImports[local];\n        if (source2 === \"vue\" && (imported === DEFINE_PROPS || imported === DEFINE_EMITS || imported === DEFINE_EXPOSE)) {\n          warnOnce$3(\n            `\\`${imported}\\` is a compiler macro and no longer needs to be imported.`\n          );\n          removeSpecifier(i);\n        } else if (existing) {\n          if (existing.source === source2 && existing.imported === imported) {\n            removeSpecifier(i);\n          } else {\n            ctx.error(\n              `different imports aliased to same local name.`,\n              specifier\n            );\n          }\n        } else {\n          registerUserImport(\n            source2,\n            local,\n            imported,\n            node.importKind === \"type\" || specifier.type === \"ImportSpecifier\" && specifier.importKind === \"type\",\n            true,\n            !options.inlineTemplate\n          );\n        }\n      }\n      if (node.specifiers.length && removed === node.specifiers.length) {\n        ctx.s.remove(node.start + startOffset, node.end + startOffset);\n      }\n    }\n  }\n  const vueImportAliases = {};\n  for (const key in ctx.userImports) {\n    const { source: source2, imported, local } = ctx.userImports[key];\n    if (source2 === \"vue\")\n      vueImportAliases[imported] = local;\n  }\n  if (script && scriptAst) {\n    for (const node of scriptAst.body) {\n      if (node.type === \"ExportDefaultDeclaration\") {\n        defaultExport = node;\n        let optionProperties;\n        if (defaultExport.declaration.type === \"ObjectExpression\") {\n          optionProperties = defaultExport.declaration.properties;\n        } else if (defaultExport.declaration.type === \"CallExpression\" && defaultExport.declaration.arguments[0] && defaultExport.declaration.arguments[0].type === \"ObjectExpression\") {\n          optionProperties = defaultExport.declaration.arguments[0].properties;\n        }\n        if (optionProperties) {\n          for (const p of optionProperties) {\n            if (p.type === \"ObjectProperty\" && p.key.type === \"Identifier\" && p.key.name === \"name\") {\n              ctx.hasDefaultExportName = true;\n            }\n            if ((p.type === \"ObjectMethod\" || p.type === \"ObjectProperty\") && p.key.type === \"Identifier\" && p.key.name === \"render\") {\n              ctx.hasDefaultExportRender = true;\n            }\n          }\n        }\n        const start = node.start + scriptStartOffset;\n        const end = node.declaration.start + scriptStartOffset;\n        ctx.s.overwrite(start, end, `const ${normalScriptDefaultVar} = `);\n      } else if (node.type === \"ExportNamedDeclaration\") {\n        const defaultSpecifier = node.specifiers.find(\n          (s) => s.exported.type === \"Identifier\" && s.exported.name === \"default\"\n        );\n        if (defaultSpecifier) {\n          defaultExport = node;\n          if (node.specifiers.length > 1) {\n            ctx.s.remove(\n              defaultSpecifier.start + scriptStartOffset,\n              defaultSpecifier.end + scriptStartOffset\n            );\n          } else {\n            ctx.s.remove(\n              node.start + scriptStartOffset,\n              node.end + scriptStartOffset\n            );\n          }\n          if (node.source) {\n            ctx.s.prepend(\n              `import { ${defaultSpecifier.local.name} as ${normalScriptDefaultVar} } from '${node.source.value}'\n`\n            );\n          } else {\n            ctx.s.appendLeft(\n              scriptEndOffset,\n              `\nconst ${normalScriptDefaultVar} = ${defaultSpecifier.local.name}\n`\n            );\n          }\n        }\n        if (node.declaration) {\n          walkDeclaration(\n            \"script\",\n            node.declaration,\n            scriptBindings,\n            vueImportAliases,\n            hoistStatic\n          );\n        }\n      } else if ((node.type === \"VariableDeclaration\" || node.type === \"FunctionDeclaration\" || node.type === \"ClassDeclaration\" || node.type === \"TSEnumDeclaration\") && !node.declare) {\n        walkDeclaration(\n          \"script\",\n          node,\n          scriptBindings,\n          vueImportAliases,\n          hoistStatic\n        );\n      }\n    }\n    if (scriptStartOffset > startOffset) {\n      if (!/\\n$/.test(script.content.trim())) {\n        ctx.s.appendLeft(scriptEndOffset, `\n`);\n      }\n      ctx.s.move(scriptStartOffset, scriptEndOffset, 0);\n    }\n  }\n  for (const node of scriptSetupAst.body) {\n    if (node.type === \"ExpressionStatement\") {\n      const expr = unwrapTSNode(node.expression);\n      if (processDefineProps(ctx, expr) || processDefineEmits(ctx, expr) || processDefineOptions(ctx, expr) || processDefineSlots(ctx, expr)) {\n        ctx.s.remove(node.start + startOffset, node.end + startOffset);\n      } else if (processDefineExpose(ctx, expr)) {\n        const callee = expr.callee;\n        ctx.s.overwrite(\n          callee.start + startOffset,\n          callee.end + startOffset,\n          \"__expose\"\n        );\n      } else {\n        processDefineModel(ctx, expr);\n      }\n    }\n    if (node.type === \"VariableDeclaration\" && !node.declare) {\n      const total = node.declarations.length;\n      let left = total;\n      let lastNonRemoved;\n      for (let i = 0; i < total; i++) {\n        const decl = node.declarations[i];\n        const init = decl.init && unwrapTSNode(decl.init);\n        if (init) {\n          if (processDefineOptions(ctx, init)) {\n            ctx.error(\n              `${DEFINE_OPTIONS}() has no returning value, it cannot be assigned.`,\n              node\n            );\n          }\n          const isDefineProps = processDefineProps(ctx, init, decl.id);\n          const isDefineEmits = !isDefineProps && processDefineEmits(ctx, init, decl.id);\n          !isDefineEmits && (processDefineSlots(ctx, init, decl.id) || processDefineModel(ctx, init, decl.id));\n          if (isDefineProps && !ctx.propsDestructureRestId && ctx.propsDestructureDecl) {\n            if (left === 1) {\n              ctx.s.remove(node.start + startOffset, node.end + startOffset);\n            } else {\n              let start = decl.start + startOffset;\n              let end = decl.end + startOffset;\n              if (i === total - 1) {\n                start = node.declarations[lastNonRemoved].end + startOffset;\n              } else {\n                end = node.declarations[i + 1].start + startOffset;\n              }\n              ctx.s.remove(start, end);\n              left--;\n            }\n          } else if (isDefineEmits) {\n            ctx.s.overwrite(\n              startOffset + init.start,\n              startOffset + init.end,\n              \"__emit\"\n            );\n          } else {\n            lastNonRemoved = i;\n          }\n        }\n      }\n    }\n    let isAllLiteral = false;\n    if ((node.type === \"VariableDeclaration\" || node.type === \"FunctionDeclaration\" || node.type === \"ClassDeclaration\" || node.type === \"TSEnumDeclaration\") && !node.declare) {\n      isAllLiteral = walkDeclaration(\n        \"scriptSetup\",\n        node,\n        setupBindings,\n        vueImportAliases,\n        hoistStatic\n      );\n    }\n    if (hoistStatic && isAllLiteral) {\n      hoistNode(node);\n    }\n    if (node.type === \"VariableDeclaration\" && !node.declare || node.type.endsWith(\"Statement\")) {\n      const scope = [scriptSetupAst.body];\n      walk$2(node, {\n        enter(child, parent) {\n          if (isFunctionType(child)) {\n            this.skip();\n          }\n          if (child.type === \"BlockStatement\") {\n            scope.push(child.body);\n          }\n          if (child.type === \"AwaitExpression\") {\n            hasAwait = true;\n            const currentScope = scope[scope.length - 1];\n            const needsSemi = currentScope.some((n, i) => {\n              return (scope.length === 1 || i > 0) && n.type === \"ExpressionStatement\" && n.start === child.start;\n            });\n            processAwait(\n              ctx,\n              child,\n              needsSemi,\n              parent.type === \"ExpressionStatement\"\n            );\n          }\n        },\n        exit(node2) {\n          if (node2.type === \"BlockStatement\")\n            scope.pop();\n        }\n      });\n    }\n    if (node.type === \"ExportNamedDeclaration\" && node.exportKind !== \"type\" || node.type === \"ExportAllDeclaration\" || node.type === \"ExportDefaultDeclaration\") {\n      ctx.error(\n        `<script setup> cannot contain ES module exports. If you are using a previous version of <script setup>, please consult the updated RFC at https://github.com/vuejs/rfcs/pull/227.`,\n        node\n      );\n    }\n    if (ctx.isTS) {\n      if (node.type.startsWith(\"TS\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"VariableDeclaration\" && node.declare) {\n        if (node.type !== \"TSEnumDeclaration\") {\n          hoistNode(node);\n        }\n      }\n    }\n  }\n  if (ctx.propsDestructureDecl) {\n    transformDestructuredProps(ctx, vueImportAliases);\n  }\n  checkInvalidScopeReference(ctx.propsRuntimeDecl, DEFINE_PROPS);\n  checkInvalidScopeReference(ctx.propsRuntimeDefaults, DEFINE_PROPS);\n  checkInvalidScopeReference(ctx.propsDestructureDecl, DEFINE_PROPS);\n  checkInvalidScopeReference(ctx.emitsRuntimeDecl, DEFINE_EMITS);\n  checkInvalidScopeReference(ctx.optionsRuntimeDecl, DEFINE_OPTIONS);\n  for (const { runtimeOptionNodes } of Object.values(ctx.modelDecls)) {\n    for (const node of runtimeOptionNodes) {\n      checkInvalidScopeReference(node, DEFINE_MODEL);\n    }\n  }\n  if (script) {\n    if (startOffset < scriptStartOffset) {\n      ctx.s.remove(0, startOffset);\n      ctx.s.remove(endOffset, scriptStartOffset);\n      ctx.s.remove(scriptEndOffset, source.length);\n    } else {\n      ctx.s.remove(0, scriptStartOffset);\n      ctx.s.remove(scriptEndOffset, startOffset);\n      ctx.s.remove(endOffset, source.length);\n    }\n  } else {\n    ctx.s.remove(0, startOffset);\n    ctx.s.remove(endOffset, source.length);\n  }\n  if (scriptAst) {\n    Object.assign(ctx.bindingMetadata, analyzeScriptBindings(scriptAst.body));\n  }\n  for (const [key, { isType, imported, source: source2 }] of Object.entries(\n    ctx.userImports\n  )) {\n    if (isType)\n      continue;\n    ctx.bindingMetadata[key] = imported === \"*\" || imported === \"default\" && source2.endsWith(\".vue\") || source2 === \"vue\" ? \"setup-const\" : \"setup-maybe-ref\";\n  }\n  for (const key in scriptBindings) {\n    ctx.bindingMetadata[key] = scriptBindings[key];\n  }\n  for (const key in setupBindings) {\n    ctx.bindingMetadata[key] = setupBindings[key];\n  }\n  if (sfc.cssVars.length && // no need to do this when targeting SSR\n  !((_a = options.templateOptions) == null ? void 0 : _a.ssr)) {\n    ctx.helperImports.add(CSS_VARS_HELPER);\n    ctx.helperImports.add(\"unref\");\n    ctx.s.prependLeft(\n      startOffset,\n      `\n${genCssVarsCode(\n        sfc.cssVars,\n        ctx.bindingMetadata,\n        scopeId,\n        !!options.isProd\n      )}\n`\n    );\n  }\n  let args = `__props`;\n  if (ctx.propsTypeDecl) {\n    args += `: any`;\n  }\n  if (ctx.propsDecl) {\n    if (ctx.propsDestructureRestId) {\n      ctx.s.overwrite(\n        startOffset + ctx.propsCall.start,\n        startOffset + ctx.propsCall.end,\n        `${ctx.helper(`createPropsRestProxy`)}(__props, ${JSON.stringify(\n          Object.keys(ctx.propsDestructuredBindings)\n        )})`\n      );\n      ctx.s.overwrite(\n        startOffset + ctx.propsDestructureDecl.start,\n        startOffset + ctx.propsDestructureDecl.end,\n        ctx.propsDestructureRestId\n      );\n    } else if (!ctx.propsDestructureDecl) {\n      ctx.s.overwrite(\n        startOffset + ctx.propsCall.start,\n        startOffset + ctx.propsCall.end,\n        \"__props\"\n      );\n    }\n  }\n  if (hasAwait) {\n    const any = ctx.isTS ? `: any` : ``;\n    ctx.s.prependLeft(startOffset, `\nlet __temp${any}, __restore${any}\n`);\n  }\n  const destructureElements = ctx.hasDefineExposeCall || !options.inlineTemplate ? [`expose: __expose`] : [];\n  if (ctx.emitDecl) {\n    destructureElements.push(`emit: __emit`);\n  }\n  if (destructureElements.length) {\n    args += `, { ${destructureElements.join(\", \")} }`;\n  }\n  let returned;\n  if (!options.inlineTemplate || !sfc.template && ctx.hasDefaultExportRender) {\n    const allBindings = __spreadValues$1(__spreadValues$1({}, scriptBindings), setupBindings);\n    for (const key in ctx.userImports) {\n      if (!ctx.userImports[key].isType && ctx.userImports[key].isUsedInTemplate) {\n        allBindings[key] = true;\n      }\n    }\n    returned = `{ `;\n    for (const key in allBindings) {\n      if (allBindings[key] === true && ctx.userImports[key].source !== \"vue\" && !ctx.userImports[key].source.endsWith(\".vue\")) {\n        returned += `get ${key}() { return ${key} }, `;\n      } else if (ctx.bindingMetadata[key] === \"setup-let\") {\n        const setArg = key === \"v\" ? `_v` : `v`;\n        returned += `get ${key}() { return ${key} }, set ${key}(${setArg}) { ${key} = ${setArg} }, `;\n      } else {\n        returned += `${key}, `;\n      }\n    }\n    returned = returned.replace(/, $/, \"\") + ` }`;\n  } else {\n    if (sfc.template && !sfc.template.src) {\n      if (options.templateOptions && options.templateOptions.ssr) {\n        hasInlinedSsrRenderFn = true;\n      }\n      const { code, ast, preamble, tips, errors } = compileTemplate(__spreadProps(__spreadValues$1({\n        filename,\n        ast: sfc.template.ast,\n        source: sfc.template.content,\n        inMap: sfc.template.map\n      }, options.templateOptions), {\n        id: scopeId,\n        scoped: sfc.styles.some((s) => s.scoped),\n        isProd: options.isProd,\n        ssrCssVars: sfc.cssVars,\n        compilerOptions: __spreadProps(__spreadValues$1({}, options.templateOptions && options.templateOptions.compilerOptions), {\n          inline: true,\n          isTS: ctx.isTS,\n          bindingMetadata: ctx.bindingMetadata\n        })\n      }));\n      if (tips.length) {\n        tips.forEach(warnOnce$3);\n      }\n      const err = errors[0];\n      if (typeof err === \"string\") {\n        throw new Error(err);\n      } else if (err) {\n        if (err.loc) {\n          err.message += `\n\n` + sfc.filename + \"\\n\" + generateCodeFrame(\n            source,\n            err.loc.start.offset,\n            err.loc.end.offset\n          ) + `\n`;\n        }\n        throw err;\n      }\n      if (preamble) {\n        ctx.s.prepend(preamble);\n      }\n      if (ast && ast.helpers.has(UNREF)) {\n        ctx.helperImports.delete(\"unref\");\n      }\n      returned = code;\n    } else {\n      returned = `() => {}`;\n    }\n  }\n  if (!options.inlineTemplate && true) {\n    ctx.s.appendRight(\n      endOffset,\n      `\nconst __returned__ = ${returned}\nObject.defineProperty(__returned__, '__isScriptSetup', { enumerable: false, value: true })\nreturn __returned__\n}\n\n`\n    );\n  } else {\n    ctx.s.appendRight(endOffset, `\nreturn ${returned}\n}\n\n`);\n  }\n  const genDefaultAs = options.genDefaultAs ? `const ${options.genDefaultAs} =` : `export default`;\n  let runtimeOptions = ``;\n  if (!ctx.hasDefaultExportName && filename && filename !== DEFAULT_FILENAME) {\n    const match = filename.match(/([^/\\\\]+)\\.\\w+$/);\n    if (match) {\n      runtimeOptions += `\n  __name: '${match[1]}',`;\n    }\n  }\n  if (hasInlinedSsrRenderFn) {\n    runtimeOptions += `\n  __ssrInlineRender: true,`;\n  }\n  const propsDecl = genRuntimeProps(ctx);\n  if (propsDecl)\n    runtimeOptions += `\n  props: ${propsDecl},`;\n  const emitsDecl = genRuntimeEmits(ctx);\n  if (emitsDecl)\n    runtimeOptions += `\n  emits: ${emitsDecl},`;\n  let definedOptions = \"\";\n  if (ctx.optionsRuntimeDecl) {\n    definedOptions = scriptSetup.content.slice(ctx.optionsRuntimeDecl.start, ctx.optionsRuntimeDecl.end).trim();\n  }\n  const exposeCall = ctx.hasDefineExposeCall || options.inlineTemplate ? `` : `  __expose();\n`;\n  if (ctx.isTS) {\n    const def = (defaultExport ? `\n  ...${normalScriptDefaultVar},` : ``) + (definedOptions ? `\n  ...${definedOptions},` : \"\");\n    ctx.s.prependLeft(\n      startOffset,\n      `\n${genDefaultAs} /*#__PURE__*/${ctx.helper(\n        `defineComponent`\n      )}({${def}${runtimeOptions}\n  ${hasAwait ? `async ` : ``}setup(${args}) {\n${exposeCall}`\n    );\n    ctx.s.appendRight(endOffset, `})`);\n  } else {\n    if (defaultExport || definedOptions) {\n      ctx.s.prependLeft(\n        startOffset,\n        `\n${genDefaultAs} /*#__PURE__*/Object.assign(${defaultExport ? `${normalScriptDefaultVar}, ` : \"\"}${definedOptions ? `${definedOptions}, ` : \"\"}{${runtimeOptions}\n  ${hasAwait ? `async ` : ``}setup(${args}) {\n${exposeCall}`\n      );\n      ctx.s.appendRight(endOffset, `})`);\n    } else {\n      ctx.s.prependLeft(\n        startOffset,\n        `\n${genDefaultAs} {${runtimeOptions}\n  ${hasAwait ? `async ` : ``}setup(${args}) {\n${exposeCall}`\n      );\n      ctx.s.appendRight(endOffset, `}`);\n    }\n  }\n  if (ctx.helperImports.size > 0) {\n    const runtimeModuleName = (_c = (_b = options.templateOptions) == null ? void 0 : _b.compilerOptions) == null ? void 0 : _c.runtimeModuleName;\n    const importSrc = runtimeModuleName ? JSON.stringify(runtimeModuleName) : `'vue'`;\n    ctx.s.prepend(\n      `import { ${[...ctx.helperImports].map((h) => `${h} as _${h}`).join(\", \")} } from ${importSrc}\n`\n    );\n  }\n  return __spreadProps(__spreadValues$1({}, scriptSetup), {\n    bindings: ctx.bindingMetadata,\n    imports: ctx.userImports,\n    content: ctx.s.toString(),\n    map: options.sourceMap !== false ? ctx.s.generateMap({\n      source: filename,\n      hires: true,\n      includeContent: true\n    }) : void 0,\n    scriptAst: scriptAst == null ? void 0 : scriptAst.body,\n    scriptSetupAst: scriptSetupAst == null ? void 0 : scriptSetupAst.body,\n    deps: ctx.deps ? [...ctx.deps] : void 0\n  });\n}\nfunction registerBinding(bindings, node, type) {\n  bindings[node.name] = type;\n}\nfunction walkDeclaration(from, node, bindings, userImportAliases, hoistStatic) {\n  let isAllLiteral = false;\n  if (node.type === \"VariableDeclaration\") {\n    const isConst = node.kind === \"const\";\n    isAllLiteral = isConst && node.declarations.every(\n      (decl) => decl.id.type === \"Identifier\" && isStaticNode(decl.init)\n    );\n    for (const { id, init: _init } of node.declarations) {\n      const init = _init && unwrapTSNode(_init);\n      const isDefineCall = !!(isConst && isCallOf(\n        init,\n        (c) => c === DEFINE_PROPS || c === DEFINE_EMITS || c === WITH_DEFAULTS\n      ));\n      if (id.type === \"Identifier\") {\n        let bindingType;\n        const userReactiveBinding = userImportAliases[\"reactive\"];\n        if ((hoistStatic || from === \"script\") && (isAllLiteral || isConst && isStaticNode(init))) {\n          bindingType = \"literal-const\";\n        } else if (isCallOf(init, userReactiveBinding)) {\n          bindingType = isConst ? \"setup-reactive-const\" : \"setup-let\";\n        } else if (\n          // if a declaration is a const literal, we can mark it so that\n          // the generated render fn code doesn't need to unref() it\n          isDefineCall || isConst && canNeverBeRef(init, userReactiveBinding)\n        ) {\n          bindingType = isCallOf(init, DEFINE_PROPS) ? \"setup-reactive-const\" : \"setup-const\";\n        } else if (isConst) {\n          if (isCallOf(\n            init,\n            (m) => m === userImportAliases[\"ref\"] || m === userImportAliases[\"computed\"] || m === userImportAliases[\"shallowRef\"] || m === userImportAliases[\"customRef\"] || m === userImportAliases[\"toRef\"] || m === DEFINE_MODEL\n          )) {\n            bindingType = \"setup-ref\";\n          } else {\n            bindingType = \"setup-maybe-ref\";\n          }\n        } else {\n          bindingType = \"setup-let\";\n        }\n        registerBinding(bindings, id, bindingType);\n      } else {\n        if (isCallOf(init, DEFINE_PROPS)) {\n          continue;\n        }\n        if (id.type === \"ObjectPattern\") {\n          walkObjectPattern(id, bindings, isConst, isDefineCall);\n        } else if (id.type === \"ArrayPattern\") {\n          walkArrayPattern(id, bindings, isConst, isDefineCall);\n        }\n      }\n    }\n  } else if (node.type === \"TSEnumDeclaration\") {\n    isAllLiteral = node.members.every(\n      (member) => !member.initializer || isStaticNode(member.initializer)\n    );\n    bindings[node.id.name] = isAllLiteral ? \"literal-const\" : \"setup-const\";\n  } else if (node.type === \"FunctionDeclaration\" || node.type === \"ClassDeclaration\") {\n    bindings[node.id.name] = \"setup-const\";\n  }\n  return isAllLiteral;\n}\nfunction walkObjectPattern(node, bindings, isConst, isDefineCall = false) {\n  for (const p of node.properties) {\n    if (p.type === \"ObjectProperty\") {\n      if (p.key.type === \"Identifier\" && p.key === p.value) {\n        const type = isDefineCall ? \"setup-const\" : isConst ? \"setup-maybe-ref\" : \"setup-let\";\n        registerBinding(bindings, p.key, type);\n      } else {\n        walkPattern(p.value, bindings, isConst, isDefineCall);\n      }\n    } else {\n      const type = isConst ? \"setup-const\" : \"setup-let\";\n      registerBinding(bindings, p.argument, type);\n    }\n  }\n}\nfunction walkArrayPattern(node, bindings, isConst, isDefineCall = false) {\n  for (const e of node.elements) {\n    e && walkPattern(e, bindings, isConst, isDefineCall);\n  }\n}\nfunction walkPattern(node, bindings, isConst, isDefineCall = false) {\n  if (node.type === \"Identifier\") {\n    const type = isDefineCall ? \"setup-const\" : isConst ? \"setup-maybe-ref\" : \"setup-let\";\n    registerBinding(bindings, node, type);\n  } else if (node.type === \"RestElement\") {\n    const type = isConst ? \"setup-const\" : \"setup-let\";\n    registerBinding(bindings, node.argument, type);\n  } else if (node.type === \"ObjectPattern\") {\n    walkObjectPattern(node, bindings, isConst);\n  } else if (node.type === \"ArrayPattern\") {\n    walkArrayPattern(node, bindings, isConst);\n  } else if (node.type === \"AssignmentPattern\") {\n    if (node.left.type === \"Identifier\") {\n      const type = isDefineCall ? \"setup-const\" : isConst ? \"setup-maybe-ref\" : \"setup-let\";\n      registerBinding(bindings, node.left, type);\n    } else {\n      walkPattern(node.left, bindings, isConst);\n    }\n  }\n}\nfunction canNeverBeRef(node, userReactiveImport) {\n  if (isCallOf(node, userReactiveImport)) {\n    return true;\n  }\n  switch (node.type) {\n    case \"UnaryExpression\":\n    case \"BinaryExpression\":\n    case \"ArrayExpression\":\n    case \"ObjectExpression\":\n    case \"FunctionExpression\":\n    case \"ArrowFunctionExpression\":\n    case \"UpdateExpression\":\n    case \"ClassExpression\":\n    case \"TaggedTemplateExpression\":\n      return true;\n    case \"SequenceExpression\":\n      return canNeverBeRef(\n        node.expressions[node.expressions.length - 1],\n        userReactiveImport\n      );\n    default:\n      if (isLiteralNode(node)) {\n        return true;\n      }\n      return false;\n  }\n}\nfunction isStaticNode(node) {\n  node = unwrapTSNode(node);\n  switch (node.type) {\n    case \"UnaryExpression\":\n      return isStaticNode(node.argument);\n    case \"LogicalExpression\":\n    case \"BinaryExpression\":\n      return isStaticNode(node.left) && isStaticNode(node.right);\n    case \"ConditionalExpression\": {\n      return isStaticNode(node.test) && isStaticNode(node.consequent) && isStaticNode(node.alternate);\n    }\n    case \"SequenceExpression\":\n    case \"TemplateLiteral\":\n      return node.expressions.every((expr) => isStaticNode(expr));\n    case \"ParenthesizedExpression\":\n      return isStaticNode(node.expression);\n    case \"StringLiteral\":\n    case \"NumericLiteral\":\n    case \"BooleanLiteral\":\n    case \"NullLiteral\":\n    case \"BigIntLiteral\":\n      return true;\n  }\n  return false;\n}\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nconst version = \"3.4.23\";\nconst parseCache = parseCache$1;\nconst errorMessages = __spreadValues(__spreadValues({}, errorMessages$1), DOMErrorMessages);\nconst walk = walk$2;\nconst shouldTransformRef = () => false;\n\nexport { MagicString, parse_1$1 as babelParse, compileScript, compileStyle, compileStyleAsync, compileTemplate, errorMessages, extractIdentifiers$1 as extractIdentifiers, extractRuntimeEmits, extractRuntimeProps, generateCodeFrame, inferRuntimeType, invalidateTypeCache, isInDestructureAssignment, isStaticProperty, parse$7 as parse, parseCache, registerTS, resolveTypeElements, rewriteDefault, rewriteDefaultAST, shouldTransformRef, version, walk, walkIdentifiers };\n"],
  "mappings": "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G,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI,IAAI,MAAM,IAAI,GAAG,MAAM,KAAK,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM,OAAO,IAAI,MAAM,GAAG,KAAK,GAAG,MAAM,IAAI,MAAM,IAAI,KAAK,MAAM,KAAK,MAAM,MAAM,GAAG,IAAI;AAC1hE,IAAM,wBAAwB,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG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",
  "names": ["str", "pad", "string", "_a", "tag", "isComponent", "newline", "node", "CharCodes", "BinTrieFlags", "code", "EntityDecoderState", "DecodingMode", "errors", "base", "result", "stack", "input", "error", "n", "a", "prefix", "clone", "object", "binding", "declaration", "word", "parser", "id", "plugin", "comment", "ch", "Tokenizer", "at", "ScopeHandler", "range", "list", "list2", "bodyNode", "node2", "parse", "jsx", "arrowExpression", "init", "isConst", "startLoc", "types", "isIdentifier", "isString", "estree", "left", "expr", "startsExpr", "type", "tokenIsKeyword", "isPrivate", "tokenTypes", "root", "path", "_b", "plus", "slash", "urlParse", "normalize", "isAbsolute", "join", "relative", "sourceFile", "map", "swap", "randomIntInRange", "doQuickSort", "comparator", "sourceMap", "version", "SourceMapConsumer_parseMappings", "needle", "section", "comma", "postfix", "isReferenced", "isRoot", "walk", "from", "hash", "seen", "e", "fill", "compare", "read", "i", "write", "byteLength", "inherits", "getOwnPropertyDescriptors", "inspect", "x", "warned", "resolve", "self", "sep", "isVoidTag", "isFragment", "escape", "processor", "semicolon", "Stringifier", "Node", "stringifier", "stringify", "selector", "warning", "tokenizer", "Parser", "colon", "filter", "MapGenerator", "warnOnce", "NoWorkResult", "PreviousMap", "CssSyntaxError", "Declaration", "LazyResult", "Container", "Processor", "Document", "Warning", "Comment", "AtRule", "Result", "Input", "Rule", "Root", "unesc", "getProp", "ensureObject", "stripComments", "cloneNode", "toString", "_interopRequireDefault", "types$1", "_getRequireWildcardCache", "nodeInterop", "_setPrototypeOf", "o", "p", "split", "_types", "Selector", "cssesc", "ClassName", "ID", "Namespace", "namespace", "Tag", "String", "Pseudo", "_unesc", "deprecate", "Attribute", "concat", "Universal", "Combinator", "Nesting", "sortAscending", "equals", "tokenize", "_root", "_selector", "_className", "_comment", "_id", "_tag", "_string", "_pseudo", "_attribute", "_universal", "_combinator", "_nesting", "getSource", "rule", "attribute", "space", "combinator", "nesting", "pseudo", "universal", "current", "noop", "transform", "process", "className", "base64VLQ_encode", "base64VLQ_decode", "ArraySet_fromArray", "ArraySet_size", "ArraySet_add", "ArraySet_has", "ArraySet_indexOf", "ArraySet_at", "ArraySet_toArray", "MappingList_forEach", "MappingList_add", "MappingList_toArray", "SourceMapGenerator_fromSourceMap", "SourceMapGenerator_addMapping", "SourceMapGenerator_setSourceContent", "SourceMapGenerator_applySourceMap", "SourceMapGenerator_validateMapping", "SourceMapGenerator_serializeMappings", "SourceMapGenerator_generateSourcesContent", "SourceMapGenerator_toJSON", "SourceMapGenerator_toString", "SourceMapConsumer_charIsMappingSeparator", "SourceMapConsumer_eachMapping", "SourceMapConsumer_allGeneratedPositionsFor", "SourceMapConsumer_fromSourceMap", "SourceMapConsumer_findMapping", "SourceMapConsumer_computeColumnSpans", "SourceMapConsumer_originalPositionFor", "BasicSourceMapConsumer_hasContentsOfAllSources", "SourceMapConsumer_sourceContentFor", "SourceMapConsumer_generatedPositionFor", "IndexedSourceMapConsumer_originalPositionFor", "IndexedSourceMapConsumer_hasContentsOfAllSources", "IndexedSourceMapConsumer_sourceContentFor", "IndexedSourceMapConsumer_generatedPositionFor", "IndexedSourceMapConsumer_parseMappings", "SourceNode_fromStringWithSourceMap", "SourceNode_add", "SourceNode_prepend", "SourceNode_walk", "SourceNode_join", "SourceNode_replaceRight", "SourceNode_setSourceContent", "SourceNode_walkSourceContents", "SourceNode_toString", "SourceNode_toStringWithSourceMap", "merge", "result2", "segment", "replacer", "registerBinding", "hoistStatic"]
}
