{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/shiki@1.3.0/node_modules/shiki/dist/langs/codeql.mjs"],
  "sourcesContent": ["const lang = Object.freeze({ \"displayName\": \"CodeQL\", \"fileTypes\": [\"ql\", \"qll\"], \"name\": \"codeql\", \"patterns\": [{ \"include\": \"#module-member\" }], \"repository\": { \"abstract\": { \"match\": \"(?x)\\\\b(?:abstract)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.abstract.ql\" }, \"additional\": { \"match\": \"(?x)\\\\b(?:additional)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.additional.ql\" }, \"and\": { \"match\": \"(?x)\\\\b(?:and)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.and.ql\" }, \"annotation\": { \"patterns\": [{ \"include\": \"#bindingset-annotation\" }, { \"include\": \"#language-annotation\" }, { \"include\": \"#pragma-annotation\" }, { \"include\": \"#annotation-keyword\" }] }, \"annotation-keyword\": { \"patterns\": [{ \"include\": \"#abstract\" }, { \"include\": \"#additional\" }, { \"include\": \"#bindingset\" }, { \"include\": \"#cached\" }, { \"include\": \"#default\" }, { \"include\": \"#deprecated\" }, { \"include\": \"#external\" }, { \"include\": \"#final\" }, { \"include\": \"#language\" }, { \"include\": \"#library\" }, { \"include\": \"#override\" }, { \"include\": \"#pragma\" }, { \"include\": \"#private\" }, { \"include\": \"#query\" }, { \"include\": \"#signature\" }, { \"include\": \"#transient\" }] }, \"any\": { \"match\": \"(?x)\\\\b(?:any)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.quantifier.any.ql\" }, \"arithmetic-operator\": { \"match\": \"(?x)\\\\+|-|\\\\*|/|%\", \"name\": \"keyword.operator.arithmetic.ql\" }, \"as\": { \"match\": \"(?x)\\\\b(?:as)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.as.ql\" }, \"asc\": { \"match\": \"(?x)\\\\b(?:asc)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.order.asc.ql\" }, \"at-lower-id\": { \"match\": \"(?x)@[a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_])))\" }, \"avg\": { \"match\": \"(?x)\\\\b(?:avg)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.avg.ql\" }, \"bindingset\": { \"match\": \"(?x)\\\\b(?:bindingset)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.bindingset.ql\" }, \"bindingset-annotation\": { \"begin\": \"(?x)((?:\\\\b(?:bindingset)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#bindingset\" }] } }, \"end\": \"(?x)(?! (?:\\\\s | $ | (?:// | /\\\\*)) | \\\\[ ) | (?<=\\\\])\", \"name\": \"meta.block.bindingset-annotation.ql\", \"patterns\": [{ \"include\": \"#bindingset-annotation-body\" }, { \"include\": \"#non-context-sensitive\" }] }, \"bindingset-annotation-body\": { \"begin\": \"(?x)((?:\\\\[))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#open-bracket\" }] } }, \"end\": \"(?x)((?:\\\\]))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#close-bracket\" }] } }, \"name\": \"meta.block.bindingset-annotation-body.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"variable.parameter.ql\" }] }, \"boolean\": { \"match\": \"(?x)\\\\b(?:boolean)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.type.boolean.ql\" }, \"by\": { \"match\": \"(?x)\\\\b(?:by)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.order.by.ql\" }, \"cached\": { \"match\": \"(?x)\\\\b(?:cached)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.cached.ql\" }, \"class\": { \"match\": \"(?x)\\\\b(?:class)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.class.ql\" }, \"class-body\": { \"begin\": \"(?x)((?:\\\\{))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#open-brace\" }] } }, \"end\": \"(?x)((?:\\\\}))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#close-brace\" }] } }, \"name\": \"meta.block.class-body.ql\", \"patterns\": [{ \"include\": \"#class-member\" }] }, \"class-declaration\": { \"begin\": \"(?x)((?:\\\\b(?:class)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#class\" }] } }, \"end\": \"(?x)(?<= \\\\} | ; )\", \"name\": \"meta.block.class-declaration.ql\", \"patterns\": [{ \"include\": \"#class-body\" }, { \"include\": \"#extends-clause\" }, { \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.class.ql\" }] }, \"class-member\": { \"patterns\": [{ \"include\": \"#predicate-or-field-declaration\" }, { \"include\": \"#annotation\" }, { \"include\": \"#non-context-sensitive\" }] }, \"close-angle\": { \"match\": \"(?x)>\", \"name\": \"punctuation.anglebracket.close.ql\" }, \"close-brace\": { \"match\": \"(?x)\\\\}\", \"name\": \"punctuation.curlybrace.close.ql\" }, \"close-bracket\": { \"match\": \"(?x)\\\\]\", \"name\": \"punctuation.squarebracket.close.ql\" }, \"close-paren\": { \"match\": \"(?x)\\\\)\", \"name\": \"punctuation.parenthesis.close.ql\" }, \"comma\": { \"match\": \"(?x),\", \"name\": \"punctuation.separator.comma.ql\" }, \"comment\": { \"patterns\": [{ \"begin\": \"(?x)/\\\\*\\\\*\", \"end\": \"(?x)\\\\*/\", \"name\": \"comment.block.documentation.ql\", \"patterns\": [{ \"begin\": \"(?x)(?<=/\\\\*\\\\*)([^*]|\\\\*(?!/))*$\", \"patterns\": [{ \"match\": \"(?x)\\\\G\\\\s* (@\\\\S+)\", \"name\": \"keyword.tag.ql\" }], \"while\": \"(?x)(^|\\\\G)\\\\s*([^*]|\\\\*(?!/))(?=([^*]|[*](?!/))*$)\" }] }, { \"begin\": \"(?x)/\\\\*\", \"end\": \"(?x)\\\\*/\", \"name\": \"comment.block.ql\" }, { \"match\": \"(?x)//.*$\", \"name\": \"comment.line.double-slash.ql\" }] }, \"comment-start\": { \"match\": \"(?x)// | /\\\\*\" }, \"comparison-operator\": { \"match\": \"(?x)=|\\\\!\\\\=\", \"name\": \"keyword.operator.comparison.ql\" }, \"concat\": { \"match\": \"(?x)\\\\b(?:concat)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.concat.ql\" }, \"count\": { \"match\": \"(?x)\\\\b(?:count)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.count.ql\" }, \"date\": { \"match\": \"(?x)\\\\b(?:date)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.type.date.ql\" }, \"default\": { \"match\": \"(?x)\\\\b(?:default)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.default.ql\" }, \"deprecated\": { \"match\": \"(?x)\\\\b(?:deprecated)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.deprecated.ql\" }, \"desc\": { \"match\": \"(?x)\\\\b(?:desc)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.order.desc.ql\" }, \"dont-care\": { \"match\": \"(?x)\\\\b(?:_)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"variable.language.dont-care.ql\" }, \"dot\": { \"match\": \"(?x)\\\\.\", \"name\": \"punctuation.accessor.ql\" }, \"dotdot\": { \"match\": \"(?x)\\\\.\\\\.\", \"name\": \"punctuation.operator.range.ql\" }, \"else\": { \"match\": \"(?x)\\\\b(?:else)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.else.ql\" }, \"end-of-as-clause\": { \"match\": \"(?x)(?: (?<=(?:[0-9A-Za-z_])) (?!(?:[0-9A-Za-z_])) (?<!(?<!(?:[0-9A-Za-z_]))as)) | (?=\\\\s* (?!(?:// | /\\\\*) | (?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))) \\\\S) | (?=\\\\s* (?:(?:(?:\\\\b(?:_)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:and)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:any)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:as)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:asc)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:avg)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:boolean)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:by)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:class)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:concat)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:count)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:date)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:desc)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:else)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:exists)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:extends)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:false)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:float)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:forall)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:forex)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:from)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:if)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:implies)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:import)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:in)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:instanceof)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:int)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:max)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:min)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:module)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:newtype)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:none)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:not)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:or)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:order)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:predicate)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:rank)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:result)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictconcat)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictcount)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictsum)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:string)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:sum)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:super)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:then)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:this)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:true)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:unique)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_])))))))\" }, \"end-of-id\": { \"match\": \"(?x)(?!(?:[0-9A-Za-z_]))\" }, \"exists\": { \"match\": \"(?x)\\\\b(?:exists)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.quantifier.exists.ql\" }, \"expr-as-clause\": { \"begin\": \"(?x)((?:\\\\b(?:as)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#as\" }] } }, \"end\": \"(?x)(?:(?: (?<=(?:[0-9A-Za-z_])) (?!(?:[0-9A-Za-z_])) (?<!(?<!(?:[0-9A-Za-z_]))as)) | (?=\\\\s* (?!(?:// | /\\\\*) | (?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))) \\\\S) | (?=\\\\s* (?:(?:(?:\\\\b(?:_)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:and)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:any)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:as)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:asc)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:avg)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:boolean)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:by)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:class)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:concat)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:count)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:date)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:desc)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:else)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:exists)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:extends)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:false)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:float)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:forall)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:forex)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:from)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:if)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:implies)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:import)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:in)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:instanceof)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:int)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:max)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:min)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:module)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:newtype)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:none)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:not)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:or)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:order)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:predicate)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:rank)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:result)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictconcat)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictcount)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictsum)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:string)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:sum)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:super)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:then)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:this)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:true)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:unique)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_]))))))))\", \"name\": \"meta.block.expr-as-clause.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"variable.other.ql\" }] }, \"extends\": { \"match\": \"(?x)\\\\b(?:extends)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.extends.ql\" }, \"extends-clause\": { \"begin\": \"(?x)((?:\\\\b(?:extends)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#extends\" }] } }, \"end\": \"(?x)(?= \\\\{ )\", \"name\": \"meta.block.extends-clause.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))|(?:@[a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.ql\" }] }, \"external\": { \"match\": \"(?x)\\\\b(?:external)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.external.ql\" }, \"false\": { \"match\": \"(?x)\\\\b(?:false)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"constant.language.boolean.false.ql\" }, \"final\": { \"match\": \"(?x)\\\\b(?:final)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.final.ql\" }, \"float\": { \"match\": \"(?x)\\\\b(?:float)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.type.float.ql\" }, \"float-literal\": { \"match\": \"(?x)-?[0-9]+\\\\.[0-9]+(?![0-9])\", \"name\": \"constant.numeric.decimal.ql\" }, \"forall\": { \"match\": \"(?x)\\\\b(?:forall)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.quantifier.forall.ql\" }, \"forex\": { \"match\": \"(?x)\\\\b(?:forex)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.quantifier.forex.ql\" }, \"from\": { \"match\": \"(?x)\\\\b(?:from)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.from.ql\" }, \"from-section\": { \"begin\": \"(?x)((?:\\\\b(?:from)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#from\" }] } }, \"end\": \"(?x)(?= (?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_])))) | (?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_])))) )\", \"name\": \"meta.block.from-section.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))(?=\\\\s*(?:,|(?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_]))))|$))\", \"name\": \"variable.parameter.ql\" }, { \"include\": \"#module-qualifier\" }, { \"match\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))|(?:@[a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.ql\" }, { \"match\": \"(?x)(?:\\\\b [a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"variable.parameter.ql\" }] }, \"id-character\": { \"match\": \"(?x)[0-9A-Za-z_]\" }, \"if\": { \"match\": \"(?x)\\\\b(?:if)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.if.ql\" }, \"implements\": { \"match\": \"(?x)\\\\b(?:implements)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.implements.ql\" }, \"implements-clause\": { \"begin\": \"(?x)((?:\\\\b(?:implements)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#implements\" }] } }, \"end\": \"(?x)(?= \\\\{ )\", \"name\": \"meta.block.implements-clause.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))|(?:@[a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.ql\" }] }, \"implies\": { \"match\": \"(?x)\\\\b(?:implies)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.implies.ql\" }, \"import\": { \"match\": \"(?x)\\\\b(?:import)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.import.ql\" }, \"import-as-clause\": { \"begin\": \"(?x)((?:\\\\b(?:as)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#as\" }] } }, \"end\": \"(?x)(?:(?: (?<=(?:[0-9A-Za-z_])) (?!(?:[0-9A-Za-z_])) (?<!(?<!(?:[0-9A-Za-z_]))as)) | (?=\\\\s* (?!(?:// | /\\\\*) | (?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))) \\\\S) | (?=\\\\s* (?:(?:(?:\\\\b(?:_)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:and)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:any)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:as)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:asc)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:avg)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:boolean)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:by)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:class)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:concat)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:count)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:date)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:desc)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:else)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:exists)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:extends)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:false)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:float)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:forall)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:forex)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:from)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:if)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:implies)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:import)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:in)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:instanceof)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:int)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:max)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:min)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:module)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:newtype)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:none)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:not)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:or)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:order)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:predicate)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:rank)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:result)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictconcat)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictcount)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictsum)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:string)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:sum)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:super)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:then)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:this)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:true)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:unique)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_]))))))))\", \"name\": \"meta.block.import-as-clause.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.namespace.ql\" }] }, \"import-directive\": { \"begin\": \"(?x)((?:\\\\b(?:import)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#import\" }] } }, \"end\": \"(?x)(?<!\\\\bimport)(?<=(?:\\\\>)|[A-Za-z0-9_]) (?!\\\\s*(\\\\.|\\\\:\\\\:|\\\\,|(?:<)))\", \"name\": \"meta.block.import-directive.ql\", \"patterns\": [{ \"include\": \"#instantiation-args\" }, { \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.namespace.ql\" }] }, \"in\": { \"match\": \"(?x)\\\\b(?:in)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.in.ql\" }, \"instanceof\": { \"match\": \"(?x)\\\\b(?:instanceof)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.instanceof.ql\" }, \"instantiation-args\": { \"begin\": \"(?x)((?:<))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#open-angle\" }] } }, \"end\": \"(?x)((?:>))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#close-angle\" }] } }, \"name\": \"meta.type.parameters.ql\", \"patterns\": [{ \"include\": \"#instantiation-args\" }, { \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.namespace.ql\" }] }, \"int\": { \"match\": \"(?x)\\\\b(?:int)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.type.int.ql\" }, \"int-literal\": { \"match\": \"(?x)-?[0-9]+(?![0-9])\", \"name\": \"constant.numeric.decimal.ql\" }, \"keyword\": { \"patterns\": [{ \"include\": \"#dont-care\" }, { \"include\": \"#and\" }, { \"include\": \"#any\" }, { \"include\": \"#as\" }, { \"include\": \"#asc\" }, { \"include\": \"#avg\" }, { \"include\": \"#boolean\" }, { \"include\": \"#by\" }, { \"include\": \"#class\" }, { \"include\": \"#concat\" }, { \"include\": \"#count\" }, { \"include\": \"#date\" }, { \"include\": \"#desc\" }, { \"include\": \"#else\" }, { \"include\": \"#exists\" }, { \"include\": \"#extends\" }, { \"include\": \"#false\" }, { \"include\": \"#float\" }, { \"include\": \"#forall\" }, { \"include\": \"#forex\" }, { \"include\": \"#from\" }, { \"include\": \"#if\" }, { \"include\": \"#implies\" }, { \"include\": \"#import\" }, { \"include\": \"#in\" }, { \"include\": \"#instanceof\" }, { \"include\": \"#int\" }, { \"include\": \"#max\" }, { \"include\": \"#min\" }, { \"include\": \"#module\" }, { \"include\": \"#newtype\" }, { \"include\": \"#none\" }, { \"include\": \"#not\" }, { \"include\": \"#or\" }, { \"include\": \"#order\" }, { \"include\": \"#predicate\" }, { \"include\": \"#rank\" }, { \"include\": \"#result\" }, { \"include\": \"#select\" }, { \"include\": \"#strictconcat\" }, { \"include\": \"#strictcount\" }, { \"include\": \"#strictsum\" }, { \"include\": \"#string\" }, { \"include\": \"#sum\" }, { \"include\": \"#super\" }, { \"include\": \"#then\" }, { \"include\": \"#this\" }, { \"include\": \"#true\" }, { \"include\": \"#unique\" }, { \"include\": \"#where\" }] }, \"language\": { \"match\": \"(?x)\\\\b(?:language)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.language.ql\" }, \"language-annotation\": { \"begin\": \"(?x)((?:\\\\b(?:language)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#language\" }] } }, \"end\": \"(?x)(?! (?:\\\\s | $ | (?:// | /\\\\*)) | \\\\[ ) | (?<=\\\\])\", \"name\": \"meta.block.language-annotation.ql\", \"patterns\": [{ \"include\": \"#language-annotation-body\" }, { \"include\": \"#non-context-sensitive\" }] }, \"language-annotation-body\": { \"begin\": \"(?x)((?:\\\\[))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#open-bracket\" }] } }, \"end\": \"(?x)((?:\\\\]))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#close-bracket\" }] } }, \"name\": \"meta.block.language-annotation-body.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)\\\\b(?:monotonicAggregates)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.ql\" }] }, \"library\": { \"match\": \"(?x)\\\\b(?:library)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.library.ql\" }, \"literal\": { \"patterns\": [{ \"include\": \"#float-literal\" }, { \"include\": \"#int-literal\" }, { \"include\": \"#string-literal\" }] }, \"lower-id\": { \"match\": \"(?x)\\\\b [a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_])))\" }, \"max\": { \"match\": \"(?x)\\\\b(?:max)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.max.ql\" }, \"min\": { \"match\": \"(?x)\\\\b(?:min)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.min.ql\" }, \"module\": { \"match\": \"(?x)\\\\b(?:module)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.module.ql\" }, \"module-body\": { \"begin\": \"(?x)((?:\\\\{))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#open-brace\" }] } }, \"end\": \"(?x)((?:\\\\}))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#close-brace\" }] } }, \"name\": \"meta.block.module-body.ql\", \"patterns\": [{ \"include\": \"#module-member\" }] }, \"module-declaration\": { \"begin\": \"(?x)((?:\\\\b(?:module)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#module\" }] } }, \"end\": \"(?x)(?<=\\\\}|;)\", \"name\": \"meta.block.module-declaration.ql\", \"patterns\": [{ \"include\": \"#module-body\" }, { \"include\": \"#implements-clause\" }, { \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.namespace.ql\" }] }, \"module-member\": { \"patterns\": [{ \"include\": \"#import-directive\" }, { \"include\": \"#import-as-clause\" }, { \"include\": \"#module-declaration\" }, { \"include\": \"#newtype-declaration\" }, { \"include\": \"#newtype-branch-name-with-prefix\" }, { \"include\": \"#predicate-parameter-list\" }, { \"include\": \"#predicate-body\" }, { \"include\": \"#class-declaration\" }, { \"include\": \"#select-clause\" }, { \"include\": \"#predicate-or-field-declaration\" }, { \"include\": \"#non-context-sensitive\" }, { \"include\": \"#annotation\" }] }, \"module-qualifier\": { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_])))) (?=\\\\s*\\\\:\\\\:)\", \"name\": \"entity.name.type.namespace.ql\" }, \"newtype\": { \"match\": \"(?x)\\\\b(?:newtype)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.newtype.ql\" }, \"newtype-branch-name-with-prefix\": { \"begin\": \"(?x)\\\\= | (?:\\\\b(?:or)(?:(?!(?:[0-9A-Za-z_]))))\", \"beginCaptures\": { \"0\": { \"patterns\": [{ \"include\": \"#or\" }, { \"include\": \"#comparison-operator\" }] } }, \"end\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"endCaptures\": { \"0\": { \"name\": \"entity.name.type.ql\" } }, \"name\": \"meta.block.newtype-branch-name-with-prefix.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }] }, \"newtype-declaration\": { \"begin\": \"(?x)((?:\\\\b(?:newtype)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#newtype\" }] } }, \"end\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"endCaptures\": { \"0\": { \"name\": \"entity.name.type.ql\" } }, \"name\": \"meta.block.newtype-declaration.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }] }, \"non-context-sensitive\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#literal\" }, { \"include\": \"#operator-or-punctuation\" }, { \"include\": \"#keyword\" }] }, \"none\": { \"match\": \"(?x)\\\\b(?:none)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.quantifier.none.ql\" }, \"not\": { \"match\": \"(?x)\\\\b(?:not)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.not.ql\" }, \"open-angle\": { \"match\": \"(?x)<\", \"name\": \"punctuation.anglebracket.open.ql\" }, \"open-brace\": { \"match\": \"(?x)\\\\{\", \"name\": \"punctuation.curlybrace.open.ql\" }, \"open-bracket\": { \"match\": \"(?x)\\\\[\", \"name\": \"punctuation.squarebracket.open.ql\" }, \"open-paren\": { \"match\": \"(?x)\\\\(\", \"name\": \"punctuation.parenthesis.open.ql\" }, \"operator-or-punctuation\": { \"patterns\": [{ \"include\": \"#relational-operator\" }, { \"include\": \"#comparison-operator\" }, { \"include\": \"#arithmetic-operator\" }, { \"include\": \"#comma\" }, { \"include\": \"#semicolon\" }, { \"include\": \"#dot\" }, { \"include\": \"#dotdot\" }, { \"include\": \"#pipe\" }, { \"include\": \"#open-paren\" }, { \"include\": \"#close-paren\" }, { \"include\": \"#open-brace\" }, { \"include\": \"#close-brace\" }, { \"include\": \"#open-bracket\" }, { \"include\": \"#close-bracket\" }, { \"include\": \"#open-angle\" }, { \"include\": \"#close-angle\" }] }, \"or\": { \"match\": \"(?x)\\\\b(?:or)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.or.ql\" }, \"order\": { \"match\": \"(?x)\\\\b(?:order)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.order.order.ql\" }, \"override\": { \"match\": \"(?x)\\\\b(?:override)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.override.ql\" }, \"pipe\": { \"match\": \"(?x)\\\\|\", \"name\": \"punctuation.separator.pipe.ql\" }, \"pragma\": { \"match\": \"(?x)\\\\b(?:pragma)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.pragma.ql\" }, \"pragma-annotation\": { \"begin\": \"(?x)((?:\\\\b(?:pragma)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#pragma\" }] } }, \"end\": \"(?x)(?! (?:\\\\s | $ | (?:// | /\\\\*)) | \\\\[ ) | (?<=\\\\])\", \"name\": \"meta.block.pragma-annotation.ql\", \"patterns\": [{ \"include\": \"#pragma-annotation-body\" }, { \"include\": \"#non-context-sensitive\" }] }, \"pragma-annotation-body\": { \"begin\": \"(?x)((?:\\\\[))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#open-bracket\" }] } }, \"end\": \"(?x)((?:\\\\]))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#close-bracket\" }] } }, \"name\": \"meta.block.pragma-annotation-body.ql\", \"patterns\": [{ \"match\": \"(?x)\\\\b(?:inline|noinline|nomagic|noopt)\\\\b\", \"name\": \"storage.modifier.ql\" }] }, \"predicate\": { \"match\": \"(?x)\\\\b(?:predicate)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.predicate.ql\" }, \"predicate-body\": { \"begin\": \"(?x)((?:\\\\{))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#open-brace\" }] } }, \"end\": \"(?x)((?:\\\\}))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#close-brace\" }] } }, \"name\": \"meta.block.predicate-body.ql\", \"patterns\": [{ \"include\": \"#predicate-body-contents\" }] }, \"predicate-body-contents\": { \"patterns\": [{ \"include\": \"#expr-as-clause\" }, { \"include\": \"#non-context-sensitive\" }, { \"include\": \"#module-qualifier\" }, { \"match\": \"(?x)(?:\\\\b [a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\\\\s*(?:\\\\*|\\\\+)?\\\\s*(?=\\\\()\", \"name\": \"entity.name.function.ql\" }, { \"match\": \"(?x)(?:\\\\b [a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"variable.other.ql\" }, { \"match\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))|(?:@[a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.ql\" }] }, \"predicate-or-field-declaration\": { \"begin\": \"(?x)(?:(?=(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_])))))(?!(?:(?:(?:\\\\b(?:_)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:and)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:any)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:as)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:asc)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:avg)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:boolean)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:by)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:class)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:concat)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:count)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:date)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:desc)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:else)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:exists)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:extends)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:false)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:float)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:forall)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:forex)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:from)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:if)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:implies)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:import)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:in)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:instanceof)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:int)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:max)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:min)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:module)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:newtype)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:none)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:not)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:or)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:order)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:predicate)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:rank)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:result)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictconcat)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictcount)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:strictsum)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:string)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:sum)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:super)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:then)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:this)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:true)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:unique)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_]))))))|(?:(?:(?:\\\\b(?:abstract)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:additional)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:bindingset)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:cached)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:default)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:deprecated)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:external)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:final)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:language)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:library)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:override)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:pragma)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:private)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:query)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:signature)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:transient)(?:(?!(?:[0-9A-Za-z_])))))))) | (?=(?:(?:(?:\\\\b(?:boolean)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:date)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:float)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:int)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:predicate)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:string)(?:(?!(?:[0-9A-Za-z_]))))))) | (?=(?:@[a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_])))))\", \"end\": \"(?x)(?<=\\\\}|;)\", \"name\": \"meta.block.predicate-or-field-declaration.ql\", \"patterns\": [{ \"include\": \"#predicate-parameter-list\" }, { \"include\": \"#predicate-body\" }, { \"include\": \"#non-context-sensitive\" }, { \"include\": \"#module-qualifier\" }, { \"match\": \"(?x)(?:\\\\b [a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))(?=\\\\s*;)\", \"name\": \"variable.field.ql\" }, { \"match\": \"(?x)(?:\\\\b [a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.function.ql\" }, { \"match\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))|(?:@[a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.ql\" }] }, \"predicate-parameter-list\": { \"begin\": \"(?x)((?:\\\\())\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#open-paren\" }] } }, \"end\": \"(?x)((?:\\\\)))\", \"endCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#close-paren\" }] } }, \"name\": \"meta.block.predicate-parameter-list.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))(?=\\\\s*(?:,|\\\\)))\", \"name\": \"variable.parameter.ql\" }, { \"include\": \"#module-qualifier\" }, { \"match\": \"(?x)(?:\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))|(?:@[a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"entity.name.type.ql\" }, { \"match\": \"(?x)(?:\\\\b [a-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"variable.parameter.ql\" }] }, \"predicate-start-keyword\": { \"patterns\": [{ \"include\": \"#boolean\" }, { \"include\": \"#date\" }, { \"include\": \"#float\" }, { \"include\": \"#int\" }, { \"include\": \"#predicate\" }, { \"include\": \"#string\" }] }, \"private\": { \"match\": \"(?x)\\\\b(?:private)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.private.ql\" }, \"query\": { \"match\": \"(?x)\\\\b(?:query)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.query.ql\" }, \"rank\": { \"match\": \"(?x)\\\\b(?:rank)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.rank.ql\" }, \"relational-operator\": { \"match\": \"(?x)<=|<|>=|>\", \"name\": \"keyword.operator.relational.ql\" }, \"result\": { \"match\": \"(?x)\\\\b(?:result)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"variable.language.result.ql\" }, \"select\": { \"match\": \"(?x)\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.query.select.ql\" }, \"select-as-clause\": { \"begin\": \"(?x)((?:\\\\b(?:as)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#as\" }] } }, \"end\": \"(?x)(?<=(?:[0-9A-Za-z_])(?:(?!(?:[0-9A-Za-z_]))))\", \"match\": \"(?x)meta.block.select-as-clause.ql\", \"patterns\": [{ \"include\": \"#non-context-sensitive\" }, { \"match\": \"(?x)(?:\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_]))))\", \"name\": \"variable.other.ql\" }] }, \"select-clause\": { \"begin\": \"(?x)(?=(?:\\\\b(?:from)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_])))))\", \"end\": \"(?x)(?!(?:\\\\b(?:from)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_]))))|(?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_])))))\", \"name\": \"meta.block.select-clause.ql\", \"patterns\": [{ \"include\": \"#from-section\" }, { \"include\": \"#where-section\" }, { \"include\": \"#select-section\" }] }, \"select-section\": { \"begin\": \"(?x)((?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#select\" }] } }, \"end\": \"(?x)(?=\\\\n)\", \"name\": \"meta.block.select-section.ql\", \"patterns\": [{ \"include\": \"#predicate-body-contents\" }, { \"include\": \"#select-as-clause\" }] }, \"semicolon\": { \"match\": \"(?x);\", \"name\": \"punctuation.separator.statement.ql\" }, \"signature\": { \"match\": \"(?x)\\\\b(?:signature)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.signature.ql\" }, \"simple-id\": { \"match\": \"(?x)\\\\b [A-Za-z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_])))\" }, \"strictconcat\": { \"match\": \"(?x)\\\\b(?:strictconcat)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.strictconcat.ql\" }, \"strictcount\": { \"match\": \"(?x)\\\\b(?:strictcount)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.strictcount.ql\" }, \"strictsum\": { \"match\": \"(?x)\\\\b(?:strictsum)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.strictsum.ql\" }, \"string\": { \"match\": \"(?x)\\\\b(?:string)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.type.string.ql\" }, \"string-escape\": { \"match\": '(?x)\\\\\\\\[\"\\\\\\\\nrt]', \"name\": \"constant.character.escape.ql\" }, \"string-literal\": { \"begin\": '(?x)\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ql\" } }, \"end\": '(?x)(\") | ((?:[^\\\\\\\\\\\\n])$)', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.ql\" }, \"2\": { \"name\": \"invalid.illegal.newline.ql\" } }, \"name\": \"string.quoted.double.ql\", \"patterns\": [{ \"include\": \"#string-escape\" }] }, \"sum\": { \"match\": \"(?x)\\\\b(?:sum)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.sum.ql\" }, \"super\": { \"match\": \"(?x)\\\\b(?:super)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"variable.language.super.ql\" }, \"then\": { \"match\": \"(?x)\\\\b(?:then)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.other.then.ql\" }, \"this\": { \"match\": \"(?x)\\\\b(?:this)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"variable.language.this.ql\" }, \"transient\": { \"match\": \"(?x)\\\\b(?:transient)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"storage.modifier.transient.ql\" }, \"true\": { \"match\": \"(?x)\\\\b(?:true)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"constant.language.boolean.true.ql\" }, \"unique\": { \"match\": \"(?x)\\\\b(?:unique)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.aggregate.unique.ql\" }, \"upper-id\": { \"match\": \"(?x)\\\\b [A-Z][0-9A-Za-z_]* (?:(?!(?:[0-9A-Za-z_])))\" }, \"where\": { \"match\": \"(?x)\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_])))\", \"name\": \"keyword.query.where.ql\" }, \"where-section\": { \"begin\": \"(?x)((?:\\\\b(?:where)(?:(?!(?:[0-9A-Za-z_])))))\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"include\": \"#where\" }] } }, \"end\": \"(?x)(?=(?:\\\\b(?:select)(?:(?!(?:[0-9A-Za-z_])))))\", \"name\": \"meta.block.where-section.ql\", \"patterns\": [{ \"include\": \"#predicate-body-contents\" }] }, \"whitespace-or-comment-start\": { \"match\": \"(?x)\\\\s | $ | (?:// | /\\\\*)\" } }, \"scopeName\": \"source.ql\", \"aliases\": [\"ql\"] });\nvar codeql = [\n  lang\n];\n\nexport { codeql as default };\n"],
  "mappings": "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",
  "names": []
}
