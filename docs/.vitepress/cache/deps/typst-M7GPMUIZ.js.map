{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/shiki@1.3.0/node_modules/shiki/dist/langs/typst.mjs"],
  "sourcesContent": ["const lang = Object.freeze({ \"displayName\": \"Typst\", \"name\": \"typst\", \"patterns\": [{ \"include\": \"#markup\" }], \"repository\": { \"arguments\": { \"patterns\": [{ \"match\": \"\\\\b[[:alpha:]_][[:alnum:]_-]*(?=:)\", \"name\": \"variable.parameter.typst\" }, { \"include\": \"#code\" }] }, \"code\": { \"patterns\": [{ \"include\": \"#common\" }, { \"begin\": \"{\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.block.code.typst\" } }, \"end\": \"}\", \"name\": \"meta.block.code.typst\", \"patterns\": [{ \"include\": \"#code\" }] }, { \"begin\": \"\\\\[\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.block.content.typst\" } }, \"end\": \"\\\\]\", \"name\": \"meta.block.content.typst\", \"patterns\": [{ \"include\": \"#markup\" }] }, { \"begin\": \"//\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.typst\" } }, \"end\": \"\\n\", \"name\": \"comment.line.double-slash.typst\" }, { \"match\": \":\", \"name\": \"punctuation.separator.colon.typst\" }, { \"match\": \",\", \"name\": \"punctuation.separator.comma.typst\" }, { \"match\": \"=>|\\\\.\\\\.\", \"name\": \"keyword.operator.typst\" }, { \"match\": \"==|!=|<=|<|>=|>\", \"name\": \"keyword.operator.relational.typst\" }, { \"match\": \"\\\\+=|-=|\\\\*=|/=|=\", \"name\": \"keyword.operator.assignment.typst\" }, { \"match\": \"\\\\+|\\\\*|/|(?<![[:alpha:]_][[:alnum:]_-]*)-(?![:alnum:]_-]*[[:alpha:]_])\", \"name\": \"keyword.operator.arithmetic.typst\" }, { \"match\": \"\\\\b(and|or|not)\\\\b\", \"name\": \"keyword.operator.word.typst\" }, { \"match\": \"\\\\b(let|as|in|set|show)\\\\b\", \"name\": \"keyword.other.typst\" }, { \"match\": \"\\\\b(if|else)\\\\b\", \"name\": \"keyword.control.conditional.typst\" }, { \"match\": \"\\\\b(for|while|break|continue)\\\\b\", \"name\": \"keyword.control.loop.typst\" }, { \"match\": \"\\\\b(import|include|export)\\\\b\", \"name\": \"keyword.control.import.typst\" }, { \"match\": \"\\\\b(return)\\\\b\", \"name\": \"keyword.control.flow.typst\" }, { \"include\": \"#constants\" }, { \"comment\": \"Function name\", \"match\": \"\\\\b[[:alpha:]_][[:alnum:]_-]*!?(?=\\\\[|\\\\()\", \"name\": \"entity.name.function.typst\" }, { \"comment\": \"Function name\", \"match\": \"(?<=\\\\bshow\\\\s*)\\\\b[[:alpha:]_][[:alnum:]_-]*(?=\\\\s*[:.])\", \"name\": \"entity.name.function.typst\" }, { \"begin\": \"(?<=\\\\b[[:alpha:]_][[:alnum:]_-]*!?)\\\\(\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.group.typst\" } }, \"comment\": \"Function arguments\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#arguments\" }] }, { \"match\": \"\\\\b[[:alpha:]_][[:alnum:]_-]*\\\\b\", \"name\": \"variable.other.typst\" }, { \"begin\": \"\\\\(\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.group.typst\" } }, \"end\": \"\\\\)|(?=;)\", \"name\": \"meta.group.typst\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"comments\": { \"patterns\": [{ \"begin\": \"/\\\\*\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.typst\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.typst\", \"patterns\": [{ \"include\": \"#comments\" }] }, { \"begin\": \"(?<!:)//\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.typst\" } }, \"end\": \"\\n\", \"name\": \"comment.line.double-slash.typst\", \"patterns\": [{ \"include\": \"#comments\" }] }] }, \"common\": { \"patterns\": [{ \"include\": \"#comments\" }] }, \"constants\": { \"patterns\": [{ \"match\": \"\\\\bnone\\\\b\", \"name\": \"constant.language.none.typst\" }, { \"match\": \"\\\\bauto\\\\b\", \"name\": \"constant.language.auto.typst\" }, { \"match\": \"\\\\b(true|false)\\\\b\", \"name\": \"constant.language.boolean.typst\" }, { \"match\": \"\\\\b(\\\\d*)?\\\\.?\\\\d+([eE][+-]?\\\\d+)?(mm|pt|cm|in|em)\\\\b\", \"name\": \"constant.numeric.length.typst\" }, { \"match\": \"\\\\b(\\\\d*)?\\\\.?\\\\d+([eE][+-]?\\\\d+)?(rad|deg)\\\\b\", \"name\": \"constant.numeric.angle.typst\" }, { \"match\": \"\\\\b(\\\\d*)?\\\\.?\\\\d+([eE][+-]?\\\\d+)?%\", \"name\": \"constant.numeric.percentage.typst\" }, { \"match\": \"\\\\b(\\\\d*)?\\\\.?\\\\d+([eE][+-]?\\\\d+)?fr\", \"name\": \"constant.numeric.fr.typst\" }, { \"match\": \"\\\\b\\\\d+\\\\b\", \"name\": \"constant.numeric.integer.typst\" }, { \"match\": \"\\\\b(\\\\d*)?\\\\.?\\\\d+([eE][+-]?\\\\d+)?\\\\b\", \"name\": \"constant.numeric.float.typst\" }, { \"begin\": '\"', \"captures\": { \"0\": { \"name\": \"punctuation.definition.string.typst\" } }, \"end\": '\"', \"name\": \"string.quoted.double.typst\", \"patterns\": [{ \"match\": '\\\\\\\\([\\\\\\\\\"nrt]|u\\\\{?[0-9a-zA-Z]*\\\\}?)', \"name\": \"constant.character.escape.string.typst\" }] }, { \"begin\": \"\\\\$\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.string.math.typst\" } }, \"end\": \"\\\\$\", \"name\": \"string.other.math.typst\" }] }, \"markup\": { \"patterns\": [{ \"include\": \"#common\" }, { \"match\": \"\\\\\\\\([\\\\\\\\/\\\\[\\\\]{}#*_=~`$-.]|u\\\\{[0-9a-zA-Z]*\\\\}?)\", \"name\": \"constant.character.escape.content.typst\" }, { \"match\": \"\\\\\\\\\", \"name\": \"punctuation.definition.linebreak.typst\" }, { \"match\": \"~\", \"name\": \"punctuation.definition.nonbreaking-space.typst\" }, { \"match\": \"-\\\\?\", \"name\": \"punctuation.definition.shy.typst\" }, { \"match\": \"---\", \"name\": \"punctuation.definition.em-dash.typst\" }, { \"match\": \"--\", \"name\": \"punctuation.definition.en-dash.typst\" }, { \"match\": \"\\\\.\\\\.\\\\.\", \"name\": \"punctuation.definition.ellipsis.typst\" }, { \"match\": \":([a-zA-Z0-9]+:)+\", \"name\": \"constant.symbol.typst\" }, { \"begin\": \"(^\\\\*|\\\\*$|((?<=\\\\W|_)\\\\*)|(\\\\*(?=\\\\W|_)))\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.bold.typst\" } }, \"end\": \"(^\\\\*|\\\\*$|((?<=\\\\W|_)\\\\*)|(\\\\*(?=\\\\W|_)))|\\n|(?=\\\\])\", \"name\": \"markup.bold.typst\", \"patterns\": [{ \"include\": \"#markup\" }] }, { \"begin\": \"(^_|_$|((?<=\\\\W|_)_)|(_(?=\\\\W|_)))\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.italic.typst\" } }, \"end\": \"(^_|_$|((?<=\\\\W|_)_)|(_(?=\\\\W|_)))|\\n|(?=\\\\])\", \"name\": \"markup.italic.typst\", \"patterns\": [{ \"include\": \"#markup\" }] }, { \"match\": \"https?://[0-9a-zA-Z~/%#&=',;\\\\.\\\\+\\\\?]*\", \"name\": \"markup.underline.link.typst\" }, { \"begin\": \"`{3,}\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.raw.typst\" } }, \"end\": \"\\\\0\", \"name\": \"markup.raw.block.typst\" }, { \"begin\": \"`\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.raw.typst\" } }, \"end\": \"`\", \"name\": \"markup.raw.inline.typst\" }, { \"begin\": \"\\\\$\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.string.math.typst\" } }, \"end\": \"\\\\$\", \"name\": \"string.other.math.typst\" }, { \"begin\": \"^\\\\s*=+\\\\s+\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.heading.typst\" } }, \"contentName\": \"entity.name.section.typst\", \"end\": \"\\n|(?=<)\", \"name\": \"markup.heading.typst\", \"patterns\": [{ \"include\": \"#markup\" }] }, { \"match\": \"^\\\\s*-\\\\s+\", \"name\": \"punctuation.definition.list.unnumbered.typst\" }, { \"match\": \"^\\\\s*([0-9]*\\\\.|\\\\+)\\\\s+\", \"name\": \"punctuation.definition.list.numbered.typst\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.list.description.typst\" }, \"2\": { \"name\": \"markup.list.term.typst\" } }, \"match\": \"^\\\\s*(/)\\\\s+([^:]*:)\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.label.typst\" } }, \"match\": \"<[[:alpha:]_][[:alnum:]_-]*>\", \"name\": \"entity.other.label.typst\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.reference.typst\" } }, \"match\": \"(@)[[:alpha:]_][[:alnum:]_-]*\", \"name\": \"entity.other.reference.typst\" }, { \"begin\": \"(#)(let|set|show)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.typst\" }, \"1\": { \"name\": \"punctuation.definition.keyword.typst\" } }, \"end\": \"\\n|(;)|(?=])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.statement.typst\" } }, \"patterns\": [{ \"include\": \"#code\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.keyword.typst\" } }, \"match\": \"(#)(as|in)\\\\b\", \"name\": \"keyword.other.typst\" }, { \"begin\": \"((#)if|(?<=(}|])\\\\s*)else)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.conditional.typst\" }, \"2\": { \"name\": \"punctuation.definition.keyword.typst\" } }, \"end\": \"\\n|(?=])|(?<=}|])\", \"patterns\": [{ \"include\": \"#code\" }] }, { \"begin\": \"(#)(for|while)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.loop.typst\" }, \"1\": { \"name\": \"punctuation.definition.keyword.typst\" } }, \"end\": \"\\n|(?=])|(?<=}|])\", \"patterns\": [{ \"include\": \"#code\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.keyword.typst\" } }, \"match\": \"(#)(break|continue)\\\\b\", \"name\": \"keyword.control.loop.typst\" }, { \"begin\": \"(#)(import|include|export)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.import.typst\" }, \"1\": { \"name\": \"punctuation.definition.keyword.typst\" } }, \"end\": \"\\n|(;)|(?=])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.statement.typst\" } }, \"patterns\": [{ \"include\": \"#code\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.keyword.typst\" } }, \"match\": \"(#)(return)\\\\b\", \"name\": \"keyword.control.flow.typst\" }, { \"captures\": { \"2\": { \"name\": \"punctuation.definition.function.typst\" } }, \"comment\": \"Function name\", \"match\": \"((#)[[:alpha:]_][[:alnum:]_-]*!?)(?=\\\\[|\\\\()\", \"name\": \"entity.name.function.typst\" }, { \"begin\": \"(?<=#[[:alpha:]_][[:alnum:]_-]*!?)\\\\(\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.group.typst\" } }, \"comment\": \"Function arguments\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#arguments\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.typst\" } }, \"match\": \"(#)[[:alpha:]_][.[:alnum:]_-]*\", \"name\": \"entity.other.interpolated.typst\" }, { \"begin\": \"#\", \"end\": \"\\\\s\", \"name\": \"meta.block.content.typst\", \"patterns\": [{ \"include\": \"#code\" }] }] } }, \"scopeName\": \"source.typst\", \"aliases\": [\"typ\"] });\nvar typst = [\n  lang\n];\n\nexport { typst as default };\n"],
  "mappings": "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",
  "names": []
}
