{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/shiki@1.3.0/node_modules/shiki/dist/langs/awk.mjs"],
  "sourcesContent": ["const lang = Object.freeze({ \"displayName\": \"AWK\", \"fileTypes\": [\"awk\"], \"name\": \"awk\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#procedure\" }, { \"include\": \"#pattern\" }], \"repository\": { \"builtin-pattern\": { \"match\": \"\\\\b(BEGINFILE|BEGIN|ENDFILE|END)\\\\b\", \"name\": \"constant.language.awk\" }, \"command\": { \"patterns\": [{ \"match\": \"\\\\b(?:next|print|printf)\\\\b\", \"name\": \"keyword.other.command.awk\" }, { \"match\": \"\\\\b(?:close|getline|delete|system)\\\\b\", \"name\": \"keyword.other.command.nawk\" }, { \"match\": \"\\\\b(?:fflush|nextfile)\\\\b\", \"name\": \"keyword.other.command.bell-awk\" }] }, \"comment\": { \"match\": \"#.*\", \"name\": \"comment.line.number-sign.awk\" }, \"constant\": { \"patterns\": [{ \"include\": \"#numeric-constant\" }, { \"include\": \"#string-constant\" }] }, \"escaped-char\": { \"match\": '\\\\\\\\(?:[\\\\\\\\abfnrtv/\"]|x[0-9A-Fa-f]{2}|[0-7]{3})', \"name\": \"constant.character.escape.awk\" }, \"expression\": { \"patterns\": [{ \"include\": \"#command\" }, { \"include\": \"#function\" }, { \"include\": \"#constant\" }, { \"include\": \"#variable\" }, { \"include\": \"#regexp-in-expression\" }, { \"include\": \"#operator\" }, { \"include\": \"#groupings\" }] }, \"function\": { \"patterns\": [{ \"match\": \"\\\\b(?:exp|int|log|sqrt|index|length|split|sprintf|substr)\\\\b\", \"name\": \"support.function.awk\" }, { \"match\": \"\\\\b(?:atan2|cos|rand|sin|srand|gsub|match|sub|tolower|toupper)\\\\b\", \"name\": \"support.function.nawk\" }, { \"match\": \"\\\\b(?:gensub|strftime|systime)\\\\b\", \"name\": \"support.function.gawk\" }] }, \"function-definition\": { \"begin\": \"\\\\b(function)\\\\s+(\\\\w+)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.function.awk\" }, \"2\": { \"name\": \"entity.name.function.awk\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.awk\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.awk\" } }, \"patterns\": [{ \"match\": \"\\\\b(\\\\w+)\\\\b\", \"name\": \"variable.parameter.function.awk\" }, { \"match\": \"\\\\b(,)\\\\b\", \"name\": \"punctuation.separator.parameters.awk\" }] }, \"groupings\": { \"patterns\": [{ \"match\": \"\\\\(\", \"name\": \"meta.brace.round.awk\" }, { \"match\": \"\\\\)\", \"name\": \"meta.brace.round.awk\" }, { \"match\": \"\\\\,\", \"name\": \"punctuation.separator.parameters.awk\" }] }, \"keyword\": { \"match\": \"\\\\b(?:break|continue|do|while|exit|for|if|else|return)\\\\b\", \"name\": \"keyword.control.awk\" }, \"numeric-constant\": { \"match\": \"\\\\b[0-9]+(?:\\\\.[0-9]+)?(?:e[+-][0-9]+)?\\\\b\", \"name\": \"constant.numeric.awk\" }, \"operator\": { \"patterns\": [{ \"match\": \"(!?~|[=<>!]=|[<>])\", \"name\": \"keyword.operator.comparison.awk\" }, { \"match\": \"\\\\b(in)\\\\b\", \"name\": \"keyword.operator.comparison.awk\" }, { \"match\": \"([+\\\\-*/%^]=|\\\\+\\\\+|--|>>|=)\", \"name\": \"keyword.operator.assignment.awk\" }, { \"match\": \"(\\\\|\\\\||&&|!)\", \"name\": \"keyword.operator.boolean.awk\" }, { \"match\": \"([+\\\\-*/%^])\", \"name\": \"keyword.operator.arithmetic.awk\" }, { \"match\": \"([?:])\", \"name\": \"keyword.operator.trinary.awk\" }, { \"match\": \"(\\\\[|\\\\])\", \"name\": \"keyword.operator.index.awk\" }] }, \"pattern\": { \"patterns\": [{ \"include\": \"#regexp-as-pattern\" }, { \"include\": \"#function-definition\" }, { \"include\": \"#builtin-pattern\" }, { \"include\": \"#expression\" }] }, \"procedure\": { \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#procedure\" }, { \"include\": \"#keyword\" }, { \"include\": \"#expression\" }] }, \"regex-as-assignment\": { \"begin\": \"([^=<>!+\\\\-*/%^]=)\\\\s*(/)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.awk\" }, \"2\": { \"name\": \"punctuation.definition.regex.begin.awk\" } }, \"contentName\": \"string.regexp\", \"end\": \"/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.regex.end.awk\" } }, \"patterns\": [{ \"include\": \"source.regexp\" }] }, \"regex-as-comparison\": { \"begin\": \"(!?~)\\\\s*(/)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.comparison.awk\" }, \"2\": { \"name\": \"punctuation.definition.regex.begin.awk\" } }, \"contentName\": \"string.regexp\", \"end\": \"/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.regex.end.awk\" } }, \"patterns\": [{ \"include\": \"source.regexp\" }] }, \"regex-as-first-argument\": { \"begin\": \"(\\\\()\\\\s*(/)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.round.awk\" }, \"2\": { \"name\": \"punctuation.definition.regex.begin.awk\" } }, \"contentName\": \"string.regexp\", \"end\": \"/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.regex.end.awk\" } }, \"patterns\": [{ \"include\": \"source.regexp\" }] }, \"regex-as-nth-argument\": { \"begin\": \"(,)\\\\s*(/)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.parameters.awk\" }, \"2\": { \"name\": \"punctuation.definition.regex.begin.awk\" } }, \"contentName\": \"string.regexp\", \"end\": \"/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.regex.end.awk\" } }, \"patterns\": [{ \"include\": \"source.regexp\" }] }, \"regexp-as-pattern\": { \"begin\": \"/\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.regex.begin.awk\" } }, \"contentName\": \"string.regexp\", \"end\": \"/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.regex.end.awk\" } }, \"patterns\": [{ \"include\": \"source.regexp\" }] }, \"regexp-in-expression\": { \"patterns\": [{ \"include\": \"#regex-as-assignment\" }, { \"include\": \"#regex-as-comparison\" }, { \"include\": \"#regex-as-first-argument\" }, { \"include\": \"#regex-as-nth-argument\" }] }, \"string-constant\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.awk\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.awk\" } }, \"name\": \"string.quoted.double.awk\", \"patterns\": [{ \"include\": \"#escaped-char\" }] }, \"variable\": { \"patterns\": [{ \"match\": \"\\\\$[0-9]+\", \"name\": \"variable.language.awk\" }, { \"match\": \"\\\\b(?:FILENAME|FS|NF|NR|OFMT|OFS|ORS|RS)\\\\b\", \"name\": \"variable.language.awk\" }, { \"match\": \"\\\\b(?:ARGC|ARGV|CONVFMT|ENVIRON|FNR|RLENGTH|RSTART|SUBSEP)\\\\b\", \"name\": \"variable.language.nawk\" }, { \"match\": \"\\\\b(?:ARGIND|ERRNO|FIELDWIDTHS|IGNORECASE|RT)\\\\b\", \"name\": \"variable.language.gawk\" }] } }, \"scopeName\": \"source.awk\" });\nvar awk = [\n  lang\n];\n\nexport { awk as default };\n"],
  "mappings": "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",
  "names": []
}
